%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: coursclaire2020.dvi
%%CreationDate: Mon Mar 16 15:28:32 2020
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFRM1000 SFRM1200 SFBX1440 SFTI1000 SFBX1200 CMR10
%%+ CMMI10 CMSY10 SFBX1000 CMR17 MSBM10 SFRM0900 SFRM0800 CMMI8 CMSY8
%%+ CMSY7 SFBX0900 CMSY9 CMR9 SFSS0900 CMMI9 CMSY6 CMR8 SFBI1000 CMMI7
%%+ CMEX10 MSAM10 CMR7 CMMI12 CMR12 CMBX10 SFSS1000 CMMIB10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips coursclaire2020.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2020.03.16:1528
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.0: CMMIB10 003.002
%%Title: CMMIB10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB10 known{/CMMIB10 findfont dup/UniqueID known{dup
/UniqueID get 5087392 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB10 def
/FontBBox {-15 -250 1216 750 }readonly def
/PaintType 0 def
/FontInfo 8 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB10.) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /omega put
dup 39 /phi1 put
dup 65 /A put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943569C4269F4A3F32986A7D15
50483BA7C04CAE03D8C22F6F9A1827004DE75B70455207585BCDA37DB2ECD162
363518DA08026AD9B621422303A6D262158CFFCC48946A47FE42911F1A43CF10
7CE85E61151664036FCF591A1CFF0E7AAF263909A6A4A50DF0CDB60C91A75327
8C011FC63A462B0598140B4357EAEA08DC2C5445E1F8C2C913B721D5A1B67941
77BB66689F330A22D1DE5D86B2C4712DE9EEB66EF95D1E68BE947672CBEA966B
3E26531084152B1412F48697A965C85B0338CAD1EE054DD4445A9726A72E959A
B5B74F0E0A5A8F630116FB8342254BC455EC3667E184A9954E0B76EF54015BDF
F3DB7D1FAF44EEEF38E5F07E9589B85ADCB9B529CE9C889CB4C43D1C7F5C676C
DFE91F37CD6CD338DF774DBBAB9A1493C7384ECD4B588506F23A024487CE4903
0B8C9D1483536BF7CBC05E9326211B9211F11FC8B2B098A0C5F89F19106978D5
84C9134F45A542D914AE56D73299B3FDC93C2E8F4D271B54F7EC0FB05C1DA397
E9A2036EA69C903EB95485765BB05BBD2E021ADD7B5D83555E490EAA81157819
A2AE883E39B4254EAA5C4FF60087C4875CDB9E4A85A54955EEF5DD5B15F8C970
8E22FDBBE98CCD8E49C27F55616F3588E6699202AE58B0D9A3E398A350D90CA8
D3BF920E504EFAF93B5CCBB336B072F2B3EFEA907599A95774F4870B6656257A
29ED37ABFBFDAA41ED08161F473C20CADE82D6F7531110CE680EB172A2024F8D
6F02DDD49350CB0BCC97C657BEC9A7A92A7C1E623E8B0E409A74B01DD0A470DC
94ED4CA0B6BD786EE287B753ACB1C10BD826A84D8FF92424FF1A2418A6EF9BF8
0B3D0F708E2F52E4557F497E749CA9F2E513F33D6D489612C68B68CDBBB4CE24
E53AC2AB756F64B838CD2B0D9402620B0903B8A357D8020DA8B4DEF15AA06A1D
D4D78057167B901643CFC357D7283A850C139E1BBF6E4079F375EAF63C7C4F7B
F630FB23A70A90178560B1A2C7F64A2B8796D60826F3B10BEFF755CB59DC26AB
FE5E0630FA1E16D083C8A5ADE0345F783D771AFE185F3DB251C33AD86127C0CC
548400D92F559737FD421E6D1A807AF696A22C1779AB236BDD37F7BC467570BD
4C1981D141680DC78513430DE03DCA87134EE46E90471F4DDFB4D5AF445433D9
FF6F9700904F274A610E5978C0C14110C00C0D49891AB4BC8690BC93418E9EF6
DF7A3BA8AF0BD66C17DA2694FF55528771B28262917CFFE822E973DA4B55AFC4
AE9F6C28994E25F88612E804C918278040097C028E15C6B7FB53332908842185
10217D7AF376DC438FE712CDE9C50040E0B79F4BD67DEA70C6C2FD34FDA699EB
0F6047A613FC8485CFAEC294FAA0214F0639603A00F19A5D92A3BE89E5FEFFDF
CBE800B960AFAC6EF1B85F4B74D8830266D0FDF78081F6DF0F596C90E1954C09
631D98F44A8F0C2394AEDF98EF8BB4D21AA7905B3703D76FC4E104389E61377F
92CA0B2A9CABDAF99CD194E473FA0104ABA283C76C20F003C604199E6D4D2A5F
C72FC32D84A1F4EAEE4E20660BA4C14C244AB65F000B6D896054B2B52F19F708
CB80929D9F98AEDC99365FABB6FC42D9337653ED45D2A2B802017BDFB8D28F62
745B5D74F4411CFDA724189030854D6D578DCADFB37B73AE15E80EE20EFBBFD7
959AEA06EE4A93DCE0D30B894D811EA3033FE26358EDEB614DA60CA8F9DE9855
F26F1B7FE1EC8DF0E6983ADDE63E3DC55C1088EA3091C21FBEA4C39E59BBF3C2
7C4EE5AE85C89FAECDBE6BED7B789D390EF78674F41A8104BC970E81FA9CCB45
DF6B8C2C2DBE4DACD0FD66877529BADA909675A761460C3F6B6F122ABF3C4F3C
C2B74804989359C5C127B69CE1D89AF4A74BE3B8499014942319D03AA740596D
863F0ECEFB11825FACEACB3E6971762E5BD8CB9D0055C620F4E276C3339B31C1
C321D785E1FD9D7AE53725AAEF68C258D2AB7F8DA4F9B95DD5CE20C35F3E9908
964C6CEC56D0AB5B34FE2AFE412455C971881B144FD7D979BB6C8B721A6499EE
D39109FDC63E5DDE7CAF6559CEDD080A1624690BB6565FB0828D5025D153145A
E8885E5D37301BC1ECF95161DD88ED99FCD11B77BBAD6BF1E1D1BB265817AD2F
40B223CD712D48CFD86428661D191D0DE40CEE65272A90AE80C134307D575808
57CCE5A72EE709196847F25EC20775359490CD96F818E135A4770A5D477FACE1
18C3E44F1C1F60D1B6BA8B206F107DF7FB7167870392CCB34357F9E4499A4164
0FD3EE38365F9F16642FA5D4BBCCD53E9680174838110C2F341E8856923D67FB
17F77E3C9EEA8B51509ADDFD595784714495BB36BF6331697025D64718C37131
782349E44FFFF0CC73A9A01D0F41D89A433D01D82267B25B15774CD010594C91
A5FE2AB68455420213D78D44D0D29DCBB7C27381182947FBA133FA137B8B7A78
9A1514A411497C4EAE49ABF00971280276284E642036ACE628F142181CAEC3E2
2FA3B8B74109C3317B8A0DCF444A2D7CD40B56A6A0FB571F29020C10467F8E5D
56DFF57F4B067C7115CE624EC693759F6C93F10C4BF79C1083D72390CF06110B
6A909581DCF8D72361238801670A67DBF1A2C831DBED6740191FB43F325AEEA2
7CBFF48305A64AD9FF4EAE3A6F71596DB0E5A1F5B6BA2B6869F4F65156E823C6
4FA7BEA68663C5A539F7609EFFB902DA29DB1AEC8D477051840A9AA16FC5389A
121D76409D28E23E7908DBBD8FF823B62036C9526C3B10375A9385A4AF991B59
88BF2D51C62FABFF359AAF056DB79D13260016F6217B32DFED2938DF6A313D9A
F4852580D0C5357C413D5E06C883D19CC2E6968A5902DC3E4CA25FF06C6F76A6
9E15D2395CAE81EA10644263244B15EAA5A40C6E3D66C0B6AC3AF60FE4C1F473
6D4C2A110EDC509210E58B4A5E5B8408170535D1321825986A1B998D105991AF
CBD6A46610E58EB90C9ECDF50BC0D26C7A681F6670ECCBE1B091808E4016D871
E3E4123FB6B1927307950B814B19D665E8CE2D5E5A77BF59108B2D9E183A1BEF
7D229985E5D326571C07E94A68EC0C495E8DA0DF16C11F6DA761BDF810195971
3EA07F0BAD9E1118239673FAFECDB14C685427B9FBF3D309C726D9AF11FBE3F8
9BBA94E8331845E2CD62549F90EDA5482053354CFFED5185ECBEB1305057F699
3FF0F6B568B180A1690C5734054B8903D637F31F3255526DCB44C8549B7E7AE8
65EDDA8AC5A34FF63EC3DEE34A9EA6F7FEF817CEFA9D7B22B603ABCEC4A45A17
4A5FE48105B99857693DF7C56F148FD13F085EB821CBD3F3DDB49138B1875A98
6D6E48B2C2C124EC0BC9164989AAB1F5AE8C0F21E63193C70038DE654D67F565
431FC9CE4B58D283A2DAA40287616409DBB7F7E94DCCACDF68CD8ECB19B98BA7
BD00C1499731B7959DF35899DEF7F684CAA993990B6239B66BB2220919C36185
A3BB431DCD9197A67852D137C00BF45AF3698C115A41CEBA5D3F1E2FF32717A1
69307623AEAF8287EFB7A7019B181C30F2CF4584351E8176E17A42BB48C5F521
B4538474B2724B5DB5CEA51E783E870AA97FC47401CA0FC0DFC4998613F2946B
B827C2F7E874267DD7BE63ECC00AB0E2448E7951EEC5DB4095F9915085A97AB3
812A376AC0101429983921C76C8E686A52A669E8BABBE21354C4A74A6EBD99E9
E2DCCE027FF45D75DFA6547FA60F2A63243D5A3AE3A808C75A99F3D42839A080
557C7DE6628F353F57B704B809F249DF208245612B47221653F42ADF0AA26CF8
57000DD580F6BEFC12E654AB4C4317490832055B92EE69CC2CF85A0232986CC3
819877F3DBAE3AACB1F431C216077B528B1D863CCD0BC6860C97009B90F33779
4DD77D702A114565F58A1DF4B7FDDCA0157CB0A7E74A116033212D83C1C2699D
65BBB42025622243B1A25E399014D0C0582DC50561373C8631D79148CAC3DB86
DAA8CF5E39387115637865FCC04676592C3365F2130852EDA3FD572A353F4B02
497576CE8B5E7BC90A46E02E20536AD5DC1F3EA2B832253D1D1A819B0BDAFE91
893067A21AABFF14BF0485EFF09F6256A58772FF91877896F54582EA274F32DD
CB96295DBA8BA6FAD260A71766FBAA4865CACCB938D96A7F35884B2F80DE838A
532F64A69274B1E648E6B18333465A3B89E8EC4ECED5855F6188825DC2D232AA
88283656765F0F957E152D46620E0001C4B0713F7D9AC4E887B649593353DFEE
334A3C8A3DF606AD48E286A7962ED8F7B0F382373CF35DBAFBAAD8B1B4B564FB
D421EC6183B7051E3F3022E09818EA7DA564EE44E054C995F112E33DF2A7C38E
B5BB24A172F51B5FEA5D11A81957A075AF1CC2D7C9041F85E46709ABE201426C
244C07EEA7550E78D3866493E451937C404152E4B9E081F52653EF379AFC7F85
D00FDB5360563EABFF210F4D46574091A6FBADE205D15BC7A0EAC7C25BCF58CE
479497AFAD121023BF24D9737C42F4566B3CE3E0DDE592E02A4088354A4D5799
02EB0EBA57C13A27BBA913EB949A144FC4F913E3A06FDF1C7C88AB50BD994F8E
08A5837496483EE06EDABEF4381339B1007CDB8D888A2770536EB20DFFC71327
B768DE076F35D951034F4E09E18359837D2D5B80339885FC6FB6E6CE88BC0C7F
465D36783E58902AF41670D0E01656E2983B45459BA7D7822DCA1D505E36F554
4625A1684579A20F7B9491B949E2FE69F32A016E62A979EB9C4A05944001CC9F
CAC4B8E45CF45726B6BF10811DB74CCABA5EA5E5F2AAAD3D24B2CBCA416F2BF5
C86B6495C5C820757C4743F1464B300F47EC054EA29215AD2F2F17F55AB92016
9919577ADF4BACE5695986055FC4730E531FE82E9D926B1B03A8C204F6FB4A39
1C94C310E6D5F2F53D41BBDF76848CC247C89D4CCE56EE40FADFF0FBB48804C0
1823A8A70992C265A469576F47CA341810FFC1B8B58ABE8EB762567DA328B25B
A9D4F3472428AE0FC180543D29B8E4376D7EC48D25A411991924FFC2DF520BF6
90A7B08513D2A6B42F2AA51B0E3E5F2F6FD57E63BD1736482F303A13D6E0EAED
1761211598B1F2AB26DDD5D45ED477172287BDA7062E8AF61D232473EC060F68
31A225E0AF2E6A5BE2D8604384359C53F880B0A503B5DF5C98D2D657D1466390
6736B42A24D1DBE55ACAEF4C5058DE5ACCE069D39746488D6AA244BEFE1F32D1
BF65D0EC3FADF515EE45E672AAC72040A1E1065DB5A52FC889E1650487BC4C79
77D55ACD9D726C74B6249277B0DF721ADB3293098639658F6796F7A012416C14
7C694BA55C734A527ABA0C9E6363C2C00633058B69261961658CDC29A477784C
90517818017B6BF89580BC66BF15757490F131D9470A323287091DF45DF490B1
9328CCAE434A9637E0E7D3A63A418989384C98463294D25CB07883B8637AC816
57A0AB17C4BB9891599D2B8398DC08A13B73A2DCBB9A79218C161AEF14D238A0
8D00C90ABDCC18B11AF05A54621B19294D09A4B533A7F1D4F0BF2E637BF5E723
53AAC5785828293988797F37B8F14C7CD165E8587E48A876C96D701F46438349
0DDF52FB12DE623F786F13D9BCF2D5BFBBB9D5A16E3FBBB5E6A9C34494FA3F6D
B81C12FF86521554113D1AED9A894E5BE1E7225A9B98D4980AE902A8DB3DF1AB
5D48B334C4476EE4FAE42C2CFFFD1BCFD99D82AB3992D3CE1F8642FCF7BBEE3D
5840F516EE8F6E87B5294DC8BF2DF4A0B7A380CF7A2BECF45CE0B0F8A996A463
E6193879C8E25724BF182AEF116B7FFE8BF1A1C7FB6FEDCA86965D325538AE1F
2863A49700469ECD3BEC3D75AC255984373E4A5A621AFE445A10B8D97EF1BCBB
61263A4A2009650770801C386AC6F95F02870DEC62FD6C556A084FD4C165AB0C
A52DF2633B01DCAC757F614FFBE09CE217092414A7C0FDC43FB02DD311A70063
2E594A67C9F8D8CD037020C074BFE24168E810C8804EB53F16CB67ABD8C9F99F
80D65C981C4221E857378C4EA79E5CF88CD53B841C2CEB7C58581AD1C3EE79FF
6B07BD35895A8843393EA65FD48BD248DE0E7799845B1B568189EE76445A58E1
42ADE3CC51747B8B97E031CD51E90C75880B6EB5D7729BC29EC0AFA8690955C4
AA5E809DE62E0AC18C5F1A6FE5E5F767B70C8DC44C965E7E2E8077938B4EA3CE
F119F7F824DAB88946A3BD00FEE7D8CF68B5A35614F864473C24A95F13C7BDC2
00F018B5BD313629E0BF5A5E35D0A34000BA338653FEB7040C3D5A43DEFC7FB2
5999A596BB7A701E8E03E8D3D35FDE11BC8421E8283EBC327F7C9F6D457E573D
073755A97EC24BCC4C33D93D72F62790E732CE02320F8D7B385DFE2230418B1E
70AFA7DF7D83D7E04A2F657CA6C2410A63F9B45C562B7736A272349BBB18E462
A02BCF7CBCD049B2FA692445C13C4B28C1762DD4A632CD41A8196DBB26075B7E
9708EA316266289D910151A6F7FD5F4755E7A41DCC3AADEFEFA2F28D241DC4D7
0AD828E18F7541FAD3C51FF4938FFD048E1EFFA5A6E443049FCA2472FD9CD0D3
00A0AB032E36C43ACE958C75B2772BEEE4327A53F279FA49DF38E5A3BEC64EBF
7677CCD8EC1B972B65FC2643DC5064EB8A66A777124B70F2DC6FE62030EA59CF
9E328396317798C1074AF49EE9698EC5B3A0DF1112669CB2EB0E2B6948DE7DB4
B136C23C5D0B2DEB49808EDCD5A3B68E161ACCDFA41C8FEDDA50942F8D2E75EC
EC36EB127AA8656B0EFCDEE65748D32220E16F296B8D06AEF513E272CAE380EC
17A1A2B0F235FC70D479A606B33AFF70D324C6FF178A38DBFF6F2BA86115FC2B
7237BCD1325690F655B912C30BC069B20095279D01D4AFDADEA0E9FBFAC0B22E
60E377515AF3012FD9069DE25DC4FA527AB6B2EA9CA5420243D815C95E0F4D51
FD84FDC5341F20BA6BF1520C684788BA2801A7CF3B95932EDB3D8693ECE35D70
3666A19F6348D59155A89FF25E119B37D5AF6635843E4FDCBBC413F4A6031F4C
615AA55A257FDF806FD0CC1A65FC78F1427DEDFBC1FC71408978F46E3F32E8C9
96FFE6AB284538B37213D6B88AEA47E99DD73D9AD4369B428EC913CBB75FF2BE
D9D9C51701D2D0559632530D6231586A667F3A530FF2F6227EA4CDC10BAB9FE0
E313D378C933138BEFE6D0639DE34F45A5CE2049F5DB6E28A70246877C55DDF2
079FB885DDA5C02313345CE0D2373638BA9990A6911978264D314CF74DF63517
57EE8699DEECC391365AFED7C1329813024B3ADC3565E28D754217B5B1EE6BF7
AF11791FC1BEB8E6835BE35B05CCF2992ED7EB12909C9D10E89DDF362036ECA9
FFDA4DCA0A6B1485F4C4B8A9BA588C708DEE0286A83FBBC77B9E9B8DEA69E54C
D7DA907064DFD9C45D3CEA56AE7503493D5F4BE359D3F1669F0B4722B2171811
C8C58B922FB5A692314BBE92730DD235964A7CE0DA5F79507D659EF04BAAA9ED
372D08CA888C6640CDDF10C3811BF9679C6340418C89C8A56E50467C11FD1BF7
D7A58A97F117F511B5BDA0F10AA18F32C4A6A2B7AD54974DA8E693381243AC52
1BF222A8CF93A087FCA2CBF3C036E803B2A5FE026072BDEF9A6AB04B50A9AF0B
C78CB24EAD3C4C6C1043F6701FBEDC2B16C73B0220B1226E8CF1C4AE76A77D50
A4F2FB0D95866FC447A648A6E95481134C882B3CFC3CD9CD8BE6B0D25A1CEAC0
E1CA4591E98EACE52EE14B5FE74A4A729CD3E5580A9B0D0473AA2ECE3C05B9D3
F253C0B613BA7CE0AC4D16FD02C19C536AAC90E5511DFABD5837A3B800C49239
871F61F40EBB75EE3024F37818ECDA106D09D2647CCC4E6AC34F49B8FFF4238E
DC8441F3D1D2660CCD9E74EC97A6ABC38DFD67586F2ACE7E0A5E3221FEAE72AE
015057767BD78B47348036F41BD7AE960ADEE7EB6DD68E768698E440433640B2
4F4ABEBE5D0390ED4EEC3E1EEF06583E92AF482608A8CE18AAD60578942157A1
CD20EEA08C935B71693DC6846FFB81B4DE950B5CC9FD22C724FB5377CB991A5C
2AF54FC011F3BC6C0A078E9B606DB858EEE6A39ECB6EE2AEE56303801300B6C2
844758E01CDE1CBD6E86FB182C0EA6BB202D24FDB1756639C5B34ACA24F4552A
380EA414F8A68E92B1A89816B0D3032CB96697D32A04F48BB71C01A499E9265F
E9E1F413E4A1DC362FF223737BFF10D0F34C20B636158E4B2C9855429B27566E
CD97E10A2E18ED258DDB6988EB495F97270E80F12CB35FAE7B5298621FAFE707
B2EBD1939E326C53056C689393D96E51921C1F3610A1710E677352D9DE7A9D7A
BFCC7E2B16DC76C559856697D857B8CC730202246AFFF94CFE699C75C9B53FE8
3E94CC24B0A067DAB403E13D73CD4C7940ADDDA8807E0EC4E719F49713BD600D
D489EDD9AB9627A5898438C08405E7E498B54BECABE9A6E07F48DE31835F38B8
1AB79B249808F34DDBC4FE8C0F6C4C08A793ABE569309F396FE9C02E2F74D40F
727E18EAAB354322597E9E2CB6356D08D076879EBB81EA9C0251E118715130F7
0568BE3651A12C7584735403A838FB4FCA689C594D30EFD8978B60597F38126D
DE7AF780B129B5B4826BAEBDA5A1745A04701609D3B4197505451CCAA3F440DD
8C86356856CBBEE645DCBB68F567337F29EF574D37FE5156BAA2773E37340553
1CC0BC03CCEC5A88E6D397473146F95497925278F505934850D71A4E68952F39
914449C018EDF41D9D5114A2978F0BA76546BAF894015A4C0C33336265A05F8F
ADA817F4E2E61766CA42FA1FCF23AD9D6D3824A5817933840E44210D6DAFC9ED
40D8AA2CAFEB49B5B8A2A97CB90763DA08601A8E400C0E5D7EF5791506AB9B64
8B2A6135E2D58873A4C6A319BBB1BB9B3B25F9DDDDA44753B42CCA5B79B6DEE8
EF09D3C8A60C1AAF9C8712B924AAE84DFF424C26E53E86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 50 /two put
dup 99 /c put
dup 111 /o put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD75E7FA7063C1FC6A09929F71D2951F8C7AC9B41F8EBBE733A3ED5070637
2211F15B3ED7B79460164FCAEE78EE77B188CC9E4E80C1411085BDF65AB73889
A8161EE9EDC0F20CE50771F0D7D51D9B3714E8197957EF2608FCD25588996C6C
93DCE09CA7A024CFCFD639205BB3CCA58EC083A21D15DE67C506DE77281584FE
E447FD019174339097D6A6C57C450840A1A93A6EC41ED59DB364BA341CC7203D
C681BA7BF6121F85166FC16147C9725B37975F37218B4107AD13268CA45E353D
5F87A16632CE92F3987AA4BD6BFCB957161CD772C8FCDC3F5197F9AF0D4EDC0C
4C73439FC80A8282E4EBACAF3C185A8AFBB3507019C9BD3AE5F315A3018EF68D
575DC828CD0A054DEF2C52CDC2E92B67453A386BB38DAFB134FE437D7816E5BE
207C5A838CDBE707D7EBC96196C583239F9BD4C929C8A0380169A4F30560DC8E
39BB12C194F7ADE0E3AC0FC95D5B7C533E849943DF2B55E16E7CFFC287ED50AC
0E4700266DF2D3E2EE38DE878B0187F9440016A4A40EF7E583FB4B65139B49A5
DFCBD9F980FB416DB623FD1C00094E2376A31C8B8517740BB970A762828D60CC
8C0C179271349363C2A7A23DD004F1CFDEA9E9EADF12ECACEDF85A7C1C0263A8
75A87CE58FB22B3C82A9A72957CEE1935B01D9AF0F69E40A3E822AA167FC128B
20C62580A62F7FB6B65C7DC81EAA5171081EAE75ED6163D8A24BF0C2EAA53C35
2E4077950210D000AC826F15BF6BED39E6B118319CAF3DB64270E993A2731369
9F9B902E50A75B9B9C8036DFABBC1381E3E8F3E2718334E3D0C301913BB6733C
DD02216EB395BDC03A68C911F564F24EF96F5F5AF2A170B9B81AF03FE703F25E
EB5531BA7512011EDD3A2905DDA06326B807D2FFCA37790B2795A57FF85CBE48
5028074C5AE6FD0BBDA45DB1863BD10A32095D45F2C43303FCF260D68FFF86FF
1D8E387434CB8468283FCDB8D13FD7D2FED741E1FB03AE32117CA723B27782D2
F6B7F64F4D5F8F05DCA2E07C722F568CDA7441576C64D2F5A6F86FFB00ECAEE4
969CF53D7A542540B3779F6FA1850F3475E2BEBF78692C3DD364EAA2C53FC435
4FA41AB4995E475D80467A1EC9D67ADA02ED417A0158B26B7B85EAE91BC06AFF
9D532827C6C00B57B985E99293BE908E9FCD6063C6B2E205ED42D17EC25D8CE3
2D21037DDF00C8ECC685D48C3346ED8E7245067212058FADC2996D04FD10F83C
CAFAC8FCD33416AC46B7DCF220863D5F1EE16DB151F0800BF5DEA7A86F8D0548
B9B577BC2049519D597074A003F6184639F0A83F3C1E3E8E02F708CF8E9AF3C2
39A493AEFDF4AE01294852F25F6792102281A8A498729EA38EF35F3F9DAD93B2
645A49E741CD1230E70A6AB19F8D941CBF8119F8C4965390F436635DBD68DD79
AA4CF9356B0D49AEA4C1C2C8370C6BEDEA85F6F1BB22ABBA85300CE47BFBB329
6C7EB9758DB4992BC8179E2FE75DEC641AE610758C6ED6735ABA8985B6C39F07
8C60599840E15C3BFEF26C8442D6147F9370ECBD3AB24982C4A92BB6F0367612
01C995528020790D858EDCCA1F88AB3A89D71A14AF03EDA56E63F1A04A679D0A
6098A5B68940020280B268185BB9BFAB83E65EA2D4B5BC4393FA28039754EC05
98624CD902CA0AA4E0928BD9005D198103B6BEB94AF53BB605690D18B490DC00
A4CB0B9067BAC0970555A26C3D2938ED97603FAE7146B11DC40DE66DCAA1DCC4
49B60C31C3094441230608FCB33D9D2D92105F9E04D032B50DD9DF54EE6002D0
453B026032F2AA0217FA1AFBA7506FA70D8C18004EA974AAF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 15 /bullet put
dup 17 /equivalence put
dup 20 /lessequal put
dup 25 /approxequal put
dup 33 /arrowright put
dup 50 /element put
dup 55 /mapsto put
dup 56 /universal put
dup 67 /C put
dup 68 /D put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE105BF5F504AB332FC17E568681
F423D1125A596766BE58ADC658888DB39BA74F67CE0E26C392220832FB036E93
7587E96684BFB78BD035F54AF71B2408241AAF548F996AD440155624B3EDDC79
2102EE58E1E27EAA0675F1F13297A4CAF514CB319E58D424A820B8F48984987C
481E5DA0E2175051DFABA089DE2EAFAEF470A08D2238E89847B3AF2E0EB863C2
56F65A0FE111F1339F716F21C2B9A2F6805366EDC8CC65CA7DB3E410DBCF6AF4
1ABCCBBDBA0930BFB90F5175DF10170074B385E963CF78DA2C041A76D2FBE523
A77C86D8611C937BC597AE358E9B2BA4A75521E5BA2AC7A7E1553D2FAF26EF40
A0C2F23C56E369F8222C44F7328F648FDFA7BFB75210BC8C089F045B84D686D4
4152440FB09C46B3FBCA64ECC0FD6BA584BB591C55448D9AE1428F59BE87CDDE
F66C2DBD26C476B82AC1BDD094EA39EC3BD084D3590E13E4EF5C3EFE21BA9B65
2975A2D9DB28A410425F2ECD509EB272A0B41A9BC074F9165399DC5F13BAD776
C3A8EEB113FDC66DD4D26A6851CC98AE4F49E8EE7A54678E39F4BB36175F32C1
49498B186503DC69AE660ADEFBC68F0C079EE304CFAFF8F9390029ECFCD5CFEF
4387D8376798F6651EE5DFC6C340DEF3CB298DB9C7CE5414E5FE19AB742F4C23
9DD3E493EF0C3E189080EDAD5A67F243F80CF819EDADCB9F88D3EC1A13EB99B1
2B623FB770FC84098C2CB0C2E532E6FCB71FBA3DE2208E6260831653A510A0CC
64B108E795B53B978F244F4915FB71912408BC014C5F6C1D6D179B703E28C941
BD36F5A8B87338F6D8723ECD35E45856C61DEC8FF554A86B68F77C160BB62698
D9058830F87466862DD8E370EBEE47671544FCC37B510DBD62D463BAF9BBBEC0
1548C892CDB0DCDE42799169FCF9D0779EC1AFD5BE1FCB7FBB6A93D1EC13F4E4
418D627058DA874F2B5F44FC64FF6ECA154C61CA11A44961B9366330B9AE3E3F
F76166CA5E37DC234D64AE3AD788977626BF5CD66BC0CDF7BAC10F74AB655AB8
E27D402721DD94A535E58E46E7D65ECEEDC1E0D19AE369C60856FCB88B64151B
292312FAAF5E04CCF7BB0DE8AE2BFA99C4D8887140C15B2B85D697BC7DB2BEC0
A10DF0B5308B4A2BA6710D96345151FCC3ECDCD06A7492DEAAE7E1814068EB6B
C95BB8CDACC08E8681CFBB3EDBD137CEA5F9F83B26289937E6FA4EE4417C97F6
36726D14F38CD6825245EA8FEFA8827CD0DAA2654F35DCA075B7954721289062
AC40E0CAB55ED93C04EEEAB72F7321D87466968434760522F12EE4DC7C117094
72D1E2B2C47740C7DB3E226045C8A32E89E88E3DD396D5D1F6667C3D93360FD6
16DC6F5BA9270FBE8C899F3B93E20C252308AD586013F9FC9A2B1574D59DA6E3
62CC076B3A04B586A352932F076B4B304E0748C356BB1C6F4AE7A08D17760FBB
91A2931A52B11D5C5800F0606DD2D2848B0A14B07C72A7E840B049876A351C39
75CE30A9CC1F7EA4AC0103538DACF8F3A4C5587C09CFB052316D98D0130B34B9
E45A32DB40269E6FB4F6472167F07183C8B8974D523729F556F7AA0C4C6F404C
96561FC8AD80898403536C62C823C05B7E8659A1B5C2561E94F98E2A6FC41C77
3F5C0B193CBEA6E6C0BA3C9D5994529A324CAF2F0956D53F85B0070FD3805BD7
94318343293E10CA05C33DC776B10431D1040175E46460F6DBAAB3BB39721492
CDCFB66AB4B4FDB08EC708912E67DC532F6E7219E996DE97D363A48DAE6AC829
159A39D17306E6DF1644C3B6673CBF4B4CB699A3B772DA6A810205E3D64BE510
E401EECF257B1E9BA408F61F9A703F8CA1B7497D1831C5B3EE2341E440B2F679
9AFDE868FA46823A672CDC2DC2AC9173BD761D0F75A7318856DC921E7BFDDE42
37A720AFD3A05E8AE7D2FA67CE266A35472159FD13578EFEEA11CD6F659FD4B4
D1C38308EBC8C52601270F9F0B4EECE091B099BE06B2DDB5A1222F814CBF5726
86F02CCC66343D1FB04CA6268BE36ACABE739174FE96125BE447233A7B1C040F
12D3836BF374D4BC7A1A19507358A3BFB42AD006EA53839CFC132DCBB78ACECD
EA0B911383CEBC324EFC214B62220A54268657B1629A0559273AC2639C95616D
E66FDD99A735330D62430FF0C736E6657BEC71B094B83ADB6388DEB6B52D2AAE
E78498D4CC752D0CA635EDE9C05BD86DE18BDAA7144C05B461A6C932E78EA633
57384CB36DEE7A4B7F484A55FFA513405B2524F216DAC9BD23A12A5F7182CDDF
BD025FA532D7FEF766207EE2CEC37A7614E08A83A9747993E09A5554308867D5
5975E8FFC42DBB3889F76B5F62A2A7645CAA4F4E05FFEAB108DC54DA0ABCFAEF
7E28573FAA7445F3B6258D11C3FF130474E87092695D1CC2718D7482DE8E6D88
2FF26FEDE1C204CBC5FEE3CEA4B95767D2A72A4FE9A552D3AB95C3D64577E235
26A2058C6BB8827E338B09C15D29F784CF83D8B2D061CF7617C17BA6F85D53D1
A596009C6EDB0FAAC1C3477360AC61B236F40F95BA202CC85CE0A0048FD4E9C4
567BC54D13E9B9F2BBCC510D02AF79726F28D1631ED76B290E58640F94BA1066
7B5E3A9F5EEC84C5BA3956C0B07779DECF0B4C99ECC7C328E37DCEED907047D2
FD92B242A0682264F9BD089371E190B8C3A97A75FB0167C8BFDCB3E7402D2165
61C535789880AE4665F9F873F96632130416B4B91F7DB640C108949A2C17AEAE
267CD42175DBD66E70ADA04B55617FDBDA8465CFB37F71C9E0D07959559C19
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 33 /omega put
dup 39 /phi1 put
dup 65 /A put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270E0DEA19C23FFED3F71721
1AC5997426FA5B49AA4D0AC7248E99703405B445971243D686E6D0ED3BE5D586
1FFD438FD25D0B9C6EF72F6C292B38CD9EDB4D12E9D6A39B957D144ED04C4D41
FEFB65AF01120C941E051B99E95D205AD9D4FE24BBE088A6DF3EE50851FEEA89
C68E3509FF99FAA6B34DC84256134A55488CC00FFD1316DA5983A6CD672E3FE9
80F730C19645790DD11C5A9344288022DE4E530064811EC36EBF5A75BEC8F6DD
5F6E6843964C45B67D8746657FE87EFB947F6EF31DCC61CDDFC39A277189D255
9750B2FC25423470B9D3B0C902A7D952D8E8FB528CB4E8CFD3A1B17BCD1A2D96
95130DFB4454B3D8C63B4FCE2D86964B7DF30DB1230AA9F26768803291A97827
D2AF45C8379364325DD8DC1AE11DD1EA55452E3F6F5CBDF5D34B08CD2762A167
6BB6CF6E1FDE3A30ECBD060A0E76AC6A0B99F79668F44292B23C6FC7B1ED60BB
A08F874D9E1B1661393BD85DEB50C52609C556F99D6D0A7E6D0F72BA8FBA5716
2992D855DE78716EFA4CBB077034D588939FB77BE9E4A34B1CCA02DD8EA089FB
3950BDA3BD3F3813188360AFC84BB2DC53826BB8B7A1336860061C894E583F75
A2D1339A463F38E5D6B7860F032E844EAC0ED25305E0D0FC6FDB636C4D0C4DDE
51ED0A34DD878E7CC7A87BF1B8EC4E5913FD6640DEBDACC45D478D0236F20F42
B25EF2797D3446B21FE79C3EFF5D09B8A4FDCC0CA32EC4F659E00F1754050A8A
F76E6F57DDEC0E3959F7E46A770ED8FD5C48DD005F5563C1900A7D1B745DDF13
B373039653BFC7CC1CBDAE2D0212EE39357FC38A52CE2CA24D82DBE530CFFFEE
1E8B31F5AFDCE21BD230DD5E123743B9706F145F27CF7283D883001F9ED1A251
DF88AA0B9BDD3E522A4D79555B9AA6DABF0700287CB23BF02FD3642BB4AAAC6C
7D12235977E80A3793B575271FDD8DCD6DA98BDED253E317B24F7202E4501D2B
900ED341F89CFA302D73C206FF636F6A97080DC84F33587783170FD7C71376ED
FAC797D9809D3708BEF4D90B9C7ADC78F5DCFABBE7F233DB56CF5CACE1E9AAAA
4A3E0C822755A6DF019A4CA177E4836543C56D9A19ADBD73105B21C0DF3FDF7B
EC5AA45E255A989993980F98B1881B14AA1F25437141B8817F0A1BFCE27EB552
AE22AC2AC78E66B7B636830DF48B5FBDE59979AAC86F98A847563CFFF23C1D22
A5B99008CAC38AF63FACBE1EB56D8A1641D8CDD085A203E43ADCC883FEB593BF
EE8DB4F20F980183F09522250D3D86FA5170FDFB62C4E8C29F860C02E8E88108
9785ACFF698D2779F80EF1D96249364D07A0DA74A13EDCF9F38E38B18150E5B1
5117E7170FDE370EE3487EDE0A148F2DCEA63D6F94A387941133D59ADFCEE2F1
7832386BC8A4E0A09E69DECAEF52BC77498E2FC48273E4E676A578F9DD3CD6D9
65C6B993E5BD9C30105A1A69DC285C22CBEC56DAE0796C3B046568E90266B69B
1C6C66C4CA3AF555168BCFC67F2EEF8A123F6EF31267CE2AA6D6EE74DD529EBD
D2A334EB552378A92BC7AA35A606C1373460FAE17ED3A60D88AF69D618AAAAD0
B5486DC44A7472D4B26EDDABFA48A062C62ED73CF46170C2F3A0655EA208F92D
89FA9AAA9DFF371B936EB1FCBAEE56FD65D82AA636617478F4334ADC425596C9
F47C327A800C663F43F0D8E923189A670AEF3E8002E7AC2CF17C32456F29C3D3
19275D19EA5C94F3715B1F7B613466A316FB998C4C3A280FAD3C58BB9D6690C9
6D8B14B8CEB37DC4E871D56F85F660299B890D8E3A751E9E77E75A2A12BA17C7
341F6843C3429C4FBB20010608C22400E171DBDC34964AF03CE4CE1D123F1B90
FF23FCC72B717C99048F41AF540518B71BC6CBF1F79C188D0CE372007F650FA1
A0714783259E73A8FF70A6B2E8D2C01BD9D54C0F5BC52EAC03881F6D7C9AF6BE
6E929B2825E7C76302C2E90A65DD3F12D32AC8B590EE4638D8AD76E059A5A850
5DF614382B79E9DE11CD7B171B9AB38FAAEAEE57A5409D632853DB2FC36D11C2
8B8D1C95F74F49E77FA515123754DDD6637BB972303DE424DB7C78799F834162
309D0F773CC88BDCE0723D11FB0E56C3882D764241F2B0C7B06039A9A3E3E839
975FC29262EB89B9543A4133EEC9CDB31645C87A470342434997C271B3DBDC34
23CF739AC51F9D0D19617E5483DEA4A8270A753F455801E4CDF1DEFA70BE6993
D664172D4BB3D56476B87396DB10BE0C02D7304FE0258168B25679DBBEEB2A4A
D64225026B368103CDD86CEA9D14C0F0657391669C61F7A1BCD27FF2730E4448
4817A545C29E0FE14628B8CFAAC721B4D12BF5C16533C466237E0C6F655AC79A
25274764EFFCE3412E8C8CC478D34921083021346F9D7B3EDAECD65F5A7ADC22
1DF0AC71FE970DDD88958FD9511EDCE60889ADF3073495314E51E6D0B3D42844
EBD36BFC047FDFF940C96E38DD92F120AB1BDF0FDE17B854A2486347A16BB769
692B89C6F9F2BA29E1C948FAD38357BCB277A7138AC2E08E83F57164323EF595
5EF1EB27CF6CF9C7EDBCC49AB7EAF0E284A5C3A4E02ED78FC6D186692B69B069
9CA2269759D15F9A5B9BCF57FC2139CDBFF51D5E25E6844296
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSS1000
%!FontType1-1.0: SFSS1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1000, tcss1000, lass1000, lbss1000, lcss1000, rxss1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-201 -321 1483 901}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B507C15D01A499CD662DAB17970AFD6
236E76C573CC9FB9694E108FF83C57802E37B0D97BB6B0CCBB876708E1C0AE12
639B6D6088724C2736DA733C81D25DFE023170C3E2E0AC6A45EAA1907ADA42C4
EFABA32178A6D1C31006503985160B12FD6374166398D1787A3269D2C7CCFAB7
E91A1CE678BD7C0243F24DF77B15E9A868AA443F373943B0C457FF8FC9DC9307
0F5BA2F096D06795A532EC51D5FF637C536536718CE60E8C3C88939D35E4C835
0B76AE3476BDC17D3512A089E8EBC0BF6089F6A02BF2D3A50FD4128874702004
85E310EAF5441362FC17BAC80D622299DD1FCBBB1D10D3455AB264A149CCD656
9AE99C064569609089333D49FB247B996A742264CE72DD298E6238B0B4EB0ABF
D246646736BC73523CCA89A1E0C0C399996AB57B45EA8278038CB66656664D35
3DF118976E222513AB5465A7C491ED6CE415C8D9AED9FD7F035425216300EE25
AB34CD5ACF13FFBFFD40E85C26FFFB8F58A3C81CD947C0164CC8E44951A54C04
06EB61352D34463EC4E512DF8E35A9BB3B7FDF3DCF2C457686262128F92BCE71
04910A9E2EDD37DEB407BF4E6783F873987A06CA0BD2FE7C0C6B16E529587849
F38BAFFD22FA7AF78FFBB691E482E007232F72D5F2C7E99E198BF24FBDCC17EA
E13D309023212E2F628BD344F0440EE19BF372FCB64D5C2EBA13F161EC542D59
8E25FE56025D1D428C0FFA34F447999C75C3EE79BCC064080873C6931CB24086
6C7C0C7D87342731B60D7D65663CC0B9F3739B3333D2298E58DD516C64440AA7
8A41E4BF4734EFBDD62C662C2FE53790996B4911FA239B60BBDD0810E75ED19C
95A5AAFB7FB949F6298CFD19502FD24B99CD5B7F09C57EEED17A4083EB64EC06
E1403DABB78F713EAA61FB659D85577FB496F37FA5A16B56402A36E1F506B20D
DF35F960F2C53349503940A618EFED89C421A13DB12CE38B87580F899959A300
0F673A9534C5FB8C4CE6705CF14B4944F2733B634C387DDF0B478A7FC629EF60
6553FBD86D1EFD996D6C56FC42B85256FD81815155414CF3492137013492BE91
8865CA6EAA4C14832705F37B72557A6FB3D593DC520D599788A86F9096A0F39C
2978BF9B10EE00BAC62CC929AE962133C1B87D15D799234EC8913B312E0315E7
E13A0FCD202A35676C071F4EF3E84242BE3AAA23733BCB796D35D807C81395F3
9D9B71029956BC7E8811F2EE19E84AD9437D134C3FDCACE78B900C12D742D1BC
EB274FF6298CFD19502FD24B99CD5B7F09C110E2C9B544530F8736ACE9515013
E4AE8F12F071E15494B97A27E5DDE591CB2705262033703006141477E9C16131
CF7061AEFC89490EC4209FBA1385B053495EC1D85CFF2F7700799A2F8BA7A2B4
91D3E042C69AA985BF7EF0B20ECB0CB937CC1F51BE27B23AA5C457C62C561020
9DAAAC282624FE5795A75CA1FD59DD21624877949988BBB9BA65711E637AEC87
8C29D73810612C0982882FBBF74F876028A71A6DEEB6E7FDFB84ED90CED66A69
8E677E3231F1E74276D6661C8C6F43FE6CAAE5C6D3C774DD80748B563C894966
34459CAE7504F1CB38152C2D1BB12C48B488157DB065F20CA9ABEED321A07D23
CA44FF826B636922E4F6848A23864E553A26728846D8B85EBB1644F070602351
45CB471C6259400D08E20A7891130E312ED1D1C51010844CB1A1776DFA4D65A0
A883768361B43CA02DB2C0F0A8250D0E561B8571151CA09DBA9E9108B526ECDC
0AD954A630EA96F88C869DCC73B23098C2056AFFC5FE96F3FD641BEB4281190F
C629E017AFBFDCB52862B7BBDB2AC67C7F64AD99761CD959CC80998A3EF7B1AB
A773F9708349C25680ED6DAE22761BB9993D3D84CB34901D3C1D592A48505BE4
30D7B52AA5B05F35726B802358B4662E40A2E2B5340FAB85706BCE44379C031C
3F31CEF8195F612252A6B05EE6F0277D8604E55CD680A641EEFD1E296310BE7A
115884D0EA95D933D6E1B874BA6AB0F43F389062C2DA6ECEA6D33D3CEB0DD59E
B53FEA77F70B3DF219A0415894E427C5F58E5723D19692083B58D8FA956F4B75
F6AB7ACC911DFC194F0249BDFB1944279C1A2719A1C65AAFD32B2D13FE6E9271
771B228F4218B4A46BF85716558079225EA490B5C2E04FC4B67D829695BA5760
3A8CDCC82E586EA67A010AC6052A54548AC08409B3CEBF9A8EEC08B27014A84F
59231AE10A6D116DCA10297C975CA531A5D4A5FEA848E691C1DE1B7CA4D8715A
C50B5DC2676122F9ADD82472F41110CB02E78537903EDA5FF9ED2B506024E885
051977CEB2DCD67FB3C5821F4684CD70084C47937E24BF415CAD0BC9A0503975
13C2B7C8301A7E20BBD0D266770520FE7063DFBAD33DD79161E9010A7F20E443
0D556FD8BF301E03E845F3BCAEA44D1C9067210EF667AD49B29DA3BB72A06A03
C92557D357501E8CFE107D653AEFE8B0CA73CFFE5B01C2BFDEBB08778F0097DE
E9BBEA10C04A558C6857AE5CBCB441E9B74A79EED28AA76288D82C4449FC82D5
608B54DC95744ACD3E49DE5F8D0EE1112BC33D67D8E96487398F0EDC29B39FD1
07D6A372B8317F50F378013DF0AE2BFEDD4DF5C0721154CC2FD78DAFBEDF22F6
F7AADD98910E662EB9FCDCB33E4AAA7AA9E5425F255B1AEB6A15491E783B3896
78B73851EB30D05C147E2264AB87BA6E9E9D6C3015F04F6FF3B376E0349ED95F
66BAAFBB089170A0053CA2FB84D667AB71BF24308617C5B22DE40ACF9023E2C0
46A56A7CFBC49D84B81157B3A133943BAF047E1D3A40FC658BA86D1B171D3E59
11487DB54D406350F5FC988D179B2EA36025F625187F254232B9ECFDD0C11221
AA2CF88BADC3AC9CF383C73C2A2ABC5059671DFC74991F41797665A88112717E
8B3183F1CF10DEFDAB954503D2CDE2A2B3F405CCC9D8437F7E214B87C48E4ABE
10DBF6324B24D898B7F861EFA48AA4D7324B76AA553BC5694CAB36A71F730CEA
3CFD9335F2F01297B9D3571F32519EE20162424801A8F350AF82AC7C975B168B
9B4718B1357877BB5E0F7C9AA892D52EB2086B422793AAED6F622C32E6AF5A3F
69F5F53EC1A078D729429FD862EFB1826A36620F4FE229C89F6931A3F8B9B245
FA6724E959D8FDCA9FA26EE7A019738ADC24D7AB7F99ADD20E469FE5C6B98007
7948C219C4B704FFCCE4E575D21209A43EAD269430328F9A6D45FEE2D2F23B26
AB4E37435BE59C2A1D11BE7E3A236ECDEF1A0FB2B6C0E4DB2807334C366E716E
972FDB8AD62C98E41501101AF50D3216D513A048F34512336F94DAF5104AB9C7
250B19DA566EE66B35E7069A9E7E1E2555A9602B8DC78428E144204B3BAAD196
9A7AEF980E86CACC07EE4C4E5B30C8EB8C3C3EA845AC2DBD01A9DB8EA91F226A
F6C759C4DC4BDAE7DD3DC0CB1BA4BEF78AD52BAB1C91318ED3CA92BB7E641ED3
3E9402044C84A4C142635631351C904EB2423B73BBF98600A9750877A742C00B
7BE3AC8FB0BFC018986F76AEE8E141490502696AFD064B6F7FE23C9AF1E62359
037314FCE713643CA0D9B77238BF3528485306DA0D306BB9EB46E05977717B9D
FBD96F34889D8E86926BD9EC0091DF799F3350AE5DDB7450C0CAD864B0EB9C19
92E5C1579CB19A17F28132BDA6007AEAA5EFEA931D89AAE980962317F67327FA
37240175DE12E93157F7527CFB15F358310D3B1A08671344A0D9C0254286D5CD
D4D797FC40EDF842D45EB51F2BB65067F6202C6144DB7118DC6978583836894D
F4F927EAF7871F9F8CDA9E0346824DA25030F36CB818B121EA39688B5B5DFFD6
711A62FB7C525003EBC0DF16A5AF5A64DEE8D4BF53CE36C5BF45731AE6604DD7
0E7EE6B3207AE6CDC15FA1B111E4B0F21817D8A9D9118E46B9AE1F7BA8C68F3F
14B9F346E5FBC6D75454C0F3DFEC6476CD621FABBC89D52BDBBEC31B8FE74757
36AE1662D531C6B5CF46ED61DBF3DA24C063941611DD87363261546A7790AB68
8B0169FA5B622125B11C5A2638E7F88C2ABF277A1314B4ADF04010860FC43E5F
6A86C0D8E5730E808893BADF86E89B898053B3E911E9E62A01DB63F00AE8DBE5
E203760F07F84BC5DD2F2CD9880143DD06E02D7E6F28DD1E6218DB1F1FEFB748
16B1530D1D9C45CB90B8F67DFE48BF6D5F68861301BDC31198D30DEFA88A0633
B81314B4DC6AA39F702077251BBC5D810EBE117E8FCAA9B56AA7065F69514B8B
6AA528E7B142A8A3A0FCB33F3EA9EB54E9B465EFAC231EDA83D272B0222D505E
E2423ADC32137E33E6CE245099A7E827C301EA631F6E5657848ED58DF141B5C8
F475827A252CB81BA23B51E82A2601FFB05D90A5A823129906046627D2492D71
C59F6BAD0458E2756AEA1FD8C0992AD79D47D1445C591A1A14D969B7B034C2C8
E2721D4B25D1BE3250BCD22804A32E68790A8E264C5D5AD12936EEE94F9313A0
303BEAF123FF6F80B4C9AC15C3F3764E71530634DDC7F67840A9233144A05137
3B52C635F736AB993967414731F0AA42B2127E0E151A0710CBCBC7B73B10C153
AF6A6CE6154AA506FBEAA2051B5DC30DE8512D95F7A82837DE22CFB3B0C9C3E0
3F133F08C9604EBFC0CF0BACC347750657977FADFA2A71C2848818D37EB5F84D
79BC7F29CC0E3937598804B0D5A10AEBE74F3FE437C1D54570764C5E1D239F23
449C2C03F196AABFF69EED7EF81F7C3DE36ED0BD0E131BEE0ADCF82BC26C0E10
39D469C16068D8B27FF8DAF3751FCE92730C067CA9BC2708F019E6AF12385D3D
28CD0DA778070D7497892FBB921645E54D9F9E2E1A1F760498C875EAE2F986F5
9CD46EBA8D71171C1FA0563740E68331824A4062D79C194B0C1C5E1B59CF735D
467D2AF7CC17918C3143446D2DAE060B5D6390F810EBCC680D1F41EAD880A7C3
B5E28AE879EEEBB609E8C7C5AB5B7B2B537B530B4AE329D5452E0BD1AB386A1D
4592FC935347BEBD60BFC9B53ED5503CD427DB2A534434D361E0B0A9F53C2B64
C2D9F7389E4301E903851F015D1F74DB11861AA567EA6E74744C42B434EAE975
BE99A8236E1CA94E2A4912214E3767961B084D00F98DD64711458AB1CF630553
013112BE6C7CA7398779040409BA9D7BC6C981D7E9570672DF1A2AD022FB8EE1
F7C3C6A6EA567CE8914BDD406E3593A4B535CFEEECC4B60E77FA51E17F880947
A63B75BCC2E5EDB0319CB08202EB10D9DBAD13588A78D195FAC2F61A64D9D35B
E4D83BFC8F8B9E92CF1CD44B174AFC211E20AA0B4204537495F57FFD4E3A74CF
B33117607EB05D71C1C089E6709B01FE48E1517E7A0CB3E7D78B1EAEBE1AE2E1
719A793B7CEC46A3F0AFB3B005456D7C9900A8349AE4DA64F841FF620C42D537
E0FFB9368E13DE596A23633E9DDB8045CD54DB8D7ECEA83C7C85D9024BAFA322
C58AF7500AF5A7F109F7DF90B7BA246AD1320D900271327EE24A784F56FB073A
5CE507B3802B31BA9BC572CE7201E13FA2FF4A86BCDBBBE977DB2F2A1E0B8D21
6B1063EA74DC5BDA80EFE747F4C3E725CDB4C9FF642B7EE6055EECC79576E089
CA01EB9DD6AEF805955965EF3570B76E1D0AEC536DF919F88AAF0457B627450A
B1DFE9124D79DF6F923D0A57141B4D7CF2A36D011E5C3F12C2D113621A572AE0
45A822BFB1FC9BB5B9D6EC21CE7625A147FC422700C5CEC988FA308A5E1F7965
079A34D553298C06ADEEDEBB4534AB6322781E320BF345DDA9E85FBE79A42E43
46D5EB0C930A94E84442718894B01444426E61FE4814FA731D4CE947CE30CB7B
B571DDEECB0AB99B07C44A6CBBE8FB92617C25341908B8FE8671ABAA3A0F816F
2CACF5F737A9C9CA1F984D77C8583BBDBAC4A3DD490CE49E54EC7418AF09E0B8
F8AD6C8F54C371B04D7008034604E033B3C93DB8574C322103FBADA23CB26DDB
B6A7C9136791516FCD22500CB273DD29480B11910B890AD9441181B72649390F
5B32E2C84468268EF690B8C45AA8FB3AAE3126FEF2091B3194DC1882763E2BA2
AD0C0AC28A64E2BE54B92302096A17F1E7F7863799D3880B27FA9A5BF162CF9D
6C3BB8724ED77E58354AEAA8F5669D953DA9DCBB22F0374D6D3BD823AD623B43
7CB1D119C91EB17C6641099BE702E5E5DB9F1E147C8E7E685FAE3304831D5399
66BA0E30CC9AD42B9CA1E86F84907D6D22F591F0AF47E59948AA5F7E4B69F11B
7A751A22B70E2CC7FA2863D4E5A2B4D86C2E3893DB955261A55B4D0D9C2B1F1F
B934AF66075A3BE3157C95C83291B28E76619A87BFC7E063E657193B102D2817
23D637A16489AB56E7BCC2DD0C2B34CC1F5F0B2F3731EDB675F7E114ABBD1E1F
F5CB7C78124DB4E48B36D677F6A1EA1ADC47E7216BB6EF44BC84C121AC407933
73ABFF532CE4051CD2A6789D04DDF2E5843C6662275931388DE442D8E9DE1E4E
57B22B595CD6D6F1CF77314CD7AB19401EA4375A5BC0CB9EFCB8896E89709EAE
AC778F9A6B002E429A5381775AF0D090C60038CEF3BE699812C6B60A0B193AE2
0C60354A0CB9E4CF0F06FCF5BBC2DB3444F221C367430D778DE7EAE25D3F6FC9
2DAEEE4CD087DE9B38AC15DAA6B11A810D479CCCEE73C3A95138515799B4C51C
85AB30C69DE191D5790A177E5699656B00EA53CBB9856131EBC2B80D2507
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158168EE7932A2C9B7D7F820F327E4E36BF77D9D52F6CB8D69F1DA4C1DD1B6
646102107E5A6A7A6376AF4D646B3FCEE2C56EA5C8F822C5119642D7007672A5
DAF6F2D7D9F0C07E34D5594796765CBD5ECA4B65710166ADE5F16BE5F1C87748
1778614D372B043761D928D66FE1E2E484B8F621CA13423041FEE0B2198B6448
7D69075828A9A2D2C6C42CAB48A5E603E505000DC827A77589E9E467DD282E7B
19A3F0E4A1776137E6691C11ABFC0AE10F483508770580558086958FF83979D7
53C36D10685E1B54CA73D7C60FFF5ABAAFBD0D443D8EAE891BA74DB29B5DCB06
299B42810EDE08A6005F789CE9C906ACE374D9C43881E539FF7A0435B7F7ACF2
054355FA3BBF670E222A829CED01592FFCE64A64A74B0388329471EC8965B3A5
717F9D9576FBD983D0244207AE6121692F0045222350F0A0CFED1A840940E50C
56F8D0DE66B0A2BD4ECC8FC85C0546A49A96586475732F7CF9302285C70F8E78
7F455D1DF8586AAA851C4A50A84BCA5E3EB4C548495C26EB13F3F97319320741
D99623D79FEE1E457E93F355D167EF9FFAF5805C6551CF42FB964F2E91F02110
506FE453E47A99CD81501C64E9A5572A9AEFCA304427750B12CE37EBA232B066
81DC4EB9BA24C4C6F3268858DE66A368442B7329F8E75AF0FB79B3E7FB78AA12
5DF9EC9F050B2692D0F5320D0D3C5CE230B506895B8BC7D4314CB093CF992834
24FF349398D3348577C8DF3F51C3FF18B8E040574F1033D28E273F654A871CC3
F6A5CF4383F0E36C61EE471DD6FE182D1A6AA97DC2FDEB0B9C7A22F31703BD55

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A447D5FBE86D961AE4D4251149F11C4BC269E10B48E8C42DC2484EDE87
6540CB8A5EA2494148D09CC9D5014EB7272F10897FEB361AAC8C7642DA07EFEE
356790B9D0755C63CE287BB6533A5A2B6BAB27E291ABCC443BF097D5FD49B9CB
ACCF7387D6B618E76141EEC43B566C2C8D40E2FB8B9812DDA376AFD07DA6A127
DC81AC7CC79D5484D5FEB9D68F9D154E0E6D9C10C0D5F74695745B5B14649F37
CDBAD5DB780F512C2E1790C0F62C82200E5F245CB75E3CF291ADBC2600D221D9
958484FCDAF56C4F0074103CFA58117204614502D59D2D6AA1475906C91007DC
D9F035A6D2DE39976DA36879EFE35031F340BA6C211667BF29E32EDB93DAA76B
BD21192CB456B6BD178CBD6BF5FFD5E0C92DA1807D2DD318
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 54 /lessorequalslant put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE3247D8C84A67F
B0FA852538DC05B30BC3423FD37E586D4149D96E33BE469F3A7E8240826BF920
C8FEAE3B22740DA19BD70782CA4698465EA758AAC7B107212B363F9AC8947BE5
1D621C2E0B050F5EDC2BF39C72B62704A385C873648146E8E615D349ED779B78
7232605BEB38346E306018BE598AA09E444D0F77F63C7B91B8989130CC44074C
3B78058725777666DE7703EAC3383DC1036243002C75ABD706FF6272EC8B127F
512CD94B4EB72169496F57C21467F2E268E3F2AB0C62F99D6FBC035327144B15
3EA7313133DF49A031282BFAE803713C525D6B12C8BC41BF641A35D16CD267DE
5453EC212BB664805A6ABBD010D85C3565B2ED2E163B021D319558F8B12EC74A
D23D8D3D60FB98D39D08136666DDA4031A8E608B103688D2E860B9BDBCD50DEE
D3BE745BCA2104F0A28816B184277891B9231F28346A46BC83E8E043427C28A2
401F5ED30A4C2578F06DEF1FF3C98550BCDC5427F0D3CCD9AA1189F6A2A8844F
5EC219D9C8CA25E69488DF641E3A087A0EBC9657354AE68381B4DD8789E1D35D
4AE06A051107EA4D9375EE74AD0BC6BFFBE163DE6DD491740660FFF722FC1F30
238DBF05300C35CAA9F686616449FE094A5F972669F8749826284B5DB8E20690
CAB98FCB242CB73DF0BD147086881CD9C9335856F5F195FCAFBC3813528BCF58
6586654038EC562FB8C340A7A231DE2D065BDD828B097E7E7844246A646D34D0
D7356F6E3655663F9EACCC45B962A67731C76AC98678B54E6E3A103EBC0F25C4
4B4AE7D581455520DA75F0AA2AD71C12CA19CC7D1D0E4A13B262BEA658AA67B8
FC1B1350787F40DB00FE7A2187D2562E08382F94973EE4F7F6CB90329F80DF0D
FDFCD73F99971EE31684D721083208D4C964A75B5060C9B13CA0FE1281472A94
526D946AACF92F55944DA04E57D5DE2CDD0313C03A48023936FDD7893AB0AFDE
4ACECB1D0F6AC4F152E8EFDE5A98FD8D8DB7DA1A8F632686E80B86BAF16006E2
685F68747E2FC24D58A6084E6869B736BDEEF2FCFB7C80718007107308492C7A
4E34AC812F000A9C83D05109B77034631B51DFB15C4C89B040AA303BE66D798C
C48E69F0C4871773AF79651FAE06ECE5EF51AC4F1FAA67E8333CBF1A9BD32DA8
283D0A69160AB012D764A61F9BE78233444C2EA2FC699CC7114FAFECBD9C9D3E
7A501794A067B9F5F40C2221D5039DC3E47854B1CA363C39EEBDB915B861B5E6
5C147E49F8D0B68ADC9DC650C16A3C7C18CA10B5AB785D58B93CA7CB782D0677
7E41A6EE41FDA5DB6CEA711EFEBE680FF785FDAC2EF9D03F79002ACDA6AE470B
713FF970FD5ED9911E0DCC2A254F0C717F14A949355F4218FD43C6C80B7631B9
6E85CE364A1B50BA7521E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 26 /braceleftbigg put
dup 40 /braceleftBigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 62 /braceex put
dup 104 /bracketleftBig put
dup 105 /bracketrightBig put
dup 113 /radicalBig put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F651F34411614B854290F2BEAD5C49A9A89FB3
4DDB82CB4E7E5719AE3805D386A7BB172C4C5EB69E6F6F15840E7CC17888ECE7
D967B69CAF7E94A070BEEE16617DCB9BC822B7C566AA6173FFE266E3A2965085
CCF1458FFBB6E86FDA99E593FC917044468F26BFDFC4322CF25F097D21A9A5AD
711F2009A448D9AE151E75C1DB6CEFB1D2C3BE2AA52A45116F89D9E65B6A5784
33C667BABBD93F2823FE60DBC4964C202FB8B4E9B000E6CCE39AD452D98C91D4
2275B9348EB7DDD0B912545217D1F9E5152A3D0BA83A768B8B2213D8CC6C9DF7
CA4EBEF4E658C2498001F442872C020869A825AC024B6CFE6D22505EC7C1DEB8
2887A792D6B4871A8AC62D5A596E833FC6A295FF5D0D97B04F9C9FA56BD92AF7
D4340CA6E95B7819A721516041CB8B8A59E772ACC0A48F08486D30DEAEE51BFA
E6B27C430CAD0798240751AAC6DBBC348A881CCDF63A86547CD1F8D01505B936
02DB8EA8D20F2DBCE3B2FCEAF87A54AF5ED46E84D5D95705DF3300019F703F2E
AE28CF639D2593B0AC5C280F6CAD8912F8F74975C356D08367E76365F3143D53
47DDE3F4A1A11FF67A14CAC1250E144A800ECC6FEBA388E529A92E328BB17526
9726420602870862E4EAE41A84E19D4EAD2CC854A8EE2B8D84E2CAEE0BA04721
9AFDA9B39050337329E07314372C3AC3F58DB9DB765B006A7FE7332462AEAA4F
D2F9C378FC6169D5E3AD9CA3249607E8EBB23AAB6738E1A76B93F65DCD7751F1
C58E5702F5FE90CA72E1B82F33882D763354DD9C68D1B3345815066912EA3D22
0AC1798A5724358DF2E40CBA4E132BF37383E2887DD18A1AD9287DEA104A196D
D4E280CE16C580955D3E13328B62E66A19F0A09316432769352FDBE3541F9B91
2834B7BD0BB633B9C1164D530DDE24921737F7A1DC939D1A439E10B6682E7EC4
8CA15BD5E0F1EEFA40CD94970C0B1E6E66F316234A50C5EAC9AB40C497FABA53
3F583E954078C6B57E12CDC74C1929A40416E23B5EF8E656B48353F0EDE54153
31EAE84C047D636122ECBC312D37BC87B61ABB59AD366F2928DEF26FD3C11E52
9058864EFCA22D000E7AD4A4DCCFF8C2F143D46B755BE9BAA1AA3A1A68903D72
30B3F8140BDB04477AD80B2815B2DCF7B6A7808A55CB323A057EFE89FE586FA1
A37FD0A5C329ABA301AECFEA3D53ED9BA42DBB68C2F547F03F077EDD77F773D2
8DE7573E5FDEB6D625170BD5444CE6F52B2DFE322F0C35C980BEEFDD6A042D46
4E753D7D87BE812C7525393442DEA06D1F59AB2E1ADED5C4FCE294213927413F
C454292BAC49137C6D41802A0C8E5D81DBBC17D5EEA38A5212B736A1BA595651
A7A5A10A7612C5462D024A81C2EB483DDDEA969BFF7B9AD1EE9FB3189FC54A4A
73BD88DB96D4F901EEFB6DD85590525562C2F8E39FE70BA2230794809FCB7F6F
DF3AF6B002D97179BF30E840DCA07FB28DF551D3B7BCE3728FC79417E1F20DA2
A78F21B2547BC082CC8047E49C39C8ABE8AD56ACB824E0C3EBA4578C8EB9F931
9022F51E7958F99485D2709678F2FE85A1F0C6008E0D926101776947EC5E6F06
3E85E7BE4B10FD20A7606B927EDFEFDC649B42335E2F75881F31AF28447F80D9
8B85DE89399142C87984D006015E5008C571441E865F91E05A0FDA2C06A98E60
82667E4994C03B346348FF78D77FEF27793870285F6333541BB66ED6C8F20548
1B55A3DAF12E9FE2393061BE746EB95A37ECEAE7E58BBFAD0061F004E7DE508B
6BCBCC0E06F92393336D98CF0DEEC2A721630417D5E60610901F8FDB3F7A3C01
264E25440F415790BE27B10FF3CE9B5540CE14A48D342E2FC803D3FE370682CB
3115E28D3779C300AC4315BCCEE26D15D91F780E0394D3F1E7C3DB838923342D
8B23AEFB8DF36D5879F09AADF802B2EDCF41C4ED0AE8049A0EE87459B1040F68
B40034C555608EE39BB0B6B98CA81B63C5261963066B9E7ECDA2EAF90275ADBE
F1D54FEC8BF16ED636FB5404EBDCD762E95E216E448E2222D70C1870D09AF8B4
6990A5043226AA38A08B5200793892E974F70AE65F4BECEB0D1D9146AB85FDD4
776A81E036EA010F87FE10265388D17F90148B5A69A0B4B4AD102DF315D10D72
B1531C29B5FD24A0C9B0E3852233728CAC6D4418D49EF0E5EC590816F8A25876
192E783AC1A16C9766F8BA79257C6496F591A9EB0197FC68EE52C79AE4EE789A
40FA35BF3D416F88CF3C2C25474EBA850ABAF75809B2ADEFA0DE5CB03208F376
7AC6D7F84A9BA10F9999A9410ADEDCC54D734F5CD78C233F88FFD99F62BEA88D
1CA38E653E9164B9CDCD2DEFC9EBDD0304406C7256AD7D9F1CDA58028E77F306
2509B67ABFEC11A2E93D4B3C69A3A9412E6236D45004EEEBC5B5CC09D0FDFA74
7EE9A89192E7B90C355725CDF704415C30177294DB21AF95D76C14C0DE39A468
6B385D9F883F1FCCC269EC038880E6B2AA3157CC910A6A26764FD6EB3B812F12
43C41FDCE0197C5B900AF0DB1FAD380ED0840190DC574CA409F97A5BE09836C0
686A8316E08B6AA53E0D819528DD08B4F20B6A8077B4725D5C0938FB136A0846
3D4B27241F5D18D64435C17B60FBF2CABA59E773A5CBC742B2994564AF660830
F40FC858F056631CF0D88A40DEB749265AF2574C4F3BA0AD0009DCD5159F8610
CE9456D83BD66517242C302250F88361BD71A485D01B4C0FA604DD295689D5F2
8C6B744BAEEF690EFC3058A33A872C86D10665EE6A6309A0ED04BA9DBECA3869
74CFD722B42C70796CF7C6DAA75A6B05F98D3459D1ACE419D45D86C3525040D8
34A384DC5AD93A1C64FCFC179BFD65150A0D9DE05A970790227E7C11E7140252
127FE895A9AA583473E8956DB52FEBDD3B7BA020035B479CED1C5B2AF841D66C
650B46A55896B24AD92A809AE3DE32911D226F1AD273450678F75C38FB2EC0A9
7D351B0D1FFB0D32E3027FA4A76C00A5DB2C932A0746BF5B39C0C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 95 /slurabove put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC6291C9474BAE831466
A9837BEE55AA0E15812D87E7033BF2CEF3BE10ECF668D3B57D6EF1D4335152CB
08DA4049A6427B87CAC37856064251D030087240BCC29C59A4D894E4F344885E
E7469803E97FE7172111A7C98AB5960C324F567F9C511F25B64F5FAF9C144213
F7A8098F78831F3DD1DD0ABD61EF76B4E6A691E8CCBBBC2C576A77BDCD421339
BE5085BC63668DE610BD055D262D42EED86148EA292C0C239FD2A84F3D1BC32D
C96C001493A8890D9C8BD74F03E3C2179E4A40507083EAB96B17DDDF011AA310
3D6AF79E724917735367092DD0349B12506CD0CC7AB3D52870B004D3B3A0BC33
30F7F673D7BC3482F5E91EBA4374C7DDBDA04D6C80A4F2E43C3955CA9851B0C6
837291F16D31D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBI1000
%!FontType1-1.0: SFBI1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbi1000, tcbi1000, labi1000, lbbi1000, lcbi1000, rxbi1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBI1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-127 -321 1684 931}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FFC21CA227CB409171FCCB3E7210398059EF
83FD1138BA4386043D94704A332C42359C72F282369127FE644A94FF3F9FF01A
3CE593E50746F547ADE70EEED31C2B343E9AE180ECCB1A902C8EC58336B6714B
C85B5D2843B39772578498ECB4E93B21061D4B60C4B956E83107E8FA2A086E17
2D52021D2A99882DEAE3BC20C0FF5B8B4B35900E68C90E18FA6A156BAA4A8383
582974AECE4F555CF275F89497FB59F385D4DF5EDB13A15259FA67D9D1C6F45B
793BFD1A8B0FF404A63084201E6F05E01860C4F53FA46EBC1D05A410E1BB9786
9EA72C5C685C734E982CD637B94EE5A5B2BBAC3C0EB6B2CFFCBE42A8BC458D9A
CE2A99F03551D86231E26CE1F2928FC141BA25EE3ACEB4CF2502B0CC02D7F37F
AFA6C47B3A63BD1E8B3F196E0AC326BCA1E63FF4B3F3D8C57D9DACF03BDABAC0
759F3A98CC2FA23C727CDA0F65A85F6907B958B755A4860810FB437E2EC46928
5B43096C992110DAC53AA5DDE1368EADE492AEC21782DCD0DB5D66FDB9AC7C15
417AE98C3C60C1B19BA65393D7315E748AC380B91F966BABBDF8D7E350734462
B05B865C692A880A61E4EB600D00B167F2F89E5F3D0440465638695299F9C4BE
DD6206FF39EB2FD86A27E0191332877C9577E8B754A6EBF0CF69B2947FFBAC04
C2AC9F917CFEF3F9FE06D357FCD91DB5D33BB6AC3A7662D30607F715DB714539
8FECFD647AF72772FB9C8709247D1F2D08D5D81C6294337BCD5F96BF5B211470
7ACFBD3270F35D9809BC96CD51AFB32AC4AC188D64203424FF349C13CBE1AB7A
61EA6FFB3831472E38783963B722351091E84989DD19EEC9014323A5ED11D861
C35CC691C59BAF37842784111020D769A399622A6EE0F4AED058C50214E1ECFA
DB4574821F26C6740305C40105ABAA0369F6E2436A0A69CA2F96DEA307847003
FD3E3D1982209E9DB25AB8EB9A95B8C4795158D88E4D371BD41EC68AD358AB6F
1AB50FBFB251B11A9063446A683635BB8A9FAEA3DC9000737EB60417F399854B
5ACB232CF1254FBAE5E72D137F7F96CADA9C3F77D24925C857395D196617559C
5402452EAB30E0F9C56E006C151F0038F24BC9213FA93D9BA077C8272F917B2D
0945D62A16674950D54EBE33E947302946316432A9C52A86F3935556E46BC821
176F750E319C02486B3454564490D314904FD015B61951C202404C0BC68D1813
852C5D5FA5E86A17A41E76F10516D88899708A23BB89C699E9A40FAD9B5B4527
6BA04D2450D625FE73C61D2C69FC7A4E2121669C6E6C5B432D12D04FC0043B23
ED64C0A0F6038EB3DB7F33DA612AA8F1B82087D14893E36CE80FDC1E344C7853
03AD96200061D269A3CB2AE50FA7457AAEA32F518ED45BCDB8A8A3B1BB16463E
5B8C390FED1BC82889DAE459A27669C4B194B23B4E2DB99DAE9C5726E521E436
1017371637DFAB7F41D9DE4260879AF4D7CFC781B13E77341630ADD40FBA8779
FDE1B0ED350E58ECA8C60315BB317C086F295FD7C4B1D57993B1113386165251
22427793E0700303409162C5AE77263B50340B51838A6B7AD79F5B8B485A16A3
30E180982ABF6E443CC141D02D4FD206753B7CC731752B86F48DEFFE32E45453
F707E31A242F8D77D18F7449132ECC251FF56D596BB6812FE53CAD2905D6DEBF
DBE4F0D3D7F69020B67CCA19BA60984E53DF1D4BA61A91B741B6557524B78A42
83B9DF2F97D52763EB0403D2070348602B8AC2C6FE46108547E1B153BADDE82D
88C8C0DE4ED8F7853E887B7E919A234DEC4A98BD0D0FFFD6FB66C21DA7F632D9
FEBED96C69A06007D9857B34E641F08EBE80828431A9821624A869794894449A
6A3F4B8CE14AB04AB9A43F8FF291CF91CABE77C55ED01005A99876FEB03DFA07
2C05EFE42BBB16B64D83C38AD71474C52566828F41DBF602CEDF75111B592701
C030CDCF2110282FB5BD026C151F0038F24BC9213FA93D9BA073F0FE98A99664
195A920FC239F97E12B2AAE49923C17408322A5CD53EC343C1184D88072BB753
ADE4231E598E605A1FE9C5121D8FE4FF4052877522B643BFBF372B61941DADAA
5F9E8A1A2CDECCBC03A3789F41AFDDDEBFB922A82BF8FE4523593694DC72D170
39BA8EA622DB6903CBA1B42B9F7FF3D71E8396D904BED3487D1BF21F8F62645A
ECBEBFE3F294E01915AC342FA5AC2EB8DFA076D412A4C16A689843CED63CF60B
545111548D03F409DEB13D115CBE558354CAF340C66FEB9C7F7AE6237EEC2441
89F8BBE3F05FE0BED4795006F6C77FB558D0AAF789A8805F8D741D7470092EDF
41007748197FDC6B98368197F871571001F5B5763C5272D5BBD38784077AF64E
F82D2D61BB508F45A2D39CAF6C1BCF0FFA3C4916095E5D0616578D88AEC87AF3
9D1D75D9E1072D4D4BCFC1DAC5B87738C55FFC304796ABBF09B1E689F7D24725
E542BBB0B5D3F27D47E97FEBC0694A7AAFC80506B00336285F6AC2C9D8846BC4
B15A07B0FC1EC0418A97907B42523813CF4F8A74B712615F4477E5E39DE065FE
3F407A3DB2390B732BEFC55E11B3C984863DFC3B57802E694B7D01D72302B8F9
4264318FC0572F13A5AFCC28085EA7754FBE0DA36C30A2362BCD8737C5BE611E
9A488A7400E9DBE9E13242B36A46F425647A8163105C8F95567559CBAA6A2152
CED7D78C653E4D3E85BA8A2A624953C12169F7F4A7CAEC0973D2DDD91C4F779D
ABA9EBBD19FAC6A3957E89B326A91647D59D83757DA586B08EA956F1A7750BBF
2B07F3742AEBFCD0C91DEF2145972007ED9D1F32F99B8DD2CDE631E03C9BDA33
87A344BAAC095EF93563AB6A3C61DB240EFF44549D6D2C38488E5DAEE72CBFE2
12137A07EEA25168B0715F570ED072B2196D71C905FAC094D13FFB81DD59B1C3
1D93B67B03CF58772056A899C50CA17B7D076C6009475F81CDCC1A02AD30BD6B
0F88B4527F4D92C7AB7796A833A2F9E4F0C5316B02FA720537BEB6BE1CDC157D
383CF8F7473B92B50840EF2986ED756FDB3752AE5EE799644A90712DB46724CD
846EF296211C61795A7915464CBFBA8EA1605589918EAD247D0D695109B2FA0D
74A025DA1E80A0027CB712C1049B9CDE2CDB31EC1EC79BAE9EBFE42F0A95B446
C32D52A81A8F5CF16C25CAA120DF4148528D521E3FBB4391106BDA51F30439AC
DA86B4FAB04C531276C445E8034BEDA3DB99F3E9C82B1E3557000281C40EC1BF
EB6B1673222A463AF43DFFF5094155E742F598B2DEF55067E5765882645EDA60
0EFA1E7D0A1D9B79DFB76F6E224966951A8DFAE56EFA379A1EAA31813F23D722
4AD97CE9B52FE680B6424E74997091524E8A62509515B1F8DDE9F1536CA906FD
6E8C3DC6DE3091F3A6E249B443921A2AF79A91B832331073236EDCEC275BA568
3402B907DC7FC21678FCBEE73C0B4B2D166E74FCB3A497E39819D72CAD588CDB
8188CFE38D941375408E29138A996E56FBCB21C1A4F4155E7337FD161710CAB7
132B763483700498CDEF8BD9F3DBA3CE3C58D8FA794CEC4917B45C3F3E02C1D9
45D1390CB5FE2334C6DC0C4B3EAD5002C03F047ABC5A6BDF5E42A06F81801BC7
33D83569DB1F067A37EFB050332ACE6E53FF07257C3EB362A122FE90CE8EF37B
9C73FA6AFC03C8B9E2E6686C75473131F54E6002A72FD27BD342DFBAFB13C32C
4E920FEC8042BDD3E208356BFFA9133DD0AB710D6DC08AD3BC6A851F4CA6317D
391EA00B2A97ED62CA0267ADE3123DDFF87F90FDFD8EF644874D81B2CD1F56ED
14F9826F4AA8FF66FC082F1467C0532631E971A700E715B765EEB349003E1ABE
773CBC3661D002AB19585E018667D97BC5DE60602DFE5B13609222EC8B3958DF
74000D4AAA40FB466309C9BC01217D3872311DD8DF9777CBE770CAFF612571D1
896635BB25D2A1E8797B440FD0C45FFEE15498F9F20B901936014F57BD270794
89F955FA1AA131A1F5CA630CA0AF8AAEC5155AC1861A52D64C7797786696B28C
7AB139163BFA663286CC00F43551384B8E746F82029C767AF62A5965A160BB04
EB45943BF07C3EC05104CE94A693DCD7FCA7EA73E1E82B858872056BA273A77B
03D51B7A46D694E343BE4331646A8BAD1DA7CD15659B5449DB982127AA882042
06E75D9A5C01D1DB7BD0B34C1E50592A65D05B613AED6D1A55395DBE29187C98
445FBCA660CA6CD43A262B77931C53EEB474424CD01BA15EC7446C437FA8C9F4
85D643F072963A85D4F8227770126C3D40A031A2D0277CBD9EB5EF964EE4A8B9
B11F77A3DC66E4C806F4206253C2DF5F85B0168D6A4DAB61CD00B594A3D6D3FE
7B30601CF746ADE472781A6A46F5AD8179DEB322FC5389A88F1D8B2763473C5E
2AE176F56E1ADD781FA309DD3115141F83FFE6AAF687B33656524DCF4234D167
F6AD72DE523D31F8E6DE1904FBDC5D5B5797EDAC525783E73197F2E345C1A734
4ABEC0D139E315F797E321E4EBEA85D442B3ACCF5F837785C55D34F91237E72F
48D067C2C33B0C612C1824D148CB671B6DBE5853A54E1F219809CB7B0A5BC4CB
56F6FB109AFAF835F63AB8F1E76F92068106E20C47935D49902A3755CD7EEDCE
94C8E4AA2ADB524BDB04A718019EA95EB7451D7786D83B69E0A83A55638E8706
1E28669128C4BDA56F122727523E1CAA9440902D0983B4EA885CD9DF121101DD
96941B70AF65B693777DC5D0FAF6B639286847C7CB0D5BF28CFC6DCC07D024B7
53769B437ECFB3C2F2DC09A4C48C7DCAB3F587B6E86A546E5645B7B36653712B
D7B63A168912F071E15494B97A27E5DDE591CB24F0815AC6E2BA30C4CDF9A3AB
BC214C731FDED10FE1D59B63046CE650447902EEF9113020B4621BAEF1B9BFE3
466AA59FE76663914E74370F14EC8D7F8E637DAF9A7AC45BE7044D00F98DD647
11458AB1CF630553013E9BCECA8C3ACE05DE85878654392450E860BA89CBE4E1
D937837115D43C0AA387BEF01C7EDBF72DA5A636CA6E3410C34A1D83662A6F3D
52DA94FF37C018A5211FAE935CFA5FCF663DEFB98E5AC012CFC20DED9CA5FEB8
530820AD6620D3B60F1A0B0AACA7779496E0AB968E857678663886FC65ECA3E1
83D752A58E1D271FF6EE621B77F5441CD9A6A28354D0E954279AE3FA9B105AF0
132EA9D5D83EDFFE52C2816022CC1FCAAFB4773275716325725A03125D6C30DE
B1309E96A542B117C04507616EEED91D307AA464BB555C7AAA36FDFDF7F88E3A
EB0105CA91B3FB7621767657674D609414EE08BFAD9BA9BA9FD01D631C2B635D
6C0389469227839BEA7DA20C3756517180ABEAF97D187D7F7E062C15E27A9746
93FADD40E8FE2C0B3F51E64A2E64BE4227D9E36BE5B9CCBCE4D0122AF44E1097
B815DBC218C43E418B529E935B58CEECCE954971E0F80A500E410A7078C95C5A
D347514666FBDED922D68614EF81BEE8E2D1DC0C7CD444941E81C9BCE17060D7
3AC814CA49A3065A79629D390EF78669C1A82F44FFD0BD03F279D4C279D4D209
17F2EDD522CFCF267A5A48749587A48B0751443E796FC5664490597DA5F2CAC7
C001388DA262A672AB1CD3AEF872961D50F182C361C177B1EAB8BE4E3AC37716
FA667198C8849EDEA9CDADBCFFD3B279DECD92AEAF5DF572B453B0825C3E0509
33B2DE99DD2C1C533577E9F14B72007B9CA516E9209FB94A4144948B21EC7B3E
D2EC4F92472EF7838995D99C6EF35FCF210876171868C5ED5B38008AE13F533C
5B09E739EF405741CAD56DF3595E7F5878F1A72B603DF4E1ADF2D35BEF2A64C0
54592F4514CF98E3E29C51B85F16CDCFEB17B128520AF6368706B9851843C23A
C1F8941CA9BC0A19E8A3348F9E2975B3C42335108E582913D7D22CB03DE9CF85
823F40107BB277DE1C1F5B839638165BCC33C56A1F1C14918EE9CD8801346985
DF2BCB739B89585CFB130158EFB1586B501DCABFF2DB7CBA2B969FE5B436289C
C9216E508F98024650A3D4F75C69573A8247AF30C8450E7583466226FA041D85
3D934D5C58DF320DAB449BE5CCF75860E73572CA7C2A2991B0C221B31151B7E6
444C2D71EEF218C70C18CD55AA40B796AFCBC9FAD3E25E002411CFAE6A972896
E0AE36F6E7A958CDB9870CF9D163C22DF911FF42DF8F2251827A4368F1CDA372
FBC15687119216817ECF497E84670DF8EC1E69A5D5F7868A56ADCC26A5F4F655
1CB919E461610136ACF57CB21C5814981EA8F95D56E6796555F65674588FF969
3AEBB5219E7D627D0AADAF52A14DB5E1CF7CEAE7E80C423A01506063D2D22007
153DC3CFED4F69BC02D52410FE3DD02AF8A86709A11671B22373F8F85CC50FBF
AEF60BEADF74B5F5716D80F59C271A0299984D596715ABF81D19598621A5482F
ACFD91D0DF4ABB561D3988A2E4DD2110FC33D924B3975A26A90D67D660CD4C54
EFB79F9A6C1DC8ECFB9F79D026096F2A20AE54FC8B20BEF215E1A168F565A5CD
F7A8C16AFC88E7BF719EFDECD30D60185D9F0D56049A962AB366F771654145E5
90E70B3B5F87D4AE97D6EEDFB322FC5389A88F1D8B2763473C5E2AE2253B9586
319FECF8BC689973815A3AA978C8F8049F479799D6C6652EE135F41F3D4C351D
1501BCA8BCFB42859C820AFA1B2ABE809B091477CC0FFB581E07D4D780571678
039C9BE515453CD9EAA72DE774592CC4038B9D313731E55AD3ED32F461E52B04
E009F898EAC6AA8DE9C39DB70D805E89D8B0F8B2F9887B3E1E55CFF0B570F06C
2B39A08ABC5D8CA60162413193144A9C2EDB5E0AF7FE59E5824383F2375ADDD0
971663197B348AFF84A195A2ED60781C858F6E6E37B1F6B5E7B3FF7FB909F51A
032A7464CB460F78BD2558A03F9A7DD2335E9F7C97284940D6501BA3C53E9071
E7DEA09C2B22244FD50480F6EDAC37B01631F3A0E926766BCE797418D6A91815
032D5974DA63859AC97006C4256BE1AC4C1A47D8C21B77D566104E12AA48C2EF
061B50D96F94542EF68652A4BAE831FC26C4E399F7B9BEB0B0192EA36BECC83B
9E7B15C800B2099C12CE267C6484A6D423CA8CF8D3A9CB8301D6902DCF90282D
E11EEF6872229D81DB103633A6E33C3E6D75DB8E893F4BB49BE4DB689100E2EA
E5896ABF5DFD2F6DA950B68EF6AF1DD0DC39B8E387D11D0CDB555FDF37B69E68
F2760F36F91CF37B4ABCC6DF7838F62A6CAA01A20DC0310431EBBF8381DD5954
47B9E0D14D16675A87B0449805D5F3C375EDC58C72FE1989E223A90AAEEBF7D3
D24A68201F5886E381D47546E3CDDCEEEAF53FA0604F07F199DCAB522AEF8D00
6DAE7825C584A613FACF3C2C3B34FB5CAA3D39B46543E0BF2F9D31404777D5A0
68F6A42402BA3967B10B0CCD480461EDE0726E092EBC29A30A2AB3DA276B2EC2
6C88585D746C0BD2F8664253B09D567F885CEED6039F8E5D3AB45AC6C0E4C539
24DA97B9915F82896EBE597F1898CE680E916445F1B5872A2546E49244D45488
6F646E56AE1BCB02786BE332FBC84621D27FB27DBD01971F293CF8FB11761D10
70FEA87920D02E40041051B6FA6448B378A98BA5F41865FE1D166ACBC8086E88
24E5D70B1875AD34B94FB51253EC49A45C03D7D0BD146338DB904CC6334875A3
707847B339AF3764AE2E43FBB29B82334A019B46D37F5DA1FF816F76B2ED1E68
4A37934BD2EB54FF7CB553D838E1BF2F2D44EE3111675DAE1E558A126B5DE916
ACDA4833D8B1F5414824E7D3DA1EED8E6349284514CF98E3E29C51B85F1E5919
36D476FFB4C8F42B89DA53D2DF61D7432E9645A501287A1230186C1DEE5D73C1
CB5411C738963B6BC1E0CEF9F4F6CC8C28271788019A7CF6F4DB1D80F66A13E8
6B62BAD0F82FF8319B7F7815877DE9B4D3E7A150AD213B0E40B5CFE6E24B089A
976F9E9E2E9A0744C251ED749EC52F354A9D2A57EF8E48B104B403BA0DE232C0
90BF144C4A6D81576856E4B97C8E3741587F638339D5268164E22431C96F866B
5AC13A86EF3DEF5CBEA9871185CDAA9FF79DB9A79296190285B2AC6A9843EA1B
F63EBDD354638EC48CCDDAEE2FD2CD5DB87693DF4628D3C5BA103064D8BF301E
03E845F3BCAEA44D1C9063EB9EE8F31ACBC72DE8FDDC044F75DEA0EBB56E5928
99335D26AC5C515BF45F01304804C04638AC1C0D9988390ACDFBC3EC2E6B4602
F5D4AF4615C6093D25A41A96447D4F0F1263B79159BE99419C569A573A79CCD1
771460D7440B63D0B37CF366B627B992C9E596047C6B3CBF937C0669221987A7
0CB53AF09C9BFB2F72DF3A36250AA25E8D003663DAB3E5A4D5A85475EBD8F6CC
5AFEBD21204937BB2C577F9B50383C3B3D14CA282EA5D04C7EBCA4747493BFE6
9E08C0A5CB8B1416B0C3B23708AFBB897F101BB80A110A4C37FE243D2776927D
88568F7F502C150ED88523792D55018D106D5618371F4B613A4402038479B4F1
83AC7BB3AF5C0BEEA7B88B65059292B8C5E2C74A1125718E8DE1196FB35F5E18
C430D828A7C16A81002AE7A334B62B836D98A0BA93278DEC59EE43FA5EF6FBBC
555605418D851BE78517A008880408E65D9FFC367708C2BAF67C1A51C1273475
BDBD82DF4D925BCAEF4F9CFDADABB26CB6AC42B84CF32A34F84B4BB4DC63A29B
09B01A9E7E90665633A83E7F9C5E2F62303902679DA7DD0EF8EA89875F1BA72C
AF55056DD1E399242AFADB8A19C661F538857EEE641247028F04B48C13A4745D
552CDC9E1B26E60B8B5BEE14601B53C8A362D5BD17C100A1CEAC5FEB5380E830
79F7821A44C27B725FB42B58BE44EA60065DBEB6CC5282B34C5766DE2A38E353
5F40F36077803AEC3F04636F1B1109A51AF449D6A25A89D51DB39959F96EAA93
E85EE5FBBB30C4539A8F3C7D0EFD890DC65A7A9B2AEA11A934830E2227CCC48E
BAFD76D4177A055524876CCE403CE64967EA1E6B9DC0E8AD3C4EE0034371950F
CCC3240D4C9EE4341045978D34A9AF4A0BC680C178D66F24690263BCE010820F
D86421926CDDF89A13C1B0D0D9B84426F0EC8BBC67F8C79D2C26C1A6E06D6AFF
8BD3A4E429DC36BA6D7DD39A0E51EC2B1F9515C24F22F1536A0FDA075838E0BC
CFFA46D85265C0F65D89FC7AEFB909D80E2A4707E1D6A50B31F96F029B6ED8EA
CB2A2D95C841EF7AE5CFA6BF69D6F49223A64B5350CBE31D3898970186251198
517B5D810E7E050456E32B44C299F3C1BB4FA903FFAC28422C66CFA7CFEBF585
4429F683EFDCBD00F3FE85A290857E5CFC6B3B8F61358A267105E8EF2E92F310
1A027D530B94E445EFDE8E04DC9F608BF3C84D49D2C4822CF8F223E472A4A00B
CC80BB64F34C4D4BB7ECF5DFE24EB96D29F742C64FBC98D27C9E5A8414F1D800
E1840C39D278192D10CF9C166F966893366E9BF179DA515A38AB6181F492A569
53E8FFAF53C1123A420967E4913FC00A089566AE76717B8EFAFB552CC18E55CF
8FACE1345C2943C052C94FFB34C9AB10A28CD218DBCB43F6751A4D10AD415B34
1BF52055323B6D8FEA6971F039DC653428236BBC63F3FCBDE22BF8000FD3DAF9
A8B70334512ED24B11B85820BCF4B250950EA1822E686F3F380404B0A69AAED7
F693B590FA4F9FB2595A8E018203A0A52A10E017E8C804239B20A22DC4445DF3
1F296D60D64FE134A8307F27B5255F6219A96D071E6A478075E259E91668BA9E
4073B21A8AD49D6127487B37597461D3382F6CAFC5DD97AF6A8B56466E9B1156
B5B98FC3BB679B91B9596E2D0B3F9EABCF995917FF1316A973D4134D0136CA29
A8B7555FE0A0CB701FAA819DC341467C2013DDBB60453CB608761536F52AB3DA
276A70BF53D80A84FD53977F5509AA26E8123F6F54F87754C6F2A5E26F7440CA
B36919BDE799D2551A5869D10C24FA4195B170A79E551282FF9B11A286040F3D
AEFDF7FE421F9307F44BB686FAF66D5DA1FD8B263DB06465BCD65B0AAFC824A9
63C5F13AC2DFEFF879D254F8148CE1526CFC7290DE41FEBA427D1B4BAF8EF140
5978DABD2F9A4F2FC04093A3187B8081B98489629B45ABA11C62B0E09A7BF584
BE301462D8E83666FFA6D2F55751D4FE6D40731746F4A1668C93BCA478758C14
C7FB34A965E93DDEF574F03B3BD362380DCE037A31C0021332427E3BF24E87B6
CD084DB324B01E550D60F47B93FC6CD49D44D41AA855DBF78EAE46587952E2FD
4D2DDAE05488062C8C94BA0D836F4126BFB97AD7665A9E916225861275A7E33D
A0671E1A741A8E32560259CB241746E913B99D21FE3AB4CA18407902F07842D0
5FAAC5784E34E45F031964060151995222E14EC367402791BFC14970BE8FB09A
10D1D2048FE03960A45790610A4B74812BC536D0293C0103A747F25066BFD582
4E32D0FCA727506D0143EFC2E2B4C53C3FEB4E48162ABED430091F19327996F0
1467479089B2216D70B91435B6603682EA6997F2AB23F0AA866D296EFD81E453
8217B82C2CBC4F8DA2C6489A0AE314D8E1C84554B4B603A29401739B34558A55
ECF193451B048ABD6CFA4E5913528E31916CDCA14DBBE4A677BE0AF1B361E2AB
061A792467BA5EBAEA363B116174B746935F2C369869606022E520BE37193F2B
A0265081E21C90BBBD240BABB8D9FFB9C3E859504756E130B30845DE7F9B0D7A
5E03B4F1F28E355A8D9CCB976C65FC3D1AC2155B7FA03983EE7A3A971569C60E
B64E687E934B81724EC8BCE9CC075148C96C95080D2AADE24C920062E8C72A4F
44DABA883ED6019FB3FE125D3EC439A3400DBAECBF2840EC66A80B46472E8B45
1F2349B933DB03DDFF88A0E777FBC77DEECEBBED97168337708E7F937ACF904D
7D14563E6CB5761B9B052F246D4E4E3716B8EC002392BB80D58C28398D43F8F0
DC770C081E9771C3DDC3986FFE291BE725B41ECBC5A9D2BA00F2ED2DD2300AAA
1CEB0AD96F489B470C21598937DE1945BDDA95300A9FE449FCCBB8FCA8042756
FE64FA6EBB39E55DAFC1C94CF72D16E6767679C59191A056803F9D26AB7BCE97
6680AA5590CA0A906D9F277F4F65379032547DE08FE9D16AF8B7634C14BD447C
DC89BF0E6953D83E20EEFFE2BECD50CDC154CC374F20F91FE8A9C0C96C2B2FF2
3E464EEA52BAC573155C9C04D7E7039F99918DCE99225BC7F2070BEF433D3158
B83C0D6B8E07B7117BF293B5925E2142E2E431B0E67A5639E34DB86A73D51952
560286188706C46134B09ED6FCA6B2FF748F117FA5EA4E3A6BA529C61A9AF64C
6B0E32CD73CFDA3F825A8C95682AA49C761A91E9C8B00B76112D1D27E922F7BA
E558406F2F28E40D2FF79919F839FED148CB7434F836AE3937BD206608A7910F
CE82A9588432E92ABA724E580B9FA11ECA9DA5277FDE08343F8598A45AD45509
FC3962AF4E8CBC24504CA18448D6298026C401975685BD33F9B00FD3874C98BB
95D07FB57F7625631A459365B7FD44E96228E2CB79E78EF6B6425373645C375B
D283ADD44D7A205A2F8726C5C1F058FF901480D494B8CB0DB5F286E9140D3915
788E1C2B4D9FC093D3CCC9A9B64F2ACB8AFEE60B29DC5BFA8BB6E60D93C1D74C
78B30DEC09FA2DDDFAD1E1234EDB1316B9F9C951618E318D1623B48888FDD0A1
2E6481A348FE29B6F3E581D4CAE54BEC377A93CA4DD8A3AFF734F2E3B15382E1
3ED2A97A66042CD0F0FCA8D2C58107052C35FDD6825D7FBDD311B1CD252C8D21
86391C54CE812BC0B26DA4724BC1E127DDFAB59850B3EB48D702507E6B04B22D
96A3857B4E79A114130C02EED17F9C23C68FD0ACA56437AE5B8506129E9AAEA9
96FA979779CB051E320AE3C1D8CABC65EC82F51D63E4C2154F81C84772C66E84
E04B0D6FEB1CB373A945015758F52B031D8B7F9C0DCE3057B45B2825073E5FC8
9F98A3B2D0773E6283C94D052944B53F16E67D915592A9185C30C1FC50292D35
872E243D7F28ED966097051D63D9663FC19281FFF69663FFDEA4D7652F8B55FD
D9350F81745713B5FD22FD447881590E126CED7225C94F55752CF01519337BD6
CA85EA8BC740C26F0A5DF57CEE475DF93E682E26303F8ECE5F46A0C1D1C3B474
B1F592D0D2026F6B0ADDEA73EB9B19A1C183E6C3DFE282EDDED33740E5C09934
F069AE4A8CDC5A76DF1739464D43E2A625C3303971CD93C9FDFE3BBDD14A68CE
87B0726F2B7C63B4FF6F960A4A3D0225B4FC11E35F340D392D39AD11EBF80D98
8B018FD188FB6EEF377ADE9E60E8D219F6861034BB1DBEBB1DEC79AF1F03F937
ADC8C60DE9FD8B92C839C5AA220EFB8829E12BA3BA84BB66807A3405A668FF96
8B539014942319CB2E0293055F843A125DD10A68AC317CC099E11250FBCFE50D
BB38D38514EA1ACE4E10D469D4E34FC86D064A5AABE6AD902DC4040705A2D66F
80014EA3861089AC8F162223D24DAA466084A4D4E04614C40EDAC04F04FC031C
D9BEC297A419FB0417E361F92C4EF995C882443A3667BF6AC4874A26CBE7CBA0
67C016557D69AABEC7E1D1A3E63136680237E1E6BAF46655E88EDD1276660C3F
6BB0CB2E4C2ACBD6A361AC8026558DC3FDD202BE32891B8F2DD3428DD96AB93E
3A62F94D28846625715FD9F7C696B1640F3919944A36C3659C56C59A0D58EA90
EB13B8823809997424B7D9EB0C026B33B0D3A2166DAA982F2FAD24715881787E
D6F633DD7BC5B12242803E1D7D2B8C90FDAC2EE8ECB4D538CFA5F6B1D1CBDD04
55058EB3D44929CC9E6E4DCED9F550F97AB844C09A02B08A41A73890083A758F
7790FA6CD70152D3DB9964673F84C87C7BF119A77328520E40365C85FD1FE650
BB57F97CC107D1161D391E60C90FA71BDE7E037D4C437AEC69F92A89067C4A77
3BD4D95045FCBBE0E00449643C2959B15A9033C6D9D179F044AA707AD2510CD8
744F216460D95E9FA506F76E27FA797876A717527EB8E0BE0D8C703247950076
91AEF6FF98DF28F3492339B3E98F8D7F803B59EAAB4CE87A44586CD20C554B95
622CF981B6CAAD0F5BB787C0482E43D69C26DD0B3DBB81D0ED4E0472920DEB9D
5FE526F0C62E7595838EC19F02A6A20D962E22779C13D871B8BE4D2D14A7E9F6
73199F1EE65BA3662ABFB02370541B12E7E633E96B85A351293E531D25E2B0D9
2569F49B88B2873C2584E2B26397D4C61B8E06FF466CA310BEC3719EABD7EE00
2D3D6443D6DBF4C0C7733A6808CE10C8C142BA24A42FA76D167DFD3C53D671C1
096E74BC5A4D0DB6EB5FAE6FA518883F32A0206F4C52B15F5FA7EAD1994EB3E8
9EED76B4496736B12C01D51B28CDD8C8914DD105CC6865082DF6D3D3B21DFE7C
BD18E2346BE0AC571C21236336E3BE1322526C10B121EC63868D2F412C660180
2F57A111157AB5A338B6F87D2D53036BD60D4E33CEBCF3E51ED613BAA0A3A91F
0CE66E21D71ACDA904BB4B311CEB06E78FFC175CFBEF2B7EF35B5525344780C3
FE46F28CEE9054F97D262FDF02735CB83A90D681246D5BD150B722FC06CA5376
6A3C1D4AF146E664299D2CA3C602A3A3F6F0ADE983DA5729C57B6FAD22124E69
BD1EB87F4FC16D1DED4159702AB55C9DB2519815C98E40C0BFEC475500238E64
5AAAEC5692F3A9206A85A4ADB9B00BC2C42EE041CCBFF7EB2CAFAED1EB86AB44
10412DF11C9719BDF2B79A695E89B226732F83DE68BD1D9CAA5EFA537DF301C2
F4D2463F2046491A78602DD867563247D832BF99DAEA4E9F9CABFE2DBA4C4E31
7472D6F253C9ED4DA27A03FFF7F19AFFA9659696F6E2B400A1D62FCBA2BF778F
E68559CE8D594C16D9C4A3DC39B72D9F0A4C553C7C2F07CC74E6444370978A68
9CF1DF8E35E3930E12D91F5D81AF68052B92B362255D1D7153DD233E59A16A31
1EBC798F41EFF7AFCEE576810E8B9392B6FB7C800BDC90F761E398650E0DEDE0
2E1050BC8E868942C11B07930FF42FFAAE8DCB338D9BEB72BCCD777E535C2613
62EBBF58A159650D5793750BB7B07D76E996F9E816E53DDE7DC2367527F8A500
04EBC8FF4627F706AE3CB77D042970DEF54BB5A2A6041618BBA77FFC56DFE83A
8C33A660729F9E2E1A1F760498C875EE3A8BB10D6125458E11A0373883394BA9
DB8EF1FADC240E4F7C0F29D16F70989D634358FB06D6FCF4AFE713AB6A69A4B9
1682DF49AA93300BE03EBDE104BF0685127D91CE4D881BC4F07D472065512BBA
B3555B26513E752348D031D5556EAFE397ACC1B898D820BCE3D597F5DD5A848B
4016CBF7E8B1BF8BE20F18E28598EE6A6859BB4B5754D6AD1A51516023043CAC
25A630DC6BE62BC7B1FB4F9BF27B57B73445BE16C9E243742CC79197FF3ED771
057FCB6AB1CC9D10E15DD62B4022F0D2969402294B31E69271977AF001B08FDE
FA2EF1E14505318976E1EFDA052E1EAFB920B8AC2AB00DF2FB0A2B19553C17B2
56EB9F8EDA3D910A44F15C37B7F2415C19DCBFE173414D2B1800DD59871A304A
63CF7623B31715A8FD033303A2AD9E74B565309C5915B7A3138B5A39BDFB2EDF
7D6C6CA1F0D005FAA06F5426B6761AA791766F85CC7C3404424DCF824CFB3D49
0133B732E912CE2E54AAE89F21FA14438B6E4F14296455FAFF5A9FD1CEBDF3A6
841CD8A6797A610EF08AA605E4C4BB01D3F861E8489077B964FC992C52B688E5
1E221F5830772937D5B229EBD2EE9D8723A6E28DF04768CC0B85C3DE6E1EAC7B
9273A0137ADA6FDFD1CDD9FACB3D71CBB866A80D47938837DF75D40D636C18E7
521C6563A677A3AEE379269B4EFF2D310132C28B5B434EA78EFC65E27A1E5442
4AB803C274753444FAEA7A34B37F753FE33DCDD190F68D2E20757CA37AFCBBE8
8BA9F71BD2C5B15B89EFC6E5F571A540EA0D32C34A5AD7002418F6A825B0E4D3
43605E4AC0079B4CCE65379ADB369724746684ECFA79D7373BEB5B39CCE757B4
9F463EC57CB5B02478231ADEDDFE59FB4E1D5D045700ABF9515D26FD6AD1F633
66AC5994940E7F7D0760DDA666A65CA0D6EE1B33BBF6AB51B050FBC4A6B84956
B249AD29281A22E2949809CA9037CE9E5785FF9C2E54953BB7C1FDAE8929733A
A07D78A17D26C0DD1E1BF31132AB4A0D59696FFC9C060CC2C7725BDB9D49289F
9FA56B907D4E496BB4EC03BCF54CDB147AD4EAE2983093F0F9BDFE62B0755892
5834C8148DA0FD1AAFA482B4AA6F73C4E66F7F9B8A21A3D319F5A2C3548E56D4
E4F31C470EB34667CD11B0E9D84CD597E080B08F124A6142E44186F82C0A23BA
FD480F332D220A480C10800D4C8A2199EB6F3A5BBAD8C05BE2B369313CC5E760
B825D88E5BF282717EBA208638F730722C5EC7152DDC1C4DF8C38E89CE919F2A
837D13949C0AB0CC9F750D3E83208C1680D7EC2376DB5AC4BAE891B75FC22F4C
691F9E8A3362534AD933DF5B214BB42B6DD39C20CE46CC185FD279920FDC5873
E268E65CEC8F03927FEC31544F34C695EA3DDF1113D7BF4D5527C8F9A2E61F9B
D44C03668456F7004A9610FA5141E7B426D3A28DB4895F1F95D5F42D3C367D02
7E7948576563AD2F51D2218ED8A709F83CFBCCA1E9AD3F464DF6FF5DD37D2448
C64926DDAA320C31750B8B9E9AEE9CA13866EEC0B930E8AED77C57E0A3DECD42
35345A406CE602725D4FDA65D56DB073E28DF3074C4B4777F1C77ABF8356F948
14ECC443F6751A4D10AD415B341BF5205537270D46E551364122199525D77F9D
F706FD3FE3581A40AAF521AB68EE4BA54688894F13FC576E490423F9A87FA724
1CFF200235A885CE628F00BEBE27B55D753EE604A02C09750932FDD13853043F
47E567AEDDDEA3D08114A7577EB6B30402433F7182BDDAA6B34407EC8D03B6C0
594E348CD00372D5F1FFE406D200D34870358817D3086AC12A919EEDBAE89AE1
84BD359F155418E202D934FFE7EA3789FB48CC5E29C2A86767D287487FED0E88
E1EDB27CEFC507626F0B4DF1B0BC4498443C3CCD7A1E4702641196A40F43F420
85F4A95922F60861D99911E33447DD5C2FC7266EDCC8F1A91300222A02DF36EA
5BBC2795939D9BEE749DE172052D4F83977BBD3F3B096E6E9366AD6A1FB09B9B
2CAAA8D32447CC9DD97F2A7B865292F033D14165E156C0F2A46A44233CDF16A9
35049BFFC71C4F67371D57091D4E923D2DEC396C33A794098F3F01C84E110354
A09153C5979FBEAB6D61E4C61AEE0B67BC4B8B21593AEBFB9408C0B962D8895B
72A49B69053BED7A9AB16CAE43276AD9AF015184736E4CCFB659DD1D97765E4D
888D48018B90ED80DC3ADCC0DE305E7AD600B95540D64F052D9223943787C54A
613FFF901B7B717E1967B7AE3F41B0D8380C67BFA8521BC5100E13D8B191298B
1DE626D3E7AD8DF2926654FC5EDB5990A0A17D5D3BB69656D580F63197B3BE49
4349BB1B586CC840138E4374B77E6078BC714B60E3CC51B1788D7E28629474C9
BB3966DDCCBD1F5F05D4968DA4DD8A6184CC6F537EDC6CF4478B28036E84ED69
288B450265BA65C7CE65F833702F37EEE9B6AAD74B48198CE6A6F78E5004D14B
AB14A4305B3D64638B6D9524E79AB8C01AD5C0E2C1D9AE685FC6700CDCA3113E
FE439914B77694C3F3A6414CBC064038241789F4BFD3CE966F93ECB9D7420279
DAC455FD33FB4E7F6110695C665F456A944C1985C5EFC5F570902D979BF4D846
95BFF3A30192E67A8EE15EB35398B1DB515D085F6D7A098233ADADA521CDF34A
78081F8E7C5C6FBA4DB374D2F9FD8E1198602B02BFCC7EBB5478A1B33004A8DC
F20A3083961A23B6EA61C8CDD9758100ADD9CBBB97E6B2A6CE91CF4826119803
072EA38F173D2BB71AAF0770F2B2400E1809A5FBD84954B8A321137E0BCE9FB5
44638888E512ED42BEC3FC0E6E706F84EB31375E7E07AA696259422069FDE218
0635E4F776A87F5EB2D25B57201DCCDA8FEB4653AAC9C7FB106DF362C20C66D1
F3B544E7C1D64DCEAB7476A2E7E8A792DBBDA93D3A0352DDA2BABBD2AAED35D6
617CDFCC812CA3A54B755B147B50F490B7143D09AD2EAC7BF991152A36BFC592
1B86189317D4F5A3959D5419DA092102A2C0184E6D9456F5FE7580E9094EE817
54B42A6BAB0B71D6CFD20E2E9F67072E4072E0FB99EF0AFE13427E0DA7F98051
16D7640412C65E7F41DB4C5DF149238CBB456BE9296F21A2B5B44EB41C89F3EC
DC32FE06B0CB2988FFDA6C425FFF6966BD9325D765943242767F2460C4948FCB
EB0923BBD04051CAA470B5F7E63E15C5E1B3C64C09B21C1E419770F703322DBD
74AABF8FC769E7782D19AE40071D70EE3A9D6AC8AA9D5A0F68D1B18A4445F192
668A0F4AB8C27EF6D646FED3A6F47397210C899E84A773A3D9852AD5B3FF77D0
30F0DE78306BC193F6DFC810D9D8DF403A554FA06AB29F4A0504DB77254D4B58
9B8BBE5032317DBACBF1F0E2ECDB6DF7EC19DB9AA70BCD685C6104866674DCC6
DB7E52ECE9CFF42A6D8D27A2581DF2EF1FF213A445A770C751D83428DB80F85C
452C5FD05CCF2235C069B57A6554BD742EDBF6A9AA02E86A0BD3914F95BD5F6D
A75AB164F08BDDD4D8BD12CA7EF18181FF10686BDEFC55F6456D266D470B4EF2
F9A8ADDB741380D9432CE973A97EF11C588936C376CB176065E37E44C42FA299
50803E1A5D4737C2D2958CBE399C043B72FAF0BE6B0165BF0DEA05050A50958B
5274F8896687CE011CC2AACAF34C727330FD4F460F8E24FCBA14596A7F34235E
EBB13194876A5ACB4A880E54BD22E4EA8E353AC31DCD70EC04A8DE02BCB5CF72
B375FEB43E9B33AC9E73520E7DBF1CDB30FA735DD4B4E1AF689A22D97A8D1476
46AD45F956AD78B6395B87FE5B8C6684555019495ACAEFFCB6E2FD051D58C6FE
C2481AE02D76C28C1ED71F63668F46BA89DE744ED480DAB8D447868F9AB139E1
8B3D1CE6E448845F2100BEF91E71CEBF903EDA6170F0361D60BBB3C101F4B464
464641F692CA1D69CC210E34B853353B32E93CFFB982AC951464418C326B5E42
682E9F4C6BEC84A8D867B9A32FDE174590D5B0C8F7721AA6C00D84FC2A8D3D53
6E7AE9B173336A042623EB1CA268E9EE67EEC7772DCA1433540C68316CF9BE9B
548A1D0CE72227D3B4BF0AB6082ED82935AE602BD3DC8A877777AA4CE87A4458
6CD20C554B95622CF98315648B2F1DD7DF94D7CC5AAD9D14395ED24F2209C09B
DCFE89E5AB159688355B9D0373EF9A4DE604AD79492967A8A7ACCC98A7D644EA
079F3AC2DEEB982D4155DB034B8E34D0ED67C974DC17C5108C24B4D83B5F3746
B29A36ECC28196DEF9F8BB3659B7E9A3B51C51A2D63B302BEAB4DCFF52EEF5F7
D71870B6ADABB828E33E3547481E6F3656477FB7614014F2B58F413058DD1E8B
E9F6E738900B69C05A59E308C8FA4E67D56C072EFB154BAF8EF1405978DABD2F
9A4F2FC044D63B98970186251198517B5D810E7E05001A3D2D8A732001252AA3
A91A5BB6F6870742A5C34C83E38C61E4194A3B828057B2F84FA26AEAE6F873A4
5EAFECBD5AA1ECAA5E9B76D3C254FB4FB2AFB40F82BB5B9A79381BB8E479BB46
6084A4D460044A773CED8640A896ADAB63529404B39E810B8786525E3A03E663
E1F96060DE42855E00A6B2BB77ED1FBBD792B1CE683ABEA4F7C68B8CD546306C
E5AA23D246CD1E93BFEB5CA229B436DE3DCB7DA6DE0BC21B73D11CD3BAFC4FE1
2AA9C7F0A018D535CD859187314AC5DE6FC0BE023F055F008FC0B7FB45EA89EB
6167D5CABA34A41F958D5C14187A5B3AA024ADEA68AEE68C014A3419D798F094
02F0926B511C0A4DE76AA78EA1592AEFB4C59F0AA4303A2C83B95526AD2E94DF
67204370E8FF4DE15607AC3FD5ACB21BA21A63D9A660FA8E426A715D3E204A8B
61D25080D92B9A242964F4A31595C9A123E0AA881D62952CAEE3CC0ACF3F12A7
9EFA43656B05E85A3223275ADC1EBFC79B32B97B213122975423A79882987CBA
A25E0C744FBEC8B47399E7F7B4BF8AA364C046DE36A0C17992FEFB91860EE4D9
0A4BC595B322F07D791BCBD187E73BFD577E90B09CC09E82CFB22C55EC78F600
96D4D99692E0B476DA659BA6C20DEC4960D05C74DC1971655E8051B7B89552AE
5E23082CECBC4BD177F688823081B30E9E9FE3AF3FA8CBA5047BB8EAD72EACC5
3225A94140E3A03F44CD7E0916A51B3F2733CA2E46B07B90F8813439CBED8790
4441FE3A173BC483CBA2D2B3EE9932DC8482426F9C9F324D95FC7B0F83D8B9F1
539F9719BE96C77313FAE054CA841BAF032FDC04F136997C1E6C0A9C181678A1
C34A15BB197C869E4BC50A1EADA2E123E589917A85C1B25AA375CCEAFEADF889
E14B5C912D4EBAA87202D47B64A8E68F76DAC69F5BD608B202CCA910CD2AC27A
77B0E7ADEBA860B9CC21D82901F15E05772BB39800B0D9942ACED7490FCA75FB
F7C897E10F6A843A83CDBC859E2B2F06D54A33F5B3A2628281FA322D9176AA11
AB65BA0541CAA2775325DDC014B4B2613B0BC6D0146CD27F8F1E084EB3A8DD76
4B0B401E1F4807DC33E084B2E4A7D5EBB9CD5D508457B7AF00CAFEFF8E64CFD7
338414E17511B7957D4DF223C22DE9800597829EE1B22C95E5DF1FC2E88B809A
DB82BAD5DE2A21C9F993E22FF276DD60D542586CF627228903B0D2D19510E47D
4AFB4B74740B5912A0DC1B0D323BF1858ED5109691294DB83799B544819A9CDB
F45AC2536FF71313399B498BA47B122F8F9122971B7A5E6450C1CB303CF3034B
230402C278E82BA1D50FF47F068BF497EE1B5F8B36B34E3E9BC3F17497CA0998
C5B4C8F0ADDDAFB5CED034D6C492948A72FD9C1DA21B6E2693E5F3E0C218A0DC
5584551E6BA47917AC788D5654D1F373475114C8B1DC3710AF58DB670263946E
FA757781AF3AF5E9D031A198DDC19A1AFD6F5E1F010BE11F7C15A7C177C69CD4
12C3147C6ED0D5FDF3BC88F2B634C1B9DE829FB97336C84513D803396C197C6E
94B4E9228ED5D4B615B99E93BC0832C796FCE712EB044F3438F3F7D7A9AA1352
D852F47848B0327E9ACED5FF2830085F483448799B13B9F6B50F013F301A70D8
43DEB93EAB0CACB34351F6CCE5B31D78D87A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DA7F2F631C34FD0E7EE6B3735317429D111049B6639DA160DDA2555235
3E6ED578ECFA6389BB0B585FCA9CC4C7F42B47686D65D04513C2B16E59080C9D
E13A7159DAA0C794959B8C85BB556F6E6C38D7BEB652FC09E7BA5B02E9DA17AD
5FC6F6D8BC377B5230721CA8D0530E30033B8FD7FABEB6B8E5C1B76C85EC7170
64CD9D6404562237BA9546DC2E501FD7E99D5BB7ECE52105C0F4DFC5FAB429FD
9CE11F78B19A967034933E40705B5F6DADEB6A20ACE2A5228456151AA19F0B71
13FD5061C2BC81F3C17E4212327092C718CD06F6EF731A9E1441884DC934D001
3F254D7162B7E6668CC3D8150760453FB8315C50116DB1311B2DEA78695527A8
BAA53FCFA6614EF2670AF910EFF7430FABDFB74A36D5DC3A2B2EDAD41CA3B80D
F40B0F542457CDCB3DECB360868C9C2999CB48B453F87BFF1FE9294689308D56
3DCA8C91380EC4EACCA0FB3F03348873E714039DABF128FE25117326BEA76FAE
AED726CCB2A29804911B15F9022DDE46649113F47BABCE1282C8476EF29C377C
67FF8C64EE00B705C75A8A54E1FDF6D1FC46A393241CE914B607F68D1F286059
0DB1053D7E731D2C2FA15A0413C4C91DE878EF7707D955CF0354371AF1D0D986
3BF9720F2987E5F2B173EE84080A18722EACF13022C8B766EB71A62EE47E4FE7
FDBF631B4C790D1C83573631A0507B3790CE4B7083954C4DEDAA36E34188B1B9
29C62378EAA5DC0B4586C3992FC59D0DD536C37D967857A731C4BF124510F064
1E54933DDDA76D44D1C4ED1BDBD31D1EA556E0F7B2644750870933A7FED92622
4A907C3005E8DEFEC4087F521F1ABA4FA5505B04C9E5903D7468FED5298440A8
14821435ABEA05C3600CD1FCAE1457F2DB7E35AE8845343E9F940914D8CF8878
34EF3140DD0B45B1C0E9C918BDB039E3F934319FB46B439F48EBD4D3A8551095
1883B78DA7080842F969BC6C159F56F2ECB89290AACA027AAFF04474AA552AD7
A859557206DCAAA1691BEF73A1B982ED71CE78180BDDA15DF4AB278E8FDD6078
33B48F2ADF13CFE558A3FF319B40D4A51FAC76B1068E6ED69326AAFC99FF524C
66B6082B5993843354848D89514A9F6241B69B3A23D218C14EC42406AA210C92
628D818FA775B68C317F655C33DA81D4A06F339258C79F4E56387DF612B75F7A
F2C67F87BA3D0CFB3BF293648F9C4F5EA7897413EFB32CE30F7DD8BDDB604E6B
8B2292DB6088C0111E5591FA1D91D04CD20CDA1C9FA2FE4F84BD8747D44EE338
340868B69B3D530774E8B16B2B7ACA00984FD65CE15A086C69C051DC1360515A
EC3ADFCF0B9174808940CB5D62801CF50C0C4AC4B3DF7C050E62D29DA3447440
1468FEB32480DB6B9D19714FD7E49E0C897759CCC251A89CFAF38AABBD13F774
F37EB7A91C190BE5E8B0EA0AEF73682C8ECFD1CB469F1B14F299C3AEC2C2C6B2
0A375349E6BEBC2590D1E89031D9FEE6DD44EB2CC6356F4D4BD1CB785477FB77
42B60888767B5B33A97D2AC583E6BEAAA3FB6FCA7B5170B0B45A710450983F79
015FCF94D443692AB08018DA8F22C6CC9584D82B5E95417C4D8107965069C237
9BA08FC80CBDD4F1D8799D111DA0A882C69078B48574AD10276B06F936AF258F
5791036B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D7887455928F3FD7439E6585D0D52DD944C862457E6A
4408DF452780C5726F169B1A39142DA956D27AB53C0741BEEC8FD4E438EF4781
F3ED5AA6793B1018A5E069DC6801A04FF18F01E98BCB65DEC7EFCD5FA1C9ABB7
F755BDB82E4ED475C601B80CF3B9EDCD76D865FB0FC7EA564EF02982F2C39F94
0B32D3BB74B44A6131AE0269B8D83EA7DCB011FDB0360BCC2BBF2D9252E1B54B
B5E92587253180DC2EDBDC37651A003E5DA7DA387F5A27E2AD94B2B3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 73 /I put
dup 74 /J put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB33B2B81617E0A3B
46F9E351ED1B0D909D890CB9AED122BF55380EE81603260D450292EC7129028F
8E148C765088A92676666BDD36A22E617F623F415FE393103F52EFEEB443561C
1B1603C4F7F2EA430BEB57F2DF632642250C53536E185B6BA0751AE757CB73D5
EADB73CDC2A0E1B1942ACAF6A7F5116F756A4EF458A6DCFEC3F6E65C2B9D6E07
F13C73D8B3E9E1F1AB6D14FF56EF62DA5A9823815EBA2D35707BBBD94F8171BE
58E4744A576211E217C36BD0AB7F1A0E1CEC0CC09212FF8B84DE7D2FB08874AF
FC1395B885AB133CCC78A0C0F7F14DC24457DCEFD0134F6C1FC758396CAEFA4E
9A763C9081FF5140770053CF8799A743B23B1788A615A41FEB66397F9F65EA36
5D599CF8BB00694BA03174E5CFADABE9A66848CDFF3B7ED566E4CF3B05268EA9
56AE0E9B5B242E67FD3736FD0E72E9221F8355688A93307FA19403531DF85B0C
C4578BF5499E2B84AF54818FFD395188C1D3789BEBB6FFD288F24603EDC95AE7
859C40F8F48A1565A3EEB79822114C716EEA2520102752460376EF43046A79C5
5526470357E2FB22F49467E3AC99675806F8763932228E0A6356DAA31D888115
CC703D16A8B700BFEC6C9BB97E21512A021E6D06C4DEE62FE8678D0547D4979A
1814387F109168C8107B34C9599D0581EC32D7193DC1A5B11EF6298B5F6B9340
884D10FD2D8282FC31D7CBB50AEB45E7C582630BA78A545D4BD8B71F688CA53F
58C134D945C0E4B6FAF4756BF902B844CE0E1954F8F8352FA021733485B43566
BC05F7066349A382B7587F28A45760221C29C2F6764D5AE4C8A4A99C8EB15E37
E5752A5C69ED029610149C411B007738B0C1B6F48C067824EA31D14E2FA2F57F
38E181A225105AB820A93E555985E401692C922C250DF798CB2F1100903B6E7B
935F21D8333DB3AC605539219B45691CFFDE3084E6F813138A4EB3378E962EC6
6020B3F86A457CA7E3643557C8D1AF6A4C66FE29B17E7A96C58C647B2C8C9217
6E47C7FD5786E08BB6DD4EFD778CE3955DCB1C32A67666252F4500B250353FC5
895A61B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSS0900
%!FontType1-1.0: SFSS0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss0900, tcss0900, lass0900, lbss0900, lcss0900, rxss0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-209 -321 1528 907}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B507C15D01A48CEA1B39561EFDC256C
5FB45057A54480A0B2F8EA705C884B2BAD426156445992C03D7C9EDD5CBA2322
7445EBF42B99561B111A2FEAF0270F82F2D1888A340C6B27130B764396FAC49A
E525A0972590D8C963728C8C8DC427489CBD83371D357A87DD07EBD71627DAC1
A13D2398C591F9D869661B8069F3BACCA9B3CF6F202A12DCB2BA563924AE5FD0
DD40E412D8F90A8DA4CFBFADA63F48A504F75E1DBE685B708F61E3DD7C8613E8
BC7A623D7E9A9DB0C57D538D6E5AD77165BF4E1C8E56DF1D5E809264C051ED46
49D407DA6AB0CB7CDAD6EF63161653BA0D4B65853C526703878C907C82A23191
601B75C3CEC0844B5433467732B64F4E9302EB585AE595266395759ACBC132E0
BC10F0AF8D24DA5F4058D6A19233B3A89F30BBA72744F69B5F3984825E78590C
8DFB3F5A5FA2CE4B728B5FA2477E68DE373964BF7B09DC803519221A80391CFF
916BE5655C26293C30215165D731198DACFC66DD5AB418C0EC3514C48D96466E
0D48A521885FBA0391054575B8E6F829987FFC32802C8B3945F620EE51228F1F
B6F4F1C0296BD8FF18A07E3852AB1189D4CFAB335B14A7BD52FB4E16727D43E0
51EB0055FCA6E538D916E2677C6C79BEA58EC3C20BCBDA1C5E2A8ED9A460C2ED
90619D2CEF8746D9C6838E4639F9CB21F656D85FA3FF222AB5858480AB0CED32
9C9AAD06E09E5E7824A49A4E4779F1BA2E40C157666751F6BE6AB4D041902FEF
8AB82891F9E76A18320515F9BA5338BFD5858F35C9B8BA962C27CE57476B10B3
484D458BBF9A811A35B478CFAF1B243B7AD236D133D4AA8AB1E0B081ED879049
84454EEB264E6128CFD1238DB5A759417E0D6A70DA9682996F6DBDAD6453F250
16DE66B3DDA3D7EFA6330617982479AA6AA248B2B11EF62CDA62E8BF15A2B75F
595BB6D3F778A7D98C486D3882EA4A2A2644029ECC3FA8E42873D67EC2F5CBC7
FA75DFAC461F88EDB7D4DD536A07F238E7B2786DA6DE13FC1CA92337009C13E8
ABA917D42588490F2026A4B467CF3BC505F399F495D05338B92645C49F5B7908
95B71B9F5844D3E1C487DD638680188E87C0A3A5977F1DEE184B2832ECD425FF
9CDB7E8738D8E4E1F6D64D183E04A62B7303EF87BDE4603A9F694BC671E4E811
982D89C499278A7508C0B74ABC4C9F19DA422B7F9D80E30A8E6202CF330146F5
27C15E4603C39E8716F2467336487D54CF0E06F448FD589381B920E19C0C1E62
4A494468E54C69BDABE0688B15CF4D65DB2611B49E91FA1C9AB928680D1AD07D
3EF72AF7F0FDA23DE677677038482909B802BDDED01767FCC6000D70207FC70D
3706595D0196AA31847CEAA6EA1FB37AA154B07B8CB0F80F5DC4372AD9AB28A2
0371F704507B26383C56D93280E20D97F5F8C0DC4D1115BF38772E864BBB6CDD
4D9DD58DED24E434D98573336D5F16497CF07C5533096462A9F20BB974A830F9
EF555FE95FA40A28D7DEB27B069A47979A1AD7060F8AD3C5B247E9BA72A14E50
D6A86C36544C5592A41BB03CA0DE37EF1310D452A2D5D67B095EE66027673F40
E02DCFFFB62F4425E66E76F133D7C384315D3A4D436E3A3D6E1C289B9B87015A
90D6FE80E48EB1B2D5A30D974A7E9B24DE1571C8D781D8BF8D3C297A60E96B97
41B2500F9C2E4BB6CD58B85E9355B1CA091A4D577B2E68B3BB5D2EE89E1490EC
01CB3EE66CDA3FCFFE541BFA01E70786FFE2FFB5670A5BC3AAFABA44733A950B
86CAF2DBCCAE27A9CA54C677132FD4C5CB80F0D89AE8ED007EA816B3F8D818EA
9EF9AA5A906093B5D96C9080EA874898A185F239B232929B577C97D32873563D
5F85202590E55EA927A0246801627ACDC2FB0BE59077247336575EEA9CDD6E0F
3F6BDFB490673720FD6A84B18D97C290149E8D2E8EDDF908066829ADA91DA1D9
68D167786AD67A455608F15816C29A27BE5BDDA3D66EBF753DB70B2A2134A7F1
095A0EE0FB238D71E2BA17A1D157C1E718782A5718FC6877AAE3ED1C511F4868
6A0090D3FE6EA48E07AD46302A9DAC0C40A97C0574F346A8D1B0056A4F3057FB
802D1F08D0BAA8BDD7892810AF738F5F7DB6B15AD8F831DCE93480DA2A44FAD2
EF17FD7E4B3C232F662DADD25D145C73670A8F64B19EEBE1F81EAF5DDBA6A5B6
19FE80E483C5EEF955DADFC0B4241699220A60096DBD2C9BC356CD14A8E9A887
E9C50F38D79336D47A4C62566C08D7004D09BF7CE9A0177307A027CF39B694B1
9D20FF3AAE46D82F1ECD6E4B0CAE7CF1C958AEFABF2B71AEA4E13C9B978671AC
30CAC5BB6BB5F416EE5D3D1B0645D5A38924446201D85654CECBEC9D0D0BA748
9FFF6699BD3F97B7A08BB1A14514BD26F0440F07FE30B28F6DCF8C1900D6497B
38B14A44683D59EC4B6A07A18A48074357B76238AFC875A8C56343428F175DF2
9B458604995477A27ECF26DC78A89DCEB950C490E8E51F94BC7153FFE0215D52
01E2DD8194409C9107A29D15A7CE24DD0C13D47D25E6266F301251A1466EDF09
418DE15F0788E1E32BAD8DB5E67BF9EF6CCBD9F2ED9623FD65365EA371823F08
028CB11C837EEDD00FDFF3EECF3EDBA6861C6BEF39FD8692B4BA051693281A24
F7E8E48641A755898C004F831ECBA1C6E9020E93A241EDD719DA62853EF535C7
209F7F789ED599E79B36D9E48E1BE994C9B7B8BBEB52CB066DB26D7492A5DCD7
8EB1E9DDBAA2850B92284B30DA6D6215BE206618BEDC771808550311CD967D16
7E90C9A9E77CC2037E78D4FD3497EBE6330A6DB6C360FEE676E9585380AB3606
D02683868C888DE6664AC316277D0CE8C582593DFFC5E4EDDD6FB7648FA5E8BD
A6B8286E90FED802D1F35D2630B7DE482DF6D7441971B39CF9901E9EE7F47D34
C41183F55C0AAD012D2205E6175FED4185457EAE12D2F059C2F67BA14B4395CB
6BE7925F17F4FDB573A92CA29F968D3585ECE806D4775932944E4B7D2240F0D3
AB7AD9B59FC4DACE4EDDABD6576119456D0EEB7D92E06C2E24AB373BA0B05F5C
32363E87657B9F5424B4D63E053DF21B6DCFE6A515C6E9C4267BB50991A8E7AC
3C0663A12243142A13BD69AEE83F66ABD4BC7ADA4DCC3BF5D53CEA3451101DF1
BA781A06B58C38C446AD5881E18C2DAEC09606228CF9255D8D8FBBDEEE31883D
BA8B465207ACEA1E0F839DEB22ADD47C627C89391C7135AB91DA2DF8007B6A68
F73A2AD162CCA49857A84B4E3641DBA9F7BAF26E212487DB9B912FECC09283F3
A712F9BFF2A2B0638A1DE7017EE01B7568546892558A91637FE49B03F893589E
3AD61194630224162FA0771421FBBF3BC67C978F8BB4F5DCFA902BC1F61B40C5
89028B5D69BCDD7F9A183F82EB2FA5E5B3FC79EEBE0C41A7F8DB7379101AC496
58B50AE915F663E992BC02E9D49917F01C5AA02FB48BB33305606FA77D7F097F
3BF1724A0C51C87BABAFAA5E72CFDAEDEA14B7F6011B43BA565ACC08F03133CF
9ADD6AB74B4F076B310E3EF88A19C2D4875F588ADAE511CE7583AF4D7FE3C1E0
2C38163843D27A9881EEA137AF0C4F7D66379BE72400BE1E7C3700D030B90D1C
02456865D2EECBCC9261C25B6A9B7EE808EA2C0FEB969BF710B6924F935826A2
014C48E0C1127DF0A2C22BF397B6C86293C40A95CEDB254C8990B3D25D8315E5
7D7B2C537FACD18F19CBA04421DA00763E0031F0A13AB12A8522138A17ED1C69
FFBC84A46FC5DCA7B74E64CF75F70F6E31B29B4336402CEA9F64BEADBC2583F7
9CA4B5D2CE4567EF7B00886ED9D52A21096FE752B45D1F6A18EE83CA9CFA7CD4
D5E91DEC77A8023731722762C57875318E1A50D5C159E555063AA1F869534DE6
593F9EF18C3AD93094FEDE119533E2D4EF2545BEF5441279E959B2B87FE13DC2
90C53819DBDC232C090654E87AA569458C45E48DAFAA5693C8C0320BB613D38A
605042E9D1C3D61DB1F1BA2E6143A0EFE50D03D2823A4E3F9E323AE7A00AC1F6
7B05927944074F3BAC5691F76CDC780BCA5096CC65DFC64D29B8D5383AB418C2
6E10F395C72CF231995D77233E9F1436646B92DAF66172FC9E00FE0677990264
12C3015BB9C41B20BD2BF4BFE16F06211269446F53C950E0AF08006A4FCB9FDD
4A641419D3853F254A574B63D892478DC1F1011977C4F4FC48D900347A6854C7
68BC146366A7F1D75E9B19BA47122586EA666094F0F49BC3F3FE6FC0DB29F4F4
168DFFB294E83C03EBC57CC745AAC39F5FB6A40CE7DE8D65DBEFA5E50207FC94
DD6E5B41F5D52478A366BC1BB19B263A67F795D871B9E24E7C8810558FBEEB72
26ADFBBC1DFC0472A9BF96CB4FD1B94C80B3BC32C36588D4CE51690047D28E14
AA058A34FFA56E5DAE5B390947DF61DC24119F43E096CAF95105A06F14A062C3
36C693A19F91898A1A9271B3AAC47A2C9E8B589AFE944BD226D4263EEEB12611
F42E4327DA0FBA34901D53F6E6B663C942CA08532DADAFA79E0D45D6A73671D9
62416684A22191BB42D74F2D5D0666A168FFBA81604F363D502154AFFB6C1366
BB3FE58FDBD48DAA0E8D87160EE7AB892B3A84232EB895716AB4A931B60F0B0C
42AB91B4AE59C9008C97AC7050922CFC3464C312231B9A1D4C800D14EDE96FB8
A33299B7BE6E08BC8D007BAE3C279CD88430EE1D3823ADC38E8DD88435BD346D
73F0B23901E0EA7EA2E94B2530620E26ECC1EEBD192FD5256807612EE76BE915
54C131E4B7B80C90CB416F9726F2E314BC8E0DCF061442E18815763403CA120E
BDD79275E18F9A2986F0715D168C0DE8CC5D32447D0F793748DB19C5BFE3F721
87D83B605BB6D8AFF2F245A0EDAE271A2212CC9CA7119AE30C0A5FD565EC29CD
1F6A46AD7CF224934ADEC123374B0BDAD6F427C6A79A2DB1FF57DD8880458155
8001CA3C53297E247B74F8CFE5C222DE1EFB9A87759400A20F91967940EB3741
5182F40F510D7CF3591E0382602A841CF2E76DCB77216C1A8760305A4B3CB8D7
F11F2977EA82C86A5A416A838A9437AD2BBC6E36608A56699CEE971F2AFDAB43
79049DC042E28A6DFEF5BC66C8CB334D0824C5E83AD1B8F73F3A901A04E4A53E
798DC408B9C79E5BA65FB450D7E84D57B5CECE4335A29A436FAFBB65CA21B88C
D78D50A6ABFFA7D9C0E8653A86DBD1C60C1793B28A640B89E81B78C1DD1B51EF
1603F269EF8CE2215249880BF61BA3519864172324AA6A4687B00010F5606B55
DB67AAC77AD528F55C89355A821F8A929809CA9037CE9E5785FF9C2E54953FF0
6346EC48C5A36A3361D3A25FBAE4BF74C535BADF232AFB3788ABE75D0752DD37
C962FD9329D85F651BDEDC1B02D7D06B9B6560380BFCF6F358E67D2180A261F0
EFBEB9657DF80CFB18FE333314B973859DB9C3A493840E672C9417142B5A5E9F
6B5245C3521CBADF7A40109543A0E33F06DFB8454F8814BC216ECFD45D805234
F98021CDA392974B4B64F45282C415E035806BD1520FBBE6DA0A45196B663668
CB1395A056C4B7AB0916E9D4D4AD67C43925DC0F362332918B55AB52778EFF58
527B20D97D531B4C881BEF8B02FB060A9846B02A268753ED26EF317507A84621
7B86967761CBEFAFD511D46B3BCF5CDEF742725CBBFB6FB86EE2D169E52A833C
B6FCB8598E3D2CBDEA5036DC01C495F332F2C9C1FE9325AB466BEB00B3229988
2AB3D2FC834C4A271DF2A9EB283E7C477A60E7DF39E294757174A5472FD4FD96
272EF0A0F27AFFD81DFF434443F70BBF364055BB5EB465B72FE7D0FBFAB51538
EF641A2A2C0936446E1EC84899BF469F19A7EF66902D50ED747395FCFE1DAFF7
9A2C3D783CA272ADB8C79903919D94E4D500F366DFB6D5336D7F664DB861159B
AEE925925B102FAA709D5F03AF6E83E7F8639BD21B33267259BBCE89B5AE43B2
D37ADE65AA6715B9215EF6F3768C3EEAF5B27F8E0C93F752D99DD72CCE927428
1F2CF9779302DB3F646C15BFC8DF392E39088C1DEA60A953460930EC3B1A44C5
CD237B603DE6DCAF75733B1248906B11848A341E3815EFF8C9DFA55ABEADA3FE
720E77473E0BF9606C8671E31C2D7FFA4333AEE203DED73B50B5ACF0CC4266A2
44A4DEE5288159ABE3DEA439C317D6382177236B2E0D1C612466E6CFB61A2AFF
72CE77AB06D1924FA7454D77BC23F2ACAFB501AB2B233479BB6DAF664622CDFB
88D3B1267BF7327D5236D8089ABAEE437361ABB73C7AD0A666F84961B36DED3A
C46D1D11C9D3FC5A3CEF30F1C51F7F94393162E4E6C06613178C35D9DE3F9F9B
1586BBCE163EB43A93BE798A75D0A3E4B9FCFF212F24C988040A2059277069EA
E6CA5847D605544E48E8D833C39BB3F156B525556E556AFFD8C36C3D5DC423C1
6A324200E32C4D056D0B40D2747F39A5C324300D4EADD23D7A4A737423C4C1BD
F4EE8C7AA08291CD5E659A5D225B266832679B871AA08B97528467686E826C66
F81515DBF0DC38B9E3E39862DE4027269CBC45C782599B6DE3861A3EA71D6B24
678CF8EC9136EE37E5C3D4FA34D683CB2CA8400AB76E8EC39F8C31687060538C
AEB9673C6F9FDF1718EA88F8A4E4A42DB10C971B1D6DB1CE7F67BCA204FB040B
1B7C61738EAFB865B8E4B5A3A8492674F4713B63BAA127DD5949AA249A6B926C
A6D95C8E5F4CCCEAC9C4D7C8DCC9E9AD666B43D1094FB1D5261C1A2D6A66F278
8FD8E5E0A7FD553924BA9EE28FB3AC37146B67D2C6D7B83614DB4A0A8708C70D
2580604B0FCBAD3B416F24E8BE44B73B508D4F28AD6F556C22A35B0FBB57ADE6
0D6ACB9DAB3994F30DB05AC6E7C0F9FF1BB5547E65A3FE116A5A5DD5B474F3E7
398782867DE1649F2DD6057C73D3584DFCDF344DA46B4F778F8EBB2ED4DB1CDC
183EE95CD7FD113B76F8BC41E7C4EB55DBA3CC330E43613699860BEDCF6065FE
497E1DC807BD1EFB2334A2A474351387F4C432390001113BBA80361DD1994CC9
C99FF6CAABFF9FD7DFCFD127EC22844F89D4FD1671040D82480043F144473FE2
78512855DFC78B82B2D7492D139B7A46519E189F3D025806DA2053D09929DBE8
AF65A048C597C8B5A125861CD358CEB2F816E026EE0F24DC2A5CB2136FE62701
94B705CF93A96F124DD17B9034A05757438FA95F89795756541686B4EDA21847
ED75FF8E3597EEA64376F64CC09BC29D433088DDF826DDC384CFA8C3070ED0FE
7856C6B53A9D9E60B68995BF5B6E89C37EFFEF7512822D34D783E04BD785B132
0B79C62F52F91FA35A38E713BEF4E53AA6516C45689C0D6466269201DCD08672
262787F203062A19A3942FF3A0195A6DD4418A2A4443401A3B74F35D510C63EF
140FB8F4699C59C6CE3D78E72BDF6DE7EAD405DE1C40ABC0B3B9A6620AC2C603
CC0160A6CCFDDD2EEABC4525F88F405742AA617C4D060BFA34E34D5E1B104784
E9315124958241788A3E4166F4CBBA4581B91527074F02F64E7A4EA2A4ADB5AD
67C0675B0A0DB670479531B419671C0B088D60C4EFCBD08CE4E9B6CC30697FEE
88CD0EC542C8AC276C77784F140B333DFB34CAFB7994B8657BE2B93FC39C046B
EB5EFDC2A2FDA3DAAA421622DDB73F60A73CE58CF4C79FAB81F231D832B865EB
1EBE35BA9EF27E6E2F9EB2854C5038BF70E1D000D862AD056EDAED32C88658CD
33EAB38EA255DEB256E35D165F0632ADF4528FA77C7D7CD62B3CD506D974AFC2
59721B91651AE6921FFD3CE1D492CCA357896145C5B3544B817DE98840D76639
661EE7E3A6B14E72498769A84E364EEED4AAC06204ADC874ECEF9591FAB46A45
17EC504324EEED2A49978BBC711BD3DED977D5C9705D9F20B7E962CB73043FA4
85C59F5144C8CD98A7D2450D649729EFF5474AF1F5B0AEAF61C5346702314C4E
FC84F7F8717E58A8B9F280AD60227249202019595FD58B17174A2292F5255959
486C13399722FE508B7292EF7B4357A9EF6168AAB4B450AB8D3199491B8F46B7
002184C6BFCE8CB1551D5EC1F991A75310C0B773570C9F1C66BB196916D808ED
CEDDF5603C773B7B884E651EFB7E47AE3DBAD943E09F941523E526342DBF786D
8AF42B6E4E62635FA01A3DF30D8C471E01C2948081CA7584428EAD84026B5103
6852E95D19BE12536AD3EA4FD7661F2C6E9CAE5BDCBDF17878657D4E8DB6C8ED
330C85D359ACE38577CBFA166E616786100B0F53596D02F02347B52B82555AC7
BAD87DD4AA955BC0EE6CB3E47590D8D82044F5ACE9FF8DCBEBBECB9E355149FE
52C91A78F18197C2580DD5979E8393E02FB94F275167E016D2F686CBFA852245
770E1750E899F10316ABBCD9888928EF59084DD2638156703EBA8FD0277395A7
830A74C16A4C50131F02B7FA0D90F06DF41F43FC76BFBC668A1A3AB6CB8EFE80
8055A12F1A2AFB7FD0DA1BD4475614F50ADB34DE866C1BCBE11C4425E1902E75
FC806A2A3505125D12D885869A7D18329502C0DDA92B28ACB8419509DCCD70CF
F5B3A609FEF812203F0F06AEB353702EF6AC29738A78012D1E0E99EC482AAF37
8BC29AEC3442EDA08E178457634E4EA8A0753D908753A1022518E77B6269B158
7F524FDE491DAEC42987F0D9A3156CC7ED6952C0DCCF6EEA01A8EEB037F7A748
ECBF3922BC4CDB3D682A0F62938EB00D7150FC5942C95272E0E242E7843B6803
C51AAA422146E5B4F138D0396926266976699A1D1BB34A89E3150D408A02B4A8
BBDC278F7847E6E9551B15F83A1E0D41B2ACB1546E09076A33394AB78D5CE8A3
3F39FBA133B300BDF6D0D6C97826F197A8EE3494FE79AF7E4E0B333A1D5AF37C
997CFE24F1BEB2F368EF4493044623114A57659A19F708374056FF2566EB61A7
10A11CAAC6A5A94B5A2F4237BA0C27A5905284F4C5106C4367C76192D49170A3
042A399649829BC12CFADC6C9DEDC9F3812E29515AE6B06E217B71C1AFA6E6D3
B40632DA3099B308E489FFBFBB1D56E0E5328F4D39C44475D037364844201F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 59 /semicolon put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
20AE6E9BC0C1E5143A5DB4A439B103686497DE2461BB90D37C89627BECC0AC55
70A57C2909F2E640F991D6F12358B5B114CA693BEB191961BD78FF2392DFF4CB
1D7AB6A7B88149FC49EE895DCB134D1F38F37B025300E6ECA5BFC73C09D36274
C91F1149C89024DA3E3E002510352FC66C6F7741A542E9CDE296B257752B47C4
D02D3C71B5E645C82E92F057EB5F859BEE23DAA95C5690931A7FB96C757689A5
139FB1A3D7983862931EEE55B227F74202FAA42ABCBC4C8F87471310CA26A9A3
0C22114AF8CE12BA8CBC2DC53766999328462C336129225D3F1730662979FD70
9E8ED21757A638B2ED0151BB22299DA9DC600CF989B042B6B08355F6EA765031
DB63246401C56A3FBC11FAEC8EAFF09F46B07FB687F3261124DC587C5DEF6FF0
91ED97A96DA52D9CC00B44363C27DE6DF4AACB189CFC990D024A8719B98B4D3D
D52413254CF201D41AC9932AADDAAF0877959AF1370268AB1F0E9E41C1E7B821
93A0F5CF51A67568C7B61BC71CB86A66D2262E4D10F3FF50620AB8D08425FA01
5C020ADE4BE6DA570DC2F2E6DE8E4BE233CA94D730AAE868F185D54145806710
1B1F500FEBCDDC466B76D18855CC16896F291C895CE07D7B3AF4B068A6613024
556EE5C6D1931349E06A560F3B3905C6270C74DFB15B31C0EB8C910767C395EC
B870DCD890331B8901E76B80E3B89A01CFB003D77233A407AEB0DC081577B6AE
44C6E4000F8E83E0FA13BE24CE497E30617CA186D413D7FBDE7A1DE16C177B12
8893D0DFEA1ADE0A08009D2CEBBD8EA7BA2E9F8B8FE40033FDDF6268CA71BB04
D0323445D7B0D148E1843D354DED065A14BC7B27B47AB8E9CC40C85CEC9807E2
1A6FE0FDFE69DDE14DB1462E4F9859384B15882C6B0E22136C4AD3607A91673A
3DF62988DE97DA96C5C43CC639853E37CC6630F796F8CE5ACC4F49566EDF37EE
388C67FFCDF4EE3796E249E401617B569C73B926848491947DCC5B62AAE47E6B
8FB0144A861E53B3DFC693884D8CDA81F01E0CBB7EBEBF9876CFC52EE5362FAE
1902F965AE83DE11FFF1D03C0E249EDD9A62E23446FB6A84F5A925E134E8E4D7
6E3EFAA2F49EAFDDF799DE808ED0D273EB6C5E74C8B1810ED416C5B52DCDDC58
6252256E113EBA77A94CC74507B84868330F7D9D1BF4E6C5742D4AC7AB941BB9
B797E98B0BDD9F99F7872B58D01155020EC83B7A464BA7AA1E55B9ECFB39FD1E
B6A6B5C553A23C7C82C170052C027C1611FC07A223DFE4BC324C436303E25F01
3D1F713C24FA7BFD9CF6A94171E466E55C00DA09E33D4874B43A3D1C2B921E66
B6CF6B1905140B6A4961A2097365FF16713C9C9309A59D6E4752046533A23CD1
D29BC72BAE71FC785C092C289C14A28B8FB816874323BFD2F90D521F1E218A8F
9D9823E2DEED28D6388CBD4D84F9F16EAA1E2790FB1ACD430BABC60F72CE2CB7
1477BA0797072744924E9BE955A93FB6F8DAE744228CEEC138A22AA5523B69A6
0198A1CC2E1EF2FCB85733EF1D6D07879F6E8118EEC22A4FB710C62F18F8922F
4764F9C0B84B9BF9B83F81CC66DDE14690ADCDC350256CC9F6E8048E1D1F0CDB
7BEBEF542545996FCD0B3FC0838F22A1DF858E1AA70783D26827EF7E4BF21D9E
E27388804A86452F96602B1F13A07F77DCD32CC402E7064627B70B61C63895E5
B1BBEBCA971E8A18C7CC04DD198AE01042521E2FE59741A5F9A426C5297CA2FE
8E6B9D0B35CDD7C64530B56DD27836FE071DA4F076AC94659A2CCA5D4CC9E391
3EBAD08FCA42128AB93297BA4E3B6D49BC00F4ED0E85A8BB62877913C7467F5A
3514D36692C90AC64A39A15FDA3182FCB4F2E403EFEB2E3BD790EE474BBB5769
DB0DA2C1416A56738273A8D9D19E2B1907E2FA0FAF3B761707841DCFFAF04418
90CDD721711A2125A89F4196C61870D8BEACF161ABE60DE56CEB11148277080C
82C2B93DDA3D9D6016C6FDFD59919C672DFA1E28EE435F1E35E92B0D0D79B7A9
2478AD9897BCBCF1D6DC48F3C1CE18466184725D2EE4289A24C79642E875C752
D768E639113E76C510ED189ED8FFA93F1F96FFE6AEC9E8DA1E521D197C53EA21
9F0D8BCB2164894317B653B3BE7D30E13166966F94FA6782DB4CBCD6D3F87C6C
20BC8045724DF0F290686159C1332F815D59A58E911773DE7DE6D827DE7BBAA2
E37DC2DED4B84A5C059A47DE3D3531E257C519712CC05FB819DE57B344A51AC7
B4CFCCEA098D440ADCCC8B7498DFF6D4120DA3610C98D079FE6C78EA43F8CB0D
6CE10D99794A6FCAD45E32CDC558377EC868FB064AF65B7B905EE2A60C591AF2
4E186C569837A3FB9699D2FE9EC6D9583DCDB04E2A8A0AB95F10F16D5165A156
0847D8143A6629737EF92E0CF5F8CD3A0961E059E7166FE1EF97AE616E481B70
4EB19FA85AE751744CA2A16821D5ED2B6EFF3F01028975C55B4431EBC129FD8D
4C0B07B71BEF3DDCCD8D045B0815692ACAE9C6921FF4ABDC7BE6006D54B3F1AC
FAAB3DF05C0AA58D2DD5B6BCE42AAEF50BCCE35C0D74C5F7677B4D301CE7F31F
4177621F5655F58D7276B5A54DB636370B440BACF5BE9B6F32B49EA6E30BF1B0
E9E8C6B98814FB069988B414F538F32E5AF6409A90A5A864BACBC7212C050C02
935532C1583F6A94779FF7A35A0AE7943DBC685D73FF8752A37DE82CC6C57F66
5EEA325E7431C94D77EEADCC93D76B4D6CC6988A92DBA117F1DB6733AF7261E1
9E0B78B348FF828D98FDBF20C0BDE6B2EB88B4DE0B78D6C66BB4C09E338FB1FF
9DF4F7803E657C2EC1D52019646E73207A7FB9170AD694BC178EC55EB82B1E63
BD6667B37D10661F8A32D3E08D235911FCB61F8BBFFBF459B6668EF3EFEB1AC6
33F6750BB020D45D757AC57BA5CB8F5DECF9AC0EF860C5CB5F059079D3D62C90
EEEF17D07E46160A23EE42BA1EB0C465D2EFA9F235D962561738880A8C7E51CA
14AE601C8B1807AA8D5321C48142C8C83DABBD5E632149234763FEAB133CA3BF
3FF6FFF6F90F483B3634F25FEF96E43A8EE547D6E90A7A72BDE3E77918241DFA
5D49F63A912C161E2FAC18E6F34F7C1628C7C5A46305901FF2B523C2FA419B9C
926CEF14A94AD969971BE7F072F74EF77358250810A6A833EC1CE68C5835962E
B41004828692B543DBAEA5376DAC1809EAAC7823DEAD669FE1932CAB394CBA8C
42E3C360C59DA6941557CCF371E73220D1FF4FDE65EBA17BC8328829C8497335
F1B602CF8A5D6B0E3D21A9B70B58BDAB543A61A47D835112318F2B286CCF7BC8
D28879D6E7A47D6876D8EFF300ED23BBF1AD9C3BE185EC148EE20F6897E648F5
D845231C025AB85E3333D083B97729D715B9EBF4CBFB2333210ECDC863DD772F
6BB1C231F269FE1AAAC134F046AC1D071BAE29A37365B1396FFAC29A36EE50CB
1EADBCD678B4CC9D3FF8772519000947B8BCABB55AD73AC36186391C0B064DDB
CD604BD189D0F1F31AB66CB727807BDB800DA1C4306AC7A8B754EF83B741306E
B560E09354BDD63CC3200277708E811E11065584A18B6B3ADF789414CF2416B3
5B065C3A5D79531CB228C731CC1F659DB562C32555C4132CC7305FBA7986B810
36090C1B3C5262718925910AC46D8DC4D0899E3CA90219F4E1C4E6930AD885C0
54E3733E6A781D86AF4C6ECE0C6E831D59F440C29C1D89E683D8FBD5A502559E
6AAA0BB501E96B01BD2DCA3A787DAF1F391F06DD775305456EC79A6FB3F8238F
551AA1F5D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D330
CAA6B2F58179CE94608E69240E41CBC436C8E761E295B857FC933CEA15A3839F
B798BD3C1E18BEC7A4719B3E1F75C42A86C70CC864EB4A582875F3F1EBB30B5D
DD611D834213CCAAC483B43B62EE620C1C56CC7E9CF8704FFCAFB05975961FDD
A498D72C313AEE1EFF147266263871ADCDD2D2CD922A19655959CA79B74895C8
8B7182B78039D2C3956923C9DD71A04C7A9CF032A8B76B159EF695080C2C3A54
59F52DF5237EE2205F873B86412505B6FCA5AB5BC8937AD9FF4898D9706384F6
1FEF1A5C7C895EA1EDA6A750662B898F653E32D62176E87C9CE253A193BFAD25
75B7B23BF4B34665B2E845CA1FC919DB615759DDACFA832671761DD5246D5693
39DA8350346DF7BB65ABD3FEDC0E43AEC9E0596676BEE5AEBAA9268DE595113B
241EA196E982DBD1A4CDE55C80298C5DE0BF2FE1FCD64AA04C471901BCB60CA8
EFB38A336BF5DFBEBF01FDF8ACCCB150B10464B5E6A5199560F772189D63591F
45AD67FE37D56D31C1FBC249CDAC44E2EDBC2B9A6447571D99FB1993D77D159E
BA701AE0070BD8F91F309A874235CE3F26AD2AA4182862E079E33DD3905A1CE2
ED8AC7DF3EBA3498567702CF8E4940C2C1B70B389C0B46EFD1F7DC3EF3FFB44D
5CC9828BC1D5FB01AA89AA71B4FFB75C6F196F98088614EC1F9D586E0030AD6C
425CB2525D0E49718854B764A73A5120F1F01E338A31C18F72657323F4AC224B
40CFF97F42C63DFFC69EA76511A0492B2B2B2E417277058DBD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX0900
%!FontType1-1.0: SFBX0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx0900, tcbx0900, labx0900, lbbx0900, lcbx0900, rxbx0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-237 -328 1789 944}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76F8A3359BAB9
9CCDA63EAB4501FF88DF4CE0D9DC9F071B528726352196D1D889EDDDF3B8AD19
A05A98215C1A2AF1E98BA6D25E3EE92459564B169EE8915C4C3A77E21AD623DE
4B78A134EC9973C88752BA636665292269AE953747C9605B9769A15E719E8036
4E368E46C8FCE60112D1F5FABB556AD834401D6250529F3A1BBAA7679464B857
F4746C58E043D98AAFFB21E0368B3110A911F98D0C1B16A668D8B3CE65260AA7
E9A3FA32A95349AF8AADB1AE65C05D8C83A10ABB656256C77C42E4E4E7DE2DCD
F47BD54EABD080A844C8E3D14CC76E40490B3F2740BF3A31B1BE2A1A10D3954D
A0559D0C6E3CB61341E97C511E890C257FA460776D89C10F71BBBEBAA341A824
764DCA30A77C592C41937596C75EF3EAD46A6674D7A8BCCCB3406A9DEB828CBB
06839705E40F7B63E0D82793FFE90ABF92BD4D63A08D340C978F732DD94E1D80
01CF42E840B69F81A06D1F0EF76699D7CD4B7BAE0FC927BFE1BCE7293FBD9165
BC7FE354DD568921FFAFCCC882C5361D9B52E4F9C7CB2881F35918E175B9B30A
D79F6CE21473FCDABB0038961F487ED20E40F8EAAEB94FFEE0F257B26F7BBF2C
8968E285E6F51FAF028AA98D535F86E5FF64CB415ED28FE38374D52E32F31B85
81CE737802C9E49CA68724AEBE42E39E5A29CFFFE6B64A9EB5ED97AFF68EE381
AA4FB3257CBE66B9B37100F3789CFDE42029A6E77500B2723B07724B484F2134
14F917981B6C1C6DA420A817DE3CD76EB9B854805CC6DE20C001B5D02271C406
BC3B1576689E15BA0AC6FE84864788149F41D3C2172F73AAC884772E5CFFD61E
66132420A37FB98F940B773F20E16D2AFCC4A55CF81BCB8031D291D5F3153C17
73C4B9A21962EBD0E9D5EDA3CE7C1D26F1009CF2C69377730189CBE052517CEB
71717BC4E232465908EF823D07A5A997955405DF1CE23F77989997E6BD5B9D54
8EB45643F18204616B93AA69C30917E579888926441AB54B25679A802C06D1D7
D60464DEB8883F578DA55E53B2F30BE245C026323F15A881F6A2FD799466827B
328E6CE80BFA2C5B3354582DED5436471E010406B1E6FB872101BA5B53A97E58
D40FCB5A50C614A3CF44E3C79B1C4FE879F8F418581BAC224F8E19535AF1CB97
F7A8410B401EBDC56FD8209F550AFEECAE2699AEFC4CD1BAB4095A3232F360DE
31BC26F05FD9DFDF05F4CF182F2F619C3357EE3E45F533F4D8C0C471BCEDBF4C
A710C8A46B6C4560568252DE1F05C33D1776B15519D94ACA804AE4E814C7E9B4
F9990F1EBF3E266C7E701566E69EA4C25ABEAC6DB8DDA112B42CFE674FEEB2FB
66EC78E79FE34A8AAB880B4924CFCD5FEF5CBBC3371BF4BF97B231816C67D3E4
136E0491AEB057C127673D9C2211372EA8C7D9AC211EB6FFCA00D89DF9A1D6F0
8ADC5995D857CF8E510246B729D21F809903705BE9CF0FA1E09E18A45EC8D45A
24347DFCF897F0E26E29F4C8F14CC69C8279B1B71728E12C2258829EE20E2089
FD84EBC9330062A9E9DDF3F49CB977EC43E2C8024D14BBA67CDC412B3735A911
C97858D01F60422EE7BEDBA0A9E6CF8B200FB6A5BCD1D7FA7DC05D8CD691BB0E
D4315A5AD768D438A2C42C8184A18CC89B995734EF7BA8071986285749CD50F2
269F21CF8EE1DB9B71048DC46317E5A5E680269D19302A9052A1F22FE8161E4E
BB730914186B76DBFE95532ABF4A895B7B801881DA24C91C19604D52F5DBD3B1
DBB756F379BEB0058C7639303D2569DFEDF2B572384FC1EC7D78B51F60D3260F
ABFE7593E11940EFF64A7062FFB88A41A772BCECC4A903270659EDB34FC63000
F1EF33D98A09B085A9B3A3EFF4CB716748BF93CCC7C6A83E5EA06118D4929E97
347AAFE866E528CCAF324C897E7872E31F12A3970976CEB7DDB7F5D00215A04F
0BC5A5BCD11F6313488B58BA3B73337E0D1FF6E3B2E5004AA42D2ABDA229F963
0955F5E06F62F72BACCDF7189E1F49D80C6C5352B542990B71514651CAA470B5
F7E63E15C5E1B3C64C0A6089D817DA0402AF9982CE69C01434B8EE6CCEFA7384
F171144D38BBC8B8377BE236A15F31A32C24FF8C13206A3DA1E7D178A280397F
C9880A99C822950233F8A6811E110C733FC486AD8B8E0027068CA93ECA2CDA6A
11035C2C79442052A2BDF0DBCFB4D104F244DFE7D9533A766C2480E5FDCAC27E
3A463C748DD459481333C4FC0971D780D99C00F7BFD88AF285A68B1551C995F9
378F5DE92439DE7BB6E990E9ECA84C8FFFCC88DB3CA3215E958CF6EFB359E1F0
B73B5A0569868C1976D560133FD1477195AC953C1A046A23D4111B3BEC6F63AD
2BDD493BEB731CB63B3DFBA3001029EA4C93D533FC355965BDD002CE4F2C309D
3C37BCA9179DAE71D9017D84588B5623BF9E416B170067B51D00072BD8798568
C40DFAC99FEBC2B0D197F5E061B9C58CE6BE83BC9918D07EA761C018419B34AD
6BFC134101D3EB5752CA5392B8133437349EFCC4CB67BC77FF0794C77BF97781
A56C158AA0C4874E48603CBE643FD617723EB8173AC40F56848D45BFBE3ACC78
A1AC8611948CDC7C93B9CFEFA471413D32BADF2FE050CDB6C3DD1DA08030B750
CD7EC74D10BBC1A15D68E03186A4DE861ABE4D7CB4CE8CD9DA121C6CF7ED7DF6
8A0E7139AB929E54C9711ABAAC27D1DB8E92FF74C1C336B45F127A7D069ED7B5
95810D4F02C02AD89111CCBD00CA3DA85D543970D8FEC4EF92AF668CDBCE4FB7
2BD11F17B6187D9C0F08EF8C2071B8EB9B661B9A326944FB697E0054D0922E55
FE6751257E47D26E7ABC44791D418FCA1F44EC185D3369D34FBFB55F5E18C430
D828A7C16A81002AE7A9E8632A5D47EDFAC59D608AFE9F42F44316F335F1E5C5
F1B4FD4A15023DBDE20D78991DA443A92A4022C5854F50C7D9241F9F8B8C86A1
77630EE6C0DAFBC4085D56040E58D4D485EE5EAE8CE39156532376907A6B3FB5
9E36D639D56AA2AD384238AC1AB0B04BDE39048B1FF3F937E9606FEDB93646E5
3C916AC91CB92CB9AE8BA6D3F4983D0AE0E79FADFCBE930FE54A8E67BC105D8C
7740A33180B0317B3E89FE3A8E547E95C6E07A96C507EC817E0EDA39A780015A
2F6F3A99EF2B57FDE800527F67DB1AEC3602AD9E23B7FD37FF7B9EF95468CD1E
C3FB564ECEAF08005EEE39EB9899EB338C037C62ABECED8A37B7AF1435EED2A4
EAFE7740719545BFA2FAEF73176340616650B24A9B127E0EC8CABCDD9D716CD3
9D041B26E1A3AB76717B8EFAFB552CC18E55CF8FACE3AECC48DA2324379935E6
6ED2BF759505E534AFD4BDFB6771DEA279366F257C8BC677E1CB6536BFEC9984
52E49EC8F17F0895E2B044FA195ECE203D69FD06AAF8C726595D0864EBAFF185
F16CFD4621575F71214880362886BA2DB85179DE94FDDB5699560058E5572A0D
4D1C1151E620BF53361CF3B055264E174A163D900F65A3659FCB8CD67A68436A
921F2D5D46BAE105507835239CD821D867CF7D9DC45E41EDB348888A053067C9
59EBE6AAC4B36F63C7B0A50DA50084793698BB84E74453BDDC71B62C27766875
008216186B6D2521BAC3FEEAC930222CC6CC2D40FB50326528112F797FBAFCAE
D8EC415CCE6CF3F3C54651D65E95B8E2D0E240AA6E47244643720D3A7EE90502
081339CDBD406BDEE4F0A4B21307C47375689F092D35CBA0AB72E7BD0196059F
98ADD1ED265E96E743065D40839FBFAFAE25FC77E4EEED50C3EF8DCA766DB7E7
93184B470CA3360AD99EB7AA642A0FBCE6CAC4B79AA021CEA623CF727CBD9442
1B6CF295EDEDF1C80CBB6EE890C98D00B3DC62E6AC2F06BAEF03EE07C10DCA64
DD28CD502881D30E137838B8BA1EE3A4482C3A48139746DA6E93B28E3223FC16
B62F5C164B5243C3AB79D3FED9CEFC47BBAD588C68111E3120000834F31E53D5
1E7769B755E60DBDF786F18A838536F3FE0F76730297D1B413584325272087D1
106B5BDB34763E032D8D18DA6369EA5C4EECC5886DD84FDFCE3F2A0300BC063E
0EF740120DE5E9B6FC857611F307E6C5D98BD5B3A86B08194F6B14FBC50E1DF3
82C634DB5A4EC3E9B5F87D942449382D5AAC5B0FD701A99E32AC81EC04264BBC
2834002916EBCE5F4D3DA996657CE7BFB73664306176FEC09C91184B82A59F17
B6ABB31C1F708BABA1C0C1E133BD0AC7E3ECFE81B012BA84AC04C920387974C5
2CBB4FF70125DCCABB86087F2F46C175ABC877254A8D601CD2C11C8B774C44EF
116BE6596675E558F1E4CA70E9A40AEA3007205BAA3E15F3150FE4C2AE4B9E9B
EC7BDE155696C3D4E8F5546BB41A5A210EF65945FBB1B6FF6E6A4F0A8161B9A0
3DDC5A4B8BE5ADA155445F249B9E520CEEF7D9FE17A1410294BF1D9EACDB25B6
914E2C533FF66AFF663FB0CB109B85557D495AD15E80D3FB5E7E25430EC718CA
7ABCE5E8CDB1CC1FE267AB01A110EA6753CD52FCAFA6EAD0AE76DE458F1BB52D
8388F80B0C2D370055684B8098C9D0B5849100081C5CC0BA45AE10229CDAF73F
36157B3A163FFBE3370F7852FBD4AB838D51CF32AFDE2858E791FF2017A15EC9
4FB21816643535345EF4D1D5FC0F486A72E422BA7BC619CD202D499070AA6CDD
824FCCB58D386D4FB4DEEE7EFB13BCBE51345CDAE8AA65D67017DDD676314B64
BAB05537011E96FE96C05DA89463202AF2578A50C2841B63B9AF7C7859A6D731
66E49CBA473C731F10DC6F8BC76EF77C6E740121AD76FAEB29D0724C0A871276
B9BC827AD0C8458FB875ED1298DB9B4DD5F1392A2C5DC0E344E07DDCCC41A134
028BFEAC368D51615D5ABCCEBCB1B4F9695B8E2F53E9BD0DD9C5C6BA8358972E
8167DEA1649F500D7FD116EFD5E34D4AB550FA8790145288EAA8454FA6949F13
5B18F65FDA66747877AC6281126CE714CE260A5DB870C2E63B9A45A1CA039A6F
BB2C2DEFDDC722FECF62CA4A198E53B80B528870BD2117A94A65D60D2BA8E498
EF318F55957B1060C966DA3E67C6F6BA4FB40EC8C11D9B35B26F33DF25E02A55
2947C92273E55B4AF2A738C2C03D063CD048D2AB9DFF7876668C32DDDFC1FCFA
B1A069C2D614AD21D1B278619CFD825A577DB7B337C969960DE005A297E7D0CC
D7A43AE975D5CAD5DAB5B802B510A5BA6B4B728FB11ED5C148CC24AE13513D62
57B109ED1474C651F35FCF210876171868C5ED5B3BA5A5E3A3D009108A45EE95
9CE4233B2AB941B4754F0BDB32F94307A9E5554E9E55EEC36D05CE562A7F1F31
B33FF18099602C615D2B16ACC7100CDB9C3E9326E2208483B8E115AFEA66900D
1DA4EDDE32C6D89B727A1F01D78ED4DEB99F5036C7155884C30E66E16A973240
0EDAD7906328F7CBBF38C5C5B7A71C873A6B4FE36B3DB7ABA88F67E4E367A4F8
346D03DB9E63DFDF6E28DADB4692079A170C6C32AE356FCDB08FCDA78622A85A
D85D68057D7C25FEEC44DFB13B165AD0CB2F988226C73E75795A4EBC4E1B5025
AE168E3FFAD4B3122CD940CBFA0C9557FEF95C05C2A9C76DDFF027863F5EEC17
A1974DCD063962E4A2902952C4A46E3FDD7941DCE978652C93F6DBD8BDA0A0D3
53C40E14BBF4029B6A375209EA2CC23B060FF2853B2E63A9DB0D30402833D201
6E467C61CDFEC9B234AD7AB6B4870EA5D2C125B94E589B83DA2DE0F4B0AFAF71
3CB69985E9F6DFE0CA545699050D4F4427C7F4CA5A9F57662C7E758A3A758858
9DB1E9C8ACDB9F3D8ED49CDBAC975F58752AAC531C3CEF406FBFC6D60BB7F0B7
157F9CE16949FE28D3DD0C225D7005136960DEF3BCEEF02CE0E011E8ADFD507E
A72508AB37C12D9A431DE6749FF3C63367AE2FA500D1387AAD73E7C0220D844A
FEEFA61C60BD0904200CDB0792CF315BAAA62F0E49F4BB5BDFC7063F24F365ED
BEE47BD3831F91D29A5B3F5C8723F594259D7BEE80A23C204106F5E5BE85533B
E7D472D0A552F8A723BF8D4BFAC3E2F33DD42F912262031FBB9D7A52996D5796
36A1B9655A2861C14E00F97E97D2CB5C49EB6EF863A81345971310676CEEB2EC
4F37D2FED84DC323FB48213491638FA5036128F4BAE7BC515C96978C951F2B0B
F72CADD131D028BBB5648D71EAE430636BE3ADB2D72D9659D413E08D4B1A2E1F
1DA0E40E78DDAB0D4645AE258D72C2C378C1B0A69949A1E14670B7441095656E
6E26088A2281D7529CF8704FFCAEF10EF33D687F455A999F9DA100E0941B85F8
0A7F526FFA422183DAB388A92A7B5F74A7DDC81246376F4CA934290DF99984F2
BA0AC139D4DAB460ECE2979F3EE368F0F87EB13328D9FDD97CB2DFD3A8CECDF9
54E654C224FB2E3A4ED735D97A23E39A5A22133EBBFEC15103EA47597FCC2A7A
D2D7F9612D2D533A4A5E85B4F3946B003BAC419B073A15DE2976717855778A8C
34F93467C904656AEED1663C74CC798759FACCF4D19716EFF5A6642C94DA2F1D
A1B2D5A89DC4606E71D7D3BC8D5DD424FFE364428BDCD23FACA808D27FAC6BF4
2E3CB19BAA37ED00458CE7F0F39F7A86C19E0624C6CCD611DA2C9BF213649E82
2203F21E89511F36951DE4EE9BAEFC9A41B2BD4799C81A3D08DF54D34CD4393B
38179592BEF05B366C16FE62E8E241417EB3CA19A49432C4DC5E6744D3D19D52
BE1B1A86BA0F98D879756410EE5FB2D2886467E1AED1B0CB8B8A51CD77F5D36E
7AE016A7EFF53FEA42793B2CD758FEADFCD01A629006B4D41B3FA987AA509885
4899BDB7ED295AF9440C63D352AC97BA6C33C080F9CBCE61ADE7D689A3882B77
C772803943ED15D9BD0508105697EF2C358A9E10E110155B8A6CC93BE0E687CB
44B3582AF9C2D26DF15073A1CDFEA8E1DCEFA81BC9EA8A8E7DB31B19DFC1E9B0
02376C0B35D4B0620C714D7C53FD049DCE73B35D91124EE5DCEAC4649CE153D1
034F2737B2A4E142758EF9A2A7FF33711EE7C214EE201EA8BA6A0A6500F5C755
BCA00FEC77B493723D66AE110707D30656291DD390F56172B1CA5B1802B72B1F
694309069B4D29A8511A62D7BDB14726C565EAB031DC3A6C649A2587DAA73D97
9A43C508E0E6C06B81A2C78A9EF6B97655A80286829CA9417C9F127C83B16F31
0778F129339613F7EDAB7589595B4CB9E46474D4323CF8E0905DBB4C82B53AD3
63B9BFEFB0391E6C446E3875D4410C22B6B5399326C903CEBCF27793ADF7B1BF
3338F37B02530376780F93C0BCF86AAEBC2707848BC8902918E794EC5EE4BCD8
B462DC246C18C21CF07C7496D3F6C79F64FD9972EF0550084F40A4A48D27E5C2
33674F0000C5BB3A34201E59E71A7308B40135AAF261F9896B2790CB12901256
8A4CD5B21A988676F44BAB92664D34C05104CE94A693DCD7FCA7EA73E1EBB26B
F5C84DE86168B62C52E4EEB24124BC3B0E54BADC841298616EB93949028A6B79
92FCDD1ED132230D6C539D9956444E02C42EB0E491AC4C8D7A6A3AA0B0ECF40B
A23225913E96E066F96AAF3D9B96A3533F94357710A2B802ECC13EAB2085C364
A37169F090F54E1097B815DBC218C43E418B529E90CF2DA4250A264F739AFBE3
6D6772E5E77E108100AD32EA9D78890B7DB63B131A1F7B8CDC6EA261E647094F
481E791E5E96831E717A0C613A59A3EEDA53854FFFE3D9F9F9852A88237921F6
61CBB2CE96DCDA097E865F44835014FCC43576FBEFD17EBB62ACEC5E64DA27FC
C1DF2A50C14A177F200389C3C6C7B70E866F12C7C53A8BB57DD9965B1654F89B
0C033EEAE87C5EE1B4EDEE8DBECB21DB84C77928BA15A40036FEC0709D6C38EB
DA9AE9852A6904D16701969CECE3555938BC93C898D31F9F319904BF0081E317
01F67E262D5AE4BE5DBCF56DC130824BE56792473865EBB1AF794A1DC026A07D
76118EFA06AB475302F6D555E6B5FE1945FBDC9A1B0C1C7634AA0D0F4EB6849A
46E40D418500965F42065E8409F2285306D4C04ED9C1F515A396FF20A2B48F77
D127E0BADD73CAD4C22A21646A68555F7E8FEAE77A96BC8AECD62B13BC0593F8
D08D5D82433D2FAA8D8D48D1D6ED7EF1A857DBAFC018C7D0DF676FBB9CBCBBF6
E26B3EC934A55BB33E0876111AB9B98CB6F655A52DD8BCC269C84754FFCE441E
E35F2477EB0DD6E60C5A52EF7BD978F27C16D0F91307C9E07B898FBD8BAF0242
FA18DCA5D050551D779A4A279FBBCE39DCDF2DEBF0BC70A92D3B64D1FDF723DB
FB534DA3590A8A207923FF154B85F9782FEC7B8E25ADD5FD1B8E8FE461B8A930
35C70D54CAE2627E75424C83D66C2124FD165A4A7158C5E04F1751E4DD3D4F67
EACD4369087D001150E6317C00878A2D6E825230566BEC98A9A575C8821BB435
0C40A5989329A079FD26820F3962CAE33276313F87B7DC068D8D498D711CB1D7
A51ACB599DF98A26CA1B4DE603DEAB4582BA6209467B358FB7AA774DEFEEEFD3
A0CC17E2B5C030A7D2F6DD564F2B3327D780D50CA5E2DB14A9C2E684A56818E9
2EFC5EBEA9C27006073134EB31716DABCE631E4C61A315ABCF7A3AA6989DDBA6
B443B60D1B20A3D2F22F4D82468F3F12A390CCE90433675F6C33EF89CC4C080B
95E843546003A2E67AB3AC7EB56BE27834814661F8162C27FE5EB94E154DD58C
609400B79C0B254C9577CC78EAF50FBA122F4B24B83EAFADE081959D7B642C67
7B94D9824F96AE65C95385D13F09AD6B4176B3BCE134EE468A916F68A80C5C4D
2F749380EFC54E249698A8BA7B3037128E0D0F16FBD61BF054236B7987E5FC7D
19FE3A7CC3A471902D9EC509C609B829C596B632A6DFA87DB5F8CF2A9899A31B
1CDCF98BB6DFCA0137B6E2542D6769201FF76FD6AA9E6E9B3F187A9904CD539A
05F245A0BE699F0E682639B08264E59C7904B58BC9B5A226E5184AC17775D39D
3F5DE89590F8D7489C07010A4D188C388ACE2E9A59BB724F64396D2794861E8F
23C9215114F8ECABC79090CCFA94F02557D382E3648342B10487BE7BB826A026
A25CF5934BE6E2D0D45246935E2DFDC56E7A8E6D52D4E391FF33519D9EE3FBD7
8748232E19A113EAEA907D8A1ED4CEDA6CF08785E0708BC0CAB941CB68E967F8
D7F2C6FE3CD316D158F816F0D0DFCA6EC27CBD74F9ACA6E856FA51CAADCF38BA
840957E36A22F87A3BD3D6F2267BB1550808AE2CFDC47272E57446A0E6D4B255
D28DD1E80A91B19716020D2547F76C8C39EF34A278BAAC6E003F5B2554322A9E
0E720837B785241C98FB5AFC2CD77627B5311740AC408BB9B61C28D088E3C200
741CC03E3B5124E833F7B8BF3071C63E85397C69D8BBE0518FAAD04031B43276
8CC0BA2C59A79F9010124FFCE47E414CFAE2131C80261F040CF9D08057C9C9D7
1DC8BF95F015438E33FD48F1442F1384799E409C3E7865A3E2BE808C8E508E60
02556919CB665988B3993354DA317AA308296D92D536AAD6FABD7F73EEE63BB1
BCEFB09F8E7BFCBA0145355D19DDE02E07486E94025FA5778E4A5AA4DBAEE0F7
7226C214AB7D9A56BF188DB2D328F7667CD7504E58C9216A197DF62BDA1EF233
8528553E7F0FD6D9A82C44C1B4681B0D71395E5E9AFA5542A4754EC86F25EA3C
0F6F73384EEDA74A8D30C2AADE53745A07DE84EEB99E52AD0DAD6133048E279C
576EE7EC3E97C7925F24BCA90D19C5733E89AC3DF461AE57D209909D78050AF5
B35C3CD3E5766F23FE00320EE93F6A4307CE573648AE81EA4128D244818D237D
F636F2CC95D081CAA3F1A73B7C1F1748F59E00CE533AF0032C8281E8CD4B2A1E
822375CC226A8A960CD9F225AE1908F8610A503A1E8A8FAC4890E1D1405EE5CA
4756E86BD054991BF91F550C7C583BE34AA67C3F71B3AB76DF147143802AAC8B
4ABBB04CF23B37884A94A19375189688B0CFA983FCA43B4AFE5BE076D56E4864
7905DC47D205BECD8C296ACA9F65547AEAE94EF7B3A3B07C285AF9440C63D352
AC97BA6C33C080F8170A470F36724F382CD938C8D3F127A14E48FE2D6143F71C
9806AB120AB51C2D9CE8324595B2D1C9160C1C722E4D3F85ED159B5303C44D08
884689FFFBC3A0F74BA87F73CA5F1578CAE73AC7617F61204CC6D61EDA8154DA
F1E55A61A04D09719C82246C7F98739BE3DB8A1547D7A6468609DF5554D8FC58
884BE248A4864A69D372A950EB7286B68E114F6F1D4BA0F264AF303CC6D8482B
ABD1AB6FD06C73BE8E8B83CAFBB65DD5BEB704950791DBB5E08A39F1FC64176A
DC20CF65FE944FBB5230FBC59C7CD93331FF3001E922D37D4E8A542195FF7994
AD68EE45E87E5D525DAB1A8E33EF5E5C51A54E525BA035CF600167B0076E0A4F
2F631141554C3FF79FD4D76C7684004D99F15017B2ABA6EAFE9BBA48F35738BB
D9C2B73BBA20C72A9730B04D7A0D4634A82B1FF65A82401F2551979DF3BA4D6B
84E9BE81F5020C9C6D8A7C344B0AEBD538E86283945C11C41A6956694A780260
1A44126CF80AD111B254DA5A780AE555E9A89C2D6FD0FAE01FCD2159FEFD3B8A
D26EB218149DB927D7A893731B17E43F2594C6A0DCB9E04BAE62AE56F9DB92C1
A330084AFAF971A387AE94050418585ED7AFEB03C02CB58BC77F4C05B07E6D9B
4EB0E51ABD71E3374BD716F714415EFA2C253860031E5E5F4BE904EABC6BD390
5313564250E04C754E6A0A0796E6FFA59FE7A1E8114DA0BF755EC54AEB8C0EE2
18AA882836522DDC1B5400FBD250569E78C70C5EAA1DBBBCBFF7EE3B3F16601B
068B6055C6764C60B97B913884D1AF5CFCD784B9A821AE7CA9D02CAE50FC2962
3F205C797733F46E88F73956D80BFBA9D2D722ED67EFDB1660A6D88A667ECE14
4C001AD0EFAEF546655238E9D4B98B013698ACE10C85093A9BC1F8A01150691A
2769E086F4A0619E955501847A17DE15C7256B7E15B045E7F109890F4DF33FAA
2CD73961D494FDEF9E3EFE930AC07EF55FBCBE4CAC8097461684D14FE0ADF32F
5853D790FDC0DE10B9F52EAD95477C862FDCC46F7AA1C9E4F23D9A3AF81755E9
BDA7A971C059C8DADC40A4D2CB70B431C0BB2A9B40ABCD0020FFD3FBE4EC8FA7
18D977F9095CD21AAD390E42ECB58F2FDFB8DF16CC614FA24CEB33B35955855C
59CAD13A90441EC7747C5CDF680FDC4F279E2442CCEB8404B5883E8081CA24F2
B384A56AFA0948DB4FB12D0119C68BA88DD5A879224601E8C868E8D19B7496F2
911937825090DBED77EE114B41B112D075AC6FBFD889D8F47774DE3890357F33
3F1891915EBA24B1A968EB32F3102AE38884193FF76E90821D722E59AC01D402
1FBB50B733A2F0E76C59B1B136DFA700422EC4504581C176ECBCFC7F85413A89
8CD04931B4D1566B478E0D9E6DDD321D5436BAC59CD4B75AB38846E45BC89A23
C2CBABC75443DC799904A29EAEF8DDFBC7E90DF86A8722067D837D7554E118AB
6DA3F546BDF909B78A358496D30FB7F1DCA721854B67DCB53DFB09682E9F8E5E
A9E9A908755B5EF81649A1C81767411F91571450A3A009CE962FFCF0B37B9724
47475CB38C7A6348A4668C0CE7FACB3C670C1C75AC88D9D8915FAD577E685DD6
76801BE1AB0FC229362CB06FD9C73D7FABA8A9390605851331961B2BE80CB503
56F7FB50EEEC9B4478300657AC4C2DB8875BE611F44FE2747E296F7E74F7AA96
6283D7BEAE56566296B000709F3D3C6502308AA24EE006185F4F9A85088E43BC
87E7659616E018E7E2EFD9EEB415FBADF5E516003A5DEB753EB69AA1051D63F6
CF997C3BD50D619956564DF7746AC013D8BE892EE711DA7B17E5A874BF14E532
D888A2AB0DBFE1538F6C80F41B1E6A41155CFC770AF22065F0732E7A4E53D3C7
1838740AC1CDAD9AA2DAB730EFCEA25E2CD7381073A5CFF7D995A324635E7F76
4C0166A317499AF5C78794A5D208924684E459A9FE767792DBEF4F2ED27A9041
2B9650B21E564124F7C9334D329798DFAC4B5C5F8CB9DE003AA6BD1DFB29ED74
B1FBAA1C9530B9230A0ED30CA3A26EB346E0B7065C2ACEEABE81471E0F410914
EE89DF9283F8703CBBDF818E3A43F37D471F3ADE9175F8BD2B47EC2E02F3C72F
91FE562266F04301B0B5B180667FA6D82701E2F69E9AEB50D43448BDD42DE25E
6A4D38C9C7221C3D68CF731A50649307EB0760C63167197E6D41E902E4E148A4
864AEE2DF2CEB283822361BCA52B8CE7877A6F6CC95F20321042B5A5528B54F9
4DCAEEBCBE56C877891891805C0206F5808FD55472A141850AEC423CD9D03442
7AE2705380AD9C7A3849742936CE6EBCA65DE6FBB47FC45287AAA4C66F7ABD7B
FADBA1B9659DC9016C3411A3CCA82BFFC763CF6E6B243E5B6E75E801EF413C5B
8BC1397E34028E44314072258D671D1CE23EA7BAE1AD6E172662D9B1A7DC6E1B
96C9909C8885C7FC515CDA605A719E8EAEFB5840DA7E8A835CBD517B3F85D175
CA361495E3A388D6991A4FE997273096B64C24D820917A61CF60D44BDFCB8324
56274800EBFA7FF2827159B965FDE3EAC75F48EC045398B713291FC12EA83A90
154173E743138002ACF2EC94283AA78657E27AE696E8506974F971B0D558626E
90C6EE047CBA8FA59D5E5DED388093EE2AA5004CB73E4A8CD7B879CF3D9DEDAC
D833517E74FDE4D04166F7CB825E428E9768954F725308C29E493E9DD4364940
3FB9694EA40586F5FC2117A42293F0E88AF358AC618E037A24C24E5D22EA89BA
23EFB7DFD07FCBF60B66D878D3CCA194B0117A94FB121D15F71FA6DC5677E2EB
5F1D6D0D398F8E3816675CF9E982DE1FB2E04EDC1CC3FC2907D3BF4ECF2A5DB5
205E6F30B91FDC76BBE10E8D2EBB01A17C7415A406819C46FE71A9654FEF8945
F6FB35A7B8DB5CF02467A0A475A3B7B31E93F774432CC9233EC655B07AD2CB38
94B6D8AE00350FEE5ED5C082DF264706959747FDC919BB16819D676B22097A82
396B5044ABE30426377E66EAD329C200ED2482C9DAB6F78CF552972EDC40168F
C84569B8E7F253A0499B2DB30B98D853572BC32DA871EF84B0AD9B5AA2E448B7
A133F21FB52DE33551415036BABC93B31FB8E1608A03C615546BA732A47710AC
FD91E8568EA3F7CC9422B190982642B5A34F80A5253F49ABB06D4389D8874F4A
7BAB4B712636E06B49F1BA9185F89F6F12B2CAB47FAB87DCFFDE2E6FE5052150
E9F39E0130B86CBD7A48FEF955966F19F30FF732778E74785338754E322DD4DE
DC860BF47FCC6B4603220CA1383C5C3CE8DFE9D27FD737B6E609E4CE3D58F6E1
1B7B27E5C864CC4E09C460F26D26432D2B46BEEDDD5FA97AE3CC2D820B51186D
179B9ADAEBFA913D713A51BB9B5FBEEEACB6751A6F867CF445E03E4C283C7D12
6645388CA0CF13E392B452F01296D6FEEEC1AC2A4EB9C424C6014C9F6CA1AE90
E451D38B8E2C3B9D3CB662946F8E533F62CAA8BEA0507B151844289F3F8B3299
DC18051A313AF22EDABBAABAB029B70003E35DDA93F199C5BE0DD004368CDE07
D98EDF85F55F939CA7C421915732B85E5D82CD13644EE4D670D9FF54C4745710
F7BA06D0DE596A4CB50E1028A471C9151B5702CFCA006B7D2D32EAC4870EE983
474FA231F3D28240BD2BE51190CE85224B044CD4CD753037653C2BA5C3D8D86B
B13DF596D2697CC11B573DFC4C8575CCDB17F43E4C1E3BC7ED6B9DEC1A02788A
AC455E3CED2552EF04C3BA2E72F5AF429CDC0EAB75C0AF0C932401B12ED361DC
8186125D3EC6AE970E2C5E7B45980A7C2F025CDF1346A2E13B4342569A5E144F
3585B7408CC389EC6F375CE66BC72FCC28125847E197366CA63F0489326B18AD
4A7E8E2F37C957AF511D91104D538AEF6439A61BF2D78D2D291642945431E26C
BD7E3F56CEA8E6179585C49ED287B561AE475727C0F53A56F825A51CE76875DC
8C18B9DE2C6C7DE93BB118A83ABB52AE2AAA2152E45B1A1B08B815298252630E
666BFC4AD798790935281E674F38E40E018AF050A0EEA3462EF4AF440D0D93E2
D4D1520A6A16FAEB7426C9773DDD40FA9D272ACCE3241498F83E89028D5ED15E
018F4945DDC59BE8DFF95B78F206F75E60B838328F20206F9DC52C9CFEDABFD5
B530FA462C99DDEE863B9EDFFE4DC4DDC5DB53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /openbullet put
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE13394F56D51A060
706034A5592D0217346967E1E05EC709B9FE89083402BF6CB44B26C3CDDB0708
E41E0763351B91801199DEF0F1395EC1B5E02A08C9D55C6FF05FB47DC2034FEA
2800991EFA264A71CAD46EDBED52614C3F85CF05CB4BFE8E4B24E84EB6142DBE
BAD24D7C19EED0DC1E340E9B9806B5372A0BC383C4590411B9AA274EC72C1A62
821E2E50CAA000AE052672CD9C0F56A04AFD5B42E55BF1CB7AB36D037DA83BED
29C86928E669F74E0D89E39813CE564CF68B352F01263B692C2CCD5BDF854A63
6DC5EC6662E2CFA0B7B2B246676651D3DE51AD517212CE45E44860875E02A905
8B1EF2EF603DABC1881A2A3BF2D313DE69300DCA9CCFDE820BA8BBA76296B5C2
EBE940F591402790CEC0DD1852C44D1254E7EA6BCB13AC9C9907F4871D41F0A0
2A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 33 /arrowright put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF7554B0EFE63453745582F9AA32CD5AA939031EE54F8B3DCDF3F22764A2BDA
0F6C1B24C24D386507EA0A0F893D86EA4957593B1EEC56F0BC4307C6A4AA4B99
8B51C1860703100A1DDBCED18D96E7862F1A39AA382ECC9D344D5EBE14B8BCEE
2DBC9264AB4A2C6A4423F3843EAB3B99FAC77F0E8F3DB19BBE13EAB2321F0A36
B1B1C0244C992D5831BE8B6561F62F753BA67B31355BD0FACDD723A5DEF94FBD
F722BF73BF84E91EA3D4EF2F391625EDD614AC1AC3C3EB461FD209C2BCC41167
39CB4D7B33C4966FC590814856A63E744AFC7F8B64CFCBA06A003811A7D9A913
FDCB5CADFE1F416EC484010956D954F5000CFD370DE6E592C318DB8C335E182F
F96E5FEC1B6457065B11DDDFB31D17A601FAB6CC15CC88E81D70B0EDE5B7BCCA
6EB0A3FC9F46B40FCCD6719341BB5573E4B476BD437F841252A51C9508954578
0CD08824D46500B44BE6A8437C2E233889EE014B7C51A5318F256495A90E952E
694B9E06FBF2B0F5C2B95943901DC28138391CC28B6BF57827250C7BD9D9A186
F565A434B1E6E409CCDE83818DD3E68D79EC9CD08DBD72E9EED1EA1C9817FB68
8FF4CFB730FB8EC70772106CB9E8BFC091DB1D988490009DB41F4FB2FAC849DA
2CBC18DEA6B32A3A7796070160AC12A829B45A63D2B4CB0EDFB2C4C993692F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 105 /i put
dup 106 /j put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA473A1FD2E01CB1197
990EDF8444CC83F1AF738200D6B01348FC84249D77FD2C3792BE507B455AA8C4
8A47C53FF9832AE74389132337E4FEB6F45B5BB29D6F597BA179C6592145F301
A46ACFAB07818BBBF40FFCBD118D4DD0F87D65E1D0E9B88EC830AFE34BAD1526
2CE90D193D88877AE17FF093AFF181232A335E7A2B13520FE2DFDF2600CDDAC6
68C0665D9A85BE2D2CB92AA47DBC9DC58C73FE498C0188AB7FECB942C019740E
545F68F084AB74695EFC77DAFA2804E0EBCAE77E4B5CE15CF6EF473E1E16594A
BD0A86AACFEC7C2DCCEEDEEBA6812C3FB0361F25CF91D8699E339D15083D5CC2
66A725B140772089293714C13A7BEF7B0C9A01F1F27E1411DE8A9EFB34BCD9B0
87F4FD2FDB7618517DD62EF531C3725C64CCAF7133FD4ACA0D71D91BF09DAA4A
C473AC7D782DE5FD7A3E97E65F861890DFADABEAB10769C8EE95CFFB5B3C98D3
EB4F1C3561854AD6BA4E07FB795685E217E2E03A443D9F295BFA2F2291CA7EC4
D9247B28F96E569D937E19AEDCAD63DE12ECF75642EA7E54356BAECED34FF821
B553A9CE35398DBD5C601CAC8F4EB2F16F3FC7984B00E1EE3373556025BB21C8
906C629F9E5D61D2654CB43780557C42E0A9C5F32EC89636F731C3A6D0DB4900
14E0C27311908AF8B505605697A276A81A16363E63263B189A92FD29C95E1681
AA0DA102D415D33D27D4FA5CB8B9C5EB236397FE3A619BB1D1A17F5E5F165764
5B81AAE1FB2615025282A5C03BD8A1B51A84E573A47366482198BBECC703BEAA
EF26CA7AE20BF7CB3C7B13535FAC846265AFE7FCBE528041776BA7643C1019D0
8777A02265DA771C06ACBB4AF9A07C13FCD6E49E5D4981430DC53024B03DE9A4
A4B190BD39DCAEFBBB05364F8B16BFB6A95614E185FCFBBA74DCC12B7EBA76A8
733D26F5BB93969289BA987168BB03989BE50850132D49396E11591AE7BF0AD3
9561EA8861F264912013472C5D9FEE7C4329E80A53F6EE0301FE1AB3BCAA5820
ACC24B188E5D3F7AFD34DD7B5B94479CC505F4126B5A0973BEF24D0ED1EE61E0
75433C253786BEE673F98AC873234E6AD089590E1D6C50528860DC0E709D48DD
5ED637C8F4E491A3CCC47EA9F2AEA40CDA57F775A894EEC14768FB50DFC7AC37
A6D9E49F8D23371C9B6770A7DF3A9B99D3AF2F2364AFFEDB12EF1B3FC4F756F2
DFD40BC6F6D45AD81568FDB49A61F73FC5843BFC85C59AF1D2532BAC469655C6
7FCEDF2D7C33E49A336F56E995BB65FBD7BEE0F8666D84A5564F0A3D3265A098
806C6692DE92CD7F23205416F5C54F938D31F1BE278A343B8C85FCEAC6E08D4A
BAD0FA09E11FDB04DB62DD61B501F8003208844E7C1F7D762A6C203558811C35
0078887EEF61C14170CF6C8FDB960B9C73C21FC92508672F3BAB2ECCA172CD2A
0AF4E2BC418F788BCD3A320B48E6CCCC5D9D1472A3CEB068C79E793D66FC0B56
8CB753CF6013CF599D3D454A311858FDCC0F6E2D1B53B80BBAF7B850BB2B4D57
7C607FFC51D570AD96DC1B9E91D0071C6FF771967D6F8D982A06CF847B1C916E
2CD289BD265005A8E2E96083950011DC0D439D4F3C0F0B9D032402ACBA77F7CE
640293AF52D0FD3F353904B3EF72A216FEBE343D78098CACFDF1CF3BBFA3D7DD
4EBE6BC336E869464474A529BFE6FB9ED62541B721D5027DB4F8232028B0A304
D10A75FF60F54ECEAE883124B7DCB82E1008F7F8A375824C82DA22FE8D35EBE6
A3D7EBC4009FF6B6D61253883364B3CF3728EB31D352ACAC267167C7B67D148C
3D2332624205586B9F2E14304ACF5C42C4339A3FB4F5DC4981EA62ACDB8DFC29
807CC57C4DE890086721090C6DC2AAB1FD003A9368A838A9A336BA8771D9A3E9
42A9AE1E479713E5E2AC97D18AC93D759A1C3785E7A54A334F53FD521AD93347
B6E9201603438011482259074E3FDDC59CDFB85BD04184386D88FC7430B76A38
A152B973D629FCFD5FB42EBC9BED0724B83B089602901B1F13829E41C92268BE
3567B65A226343A2C6647B8339C217D3DD795A091569A1204212A5684E7E41BF
21C45548FDC351E2AFB86A65D51AFCDDA2FEE905E1846C8AFDD76AF47B84F8B6
02A7EAE08ED0B3C8C3D5A52F5C5628E8742A9DD164690BB1989B270068B6FC48
9432AD2BB6315FAEC9697878136BD19E532C1EC2D98FB99A1633127124B09849
EAF33FD1421514D3F5C3AC2DA69FEC07D6781745EF1915C85457B512DCE58BA7
E9C18431EBAA17B56055ECA08E73647338284A2E980A6441B9528AC057A0613D
E4B2E060CF075474146EBA52954C3CCA6A1008FF03E404FC031DEF973CE2F4D9
EBECF5583E798B3C9238513DAAA16222600B6F9207F5D54C83A9F18F4153D2CB
BECDB2CCE5BE53083ABC251DA5A946A6CAC3232F6BD9DF58CCA13F218E104FC8
C606E3EF289BC006367C2165ED2C73C53416B04588FE41D8CC10C125ECC98A26
9233F70FA2D8E201E1C41F446476017F9177FDBF68E7F00BF056330229423803
B85DAB06C76166B592A5FDFA6F0BA161237E46FF48A66A54E640BEE7D074700E
F9BE70CFC3EA8415E2B71CA8DCC42A6BEC93DAAC5ABB305F7FCE52EDC47B363E
5F23359548C0B825BD7ECEA36DCB554AF8E82460A3481CDFBAB6BECA8077C17F
1D93825332DE25FCE4F92C13D3C6B3BDDE4D242CB0088161C7DB90B001B277C1
83108653D6628570B6D38E3B9C085706B9D6463419D1CC13BAF88C02FE1287D0
893A31E41E4CFAB87860C6D63CAD6F0E151B9ED02BA0DC362A11C2D881939B56
43234933A63947510BAE9A522B8A9271ABE4DFD60A96A6E582248A75C18D9332
28CACFAC743A960A216B44950C57756C0CDEFFF9727469BB2D37007C4B414038
C66EA61932396C2BB70D035F770861C9A761C8EFD49D7E9C3C9F94F9D8C27988
FA579344A2EA57EB33C208EEE13524015D674F7BCD24B29DBDF401521BF7AA15
CB30101B7D18BBFCCAAA349BC5D50662AD1258A31EF66FFDEF0A8CB1DFCEBBD6
D55C318EBFDD9C4586722D3C257DC4C83712F25921FB30E4363732D7842D086F
4D5C69BF2089F92DCFAE64BEF0949BD19A8171CEB695DF1845A3CDF96EF6FAB8
16D5DE236871BF950B6DD2835B936027731CE2201D47C072CB92BAB6B500B297
007FF32DAA68B65151F9F3624F249B20F9A95890F4616E20B6B12B517CAD76FD
1539E8E0C89F5E3CD6DCF7AA446B0F148884109FD053E9954520625EB1DDCD7A
680106D1F9CE34718096210DA3B31FC148C3D18A989176B30FA1595F39D758CD
52A00033660E418AA20A2F2E36B3154075E3CE15529AADBE12733EEDD9599EF8
5C1C1D85B611D4358780AD281188B1C4AE2B7D2A3F6CEEB909102E667ABC4876
E4C7732D7BBDC4CED3277CE5EFCB2192C1B816D50D203DA01E1383BA6D010A8E
4694241EFBA918D400EEA5C2859D46143BC95AD01342311F6184392F89A02E41
90D5E698603898569804E6B4FB04AEF7B8FE8F2C7F15075BD0A859B901A0EB29
DDD779665F71A8ACE0657688D19019B5CFBA2AF7B9284420E88A8165B256395F
D6AB9BEF8284F97762157CFA3B5A495B5AA049C28A66423A60CE4760E1169530
7776941EE540ABB0B3479D390E9EB4F4913924748493A32E43FA49F58706228B
F309452D262CAB6B3799C11BA5EB65FCAF68703DE88223E41AAE545C927EEECF
8F0385E2AB50B93462A2F19B903C3C12911E8A361618A5B0E0F2D7FC80C75A4B
0FE17BB52A8CE1A4BAEF74303DFA79A0337ED31DD4E210A42C40DC9334D155B5
571A3ED495E33FA0B8FA8320BF9B6F3CA3DD0078362C9E6F7E4059745BFB0B12
AFD9867A3EC8B87F4D9FAA91DC0F150F11504A4EDBF32BFD630D1C58471F993A
2384B98EFBFE5043E65E8F3C54426BAAB8F35758D46F6F10F6FC12F163D750D0
F91E8E9D484675703C8E7073B43C69E974BEA10742DED3B9D253CCDF5CCA29CA
C0918DAA11F04011ECF270CD3D50154E4075BE20503AFE76E0646EEB95F11434
35119083386AE95BE70A9EA32E30570537ED7DE4A76DE66737B9828BF639E6D2
FE1D746E1FF5E55D340665D647341A3660593A280B79ADE5BBD69048A32E9A90
C0958717CC5B7294BEBD21921CFB6387FD380F66A410FF2388302F814352F1B5
79FD751D4FBA6C4682A5275B15E03629386CEB069237F6462D4FE1E0A3C3E5EB
3AC0910EF3DFFCD689888528A5A39E3DDB600545872A6E854BF226A44345EFB6
97E50EEDC53F5D4AD49D44D940663101493372C3330D767DCC09900347420424
2AD2346441AF4D9E2D8E8DB5F90D76EF031F0E025CA36BA6AE5C408E134326E8
F04415179B1A9751CAF373D2374E8B3603DCA18489A2AB932915B147FA8D8E2E
C2BE15FA6BBE5BC5EF41758730151A013D81149F8BB05452D980CA3395F07BD7
9059B2D91EC31FF0813E4D9DC141812C55D4D87272D312701FF0C2466F0FA6ED
CF5FB94D83F6458959D9B7D495F26649B1255B0124FB62525C5CE836FFF890A6
CD668F803D0AB3140A5F81DAF41CE3563134A5EF153483DAC5C6FC83C9A2FB8B
DC42691C9ADFCA79A4B2DA1EDBC1DCB5623FC56DC05CCF68DBC23C682D679D24
38A964B6F1438BFBAC116F1C932F3FB87A0AC107D2ACF444F6BBF1826181ED3A
571FF44FB445B8ABBCD137EFDDCABC7FECE2487E0062BB47B20FACF7A4E12D75
29B7CD8E8E3C5E992F4EB35F753D9B5D38578103757D48015C6BD75AAAFB2540
CE09A5095EE8A681C858148ABC2ACC46D60354DDC5F33DA6C682FB7C10C0DA11
C47FCFA3DEC72E83650F92768BDA3459B092C5471EDD5BE08438574EA6F39119
063F9F4A633A30C5744FE51E96B8392FD340356E967365E8048E390729F36472
D4A1216BFA93EA8B7391F44428D3964B8DC68B1F672D705C4A86B20A99489A77
7BC624D0D24188ECCDC44CC3D0DEA393C2455E2569B2FFFC6472AF85E2E915C3
67460F5D415AE6E4400187FE0E40682340B5C53B18A729FDF136166FB161D9B1
359C0958A48C39D921FE2C97C6B613D20709A66BAE5CE1386C173B85E395FE98
5E1035CA37385208AC182DFF437FC5FBA351D5DD1D6F5DB39914F480EFD5E75C
8BB1E6D341258AC91610A498D2DE4E0BE24B0E171987CAD3CA8B208FAD760901
38C87B0F754315CC0F09BB7147C7ABC1865E8FB582752877144492334A90AC34
9F5BC6F0E6312CCBD764F7EC23E7DB691D26D049272886820FA236C10B40C78C
8F795A706FE1CA0FCAE89AEF0E63DDF76504663B194CB1F27ACDB5B79E3D4D08
CBC96D16AB2EA1F1A11FCED12712C0FCFF9CB1F8A16AE4988CDDB51A9DD092FF
2B72B4EF948856B7C06A0F0FDCDE39C8630764583E1C81AB41F981D07FA6F897
A23BEA7B1291A1612BA07C57014E605482A2B67BFC1885A8B538C205BD8B18BC
486F15954878050FB7814887158C5FB54C06CA07DF59364AD21D0B6118B5D8CC
90B1B4D54A2FD6F05E5C6C51908D905CAB2B04163778E1DE627F85ACAF6CDA9C
9A6E6F5AE415C6277C1C70506E47E7242D0FA069A4C8DB807AC766E1D0CBA162
AED3D50380A61891A0763FF93FAD5A28E7EC498B1318E5DAE251396B61F62EE2
8EEE4B6766AD5C063CA064B133688E2E322E673EB52141286B3B3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM0800
%!FontType1-1.0: SFRM0800 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0800, tcrm0800, larm0800, lbrm0800, lcrm0800, rxrm0800.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0800 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-203 -320 1554 938}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B948894BA0E437691D4618A0FFB62E3630B93DD190EBC8F306BB78955
34955AD847F95B1923B90644A4707B718BCB527F8D5F617EC559C70A91900E72
9A9D881D02E289B0B0725B43F5FE653ECE8C5F062BD2C10F4B9B0ED3938F84D7
FD5D3725C3F438E46A270FD43270689A5F30B1FD8CD61E7CB544F07FE57D719E
17CB8A7A146AC514A35380CC6D93840A2DCFBE40307F2FFD8AFC0E54D066DAFC
025AD2A93593551D363563A2208329634F6BD80400775EA44ED4F59B0F767946
25D1A692A6C9197B50C369ADC30DACF14BB7FBF9EFA9AC4894FE3E0A6B3245B0
7E7353569A285310D32E52C36FE2A2827319227E0B024A615243399486706FF6
9E76827C1ED6ED10CA2C9E369D5A507991070CB699F666AFA47FB9EE3D968112
38D5F4624378D9B34F8B00E280EA3F61E4CB33EDCC35F0433A4EF6D267C08A0C
5D5A95A531D8A0E1DB1394DA5F72EF2ACE4CFDF20871C679418FB1B481CC5EAC
C1733601DE79FE5D9B793234D4DE58546A5068CACB9EB1D82644358DAE105ED7
BAAF89A47AF526E481D3E105141FC7EB61A5E5602412613D25A39EFCD8AC6ECB
1ED92210690BA38F6A1E1D49AF1B6C8D7904633F0CA55E1E951E9BEED4339DE1
5C97307776C6238E3C3749F55276DE11C344AB4FB7D319A940E68F2A60A8413D
4D04D1E341CB17ABD5EE86EEA8EB8FC6F5FEABD61EAD6A46F3FD3205614B6ED2
15735EF5EBE6862256295102B060F9DB09D8516A66910693A324D5BD555F2DF1
D17043DDAB0D4645AE230111E05D5E16D103E5047181096920C262235138EBF0
C89D0EB6A20ECD20C30B63C9F479918530B58942E503244857F3C816FCBA1C6C
5ADA9C5AA9E163BF413466B55CFA39188DD9328A8FF2D17B5AB1354A4E220D4D
0738E5E59AD58058728BD0A0D9281DB363A45BC38D2D4339EF9CDB80B807B583
0AA855A897B28DFC782B3BFF1ECC659F95BAFA45441FE11F56E227AF4C10E3D6
E7BF034DDD40C84177BA703D58F69256AF9C71BE0E35A3B84D85C6DE80CAC44A
5D6AA1447A9B55FF7D93765BA936FFC5109095A330CDCCCF826E49213491638F
A5036128F4BAE7BC515F37F5D3ADC5EE3D294E91B637868345AE47F0E6D6AC90
8D917F5666D628BDEC02A96B19690AEB1C1326D3E1A6AD802B4FF4F8584C5BA1
69154A0215E5335915D2A737C1C3D753908EFD53A03B2CCF128C49827256927B
4D3942239D724172A9021B69E41897AF3086B010723571D8AAE5392CAE291CE6
E75258D9AA9A634B5BDB75DD6F53F4CADF45B32EB9EA26AE7D8A15527FEC24F6
62221378426488C60CE3DAA133F360931DFCA9556FEF28187AD9E16232C5F5C8
5B0FE0643FD41340593575BDC90FF1692F84FCC3A3D588D03884A4B5A4C01E12
1EC6400CBABBEDCEF16DF0927D223D5752B69C930053655C34FE2F787EB15CF3
E4E6E59AB7A529DA186A6D595869BEA5988D29F9D548961D27D9F04B4E2129F9
C20BF553F64AA7BC0B3F9E530FE1BB6705F9661760CA5A4D28C7E86B7599ADCD
063566FF8300AA6806CCE0ECBE0E8E0F4DEBA482090FAFC229B8A8CC58E599F5
422BAD83C62B6A88BD1ACAEC75B13E1EDCE2E9D84192525D19AD03D364B668DF
5F6E1B445F9C0A123D15CAF5E98B6A4E86FFFD8B09D944B39CCEBACAB41691E4
E87DDFEA64AE533D0F951B33539831E1BD76907EA7BC8B7A60E81B16C8B0BF09
F67110BE442AA9CECE35C6C0962425B7B796B15035F3CDE94D96314EBD26AB34
AF24964D036AF2A021FFCFEB1B79381B7EB3FB2DB842371D586D09E3402C5F0E
61D32245B80EDC94665F1BF279DC12832379941C598F44A65E295D340BB42AC6
7AA99931BE50DE2B82B9E9E759B3D3D31D36F1570E458714F0FA5346B83C4713
4629A777A2CA9F4E9AD8F34F0B28DA6531CFCF0826CE0CBC97FA6D7916CD9B58
42461677E8ED3B3DC02C27E4E73AD17C60343A0D6983DF61299A91BEB58046B8
3D590B463BCE009A5801B1473674A50CE664C49A7EC2C4396609C99C3C2C7CB8
35D03D8DFA178282D91E0D52394BC6EF1728620A7DEA91A4C2135C1F77B20076
39EB528C9345A08FB3D73C9EA65B23B88AC8FE79E6B8C1A4F0ACD315F7E490E5
10CF860E45C6C33D91833AE05B3C9EC6C206CD2B812AE22E1710F28D12D6B591
F1A55F00F892C767894B5FBEF9EAD14B1F2396FEE1CB05A36BD10EBFE38B6607
1BFCF861A810A30D5E91100CAA2470DE9AA4D5207D5ED6AFAD01FE944E3AABDD
94D69896A29C316E190A9E81D81DC6FDB19AB62401142B171E19396E79063C21
B95EB1B9971F2E3ABDC26720B76739F372C3103DA920D1A1F5438BDAB4FF27E0
07E9399B9476EF2221C79B4B479D6165F6B172A3138D4968B83A8FDDE677E7BA
E411F7CB16BCBE5A066D81B57A63C505C2A9AE8EDD0D34A23DDB31A798348585
261D4FD4D9F110CEE18AFC980C05675BC7D859975D4F13D7B1D16C8CBA29F49B
111DF0D79EA30D2349467256420C9927360C4A57EC988F06F62417925D649404
47E1436AB8D187E6ABA1795280467D102CD98D08CB83BB3F1E1E8C4A590221B7
B421583544B2968689FFCBB889E44CCC2713D86BF55ACA00064D1EBB8BD93175
83FA8268E3FCF67EA5EAA042EB94A6EAD36F18E4357C1F0EEC23698110E7FFDF
23F47C8B20A714F9F64D2DAF4D91EAC21545815DD49583EB7FEADAEE43022B0D
77E39D5F622C632442568FCE3149285DDE0A8736716631BA51562AB181BECE6E
B1AE24186EBBB899F1F867D1E351307D32FC085A1D1ECD916FC6249AB9421DEC
20595278BF516641EF9D539B5D8433B54A0F460D702F65F5737EE856AEF82EA7
28C9F1CB6735D3C2DAB011D6780F8916E0C7983A842398C0FE68746CFFD7C2D1
7C9728C18D2F186DA14BF410D2EC175BAC2DD6D9703EE34ED50E2DA7371E21AD
809AD27DA54079CF48019B94513BD07D43680E0F9E98AC23152C25CEFC55EAAC
33BC9D7F764E083BBA8A2D5034B4F92685589F36F15BA84639C5C1AAB5A40A72
24B90689B5A2A9B53230B0D07970167DB6AB27D3574545933BF01C0E31E1A4C4
C293193AEE3A19BA91063421988EA0AEB5DA7688F7DDC03506DE6851000A0E04
ABE817FE2CB42C463B9EF79C9D8ABD41979384DE1824FFA141A0168B74005BF2
911E685BA168B844991BCE90B6798F0C647A6C3EF5E9CB56AE0A7C8203D9F119
B813E15DA7A0E6A9FF93E845D6B864055C22677DCCA2E37FCFAE2312D2AE5988
0B6F30506AE636465AC71F3BF6043D308AD89E7C5BFEBE1C7808F292CCEE4FCB
C73A846D1C8E6E3F0A8E24C428A72EBBBF4E3369C5A43825AB1CC1DA0457EEBB
0B78D8D60A180F4035419B56158B5143C54CDE76F2CF2EE2D28136769F238798
EB391AD61FE849A61B3899D82310ABF53774A492FE177001F6930F992BFE65A8
B41A38A796B632AACD8F946DF99C0D647AF636F2CC95D081CAA3F1A73B7C1F15
D005E6F19709D2A7FD03E02542CD6C109DBCBE056F04C951019B6C40F2AB652C
FEBDE3655AE65FA9409755782332E1E3EFD8C990815AC95B1DE4B1918542A9F0
9EC52455A6E43B56809F6EA0B07B58E59DBDAC801CC84A4187EDD858EF5C6E7F
5368BFCA0543D4312D8C5A752A1FEB041810C6DD545F7F458CB29D8F8F03677D
FA00B9C7874C114F4476A36BAC6BD3789AF882C28588C18233BAD4E5ECAB99B0
59FE68DCD752E7FFF9F5FFBAAA109DAA869902EFE7CB2F5EA46AFBB9648EF05A
78F03E841887B573C1E165B9D454AA8C81BFB345F7957D4BE9CE8026689FBB9F
BDEDCD125726908D7AF215D939FC1CC019E8B87F7DF228F406F9770E51EC9803
83BB71E57C2762C1002D16634DF877308B462AA96C68F6DFE7240363B3708C71
BBFAE2B0EBE6B76E576780C1621225A259A568260FD0B656289C3557FF905179
69821173DE29C85CB48866DE7B503854FE184DA34D4897387332FD80A2143ABD
FA4A73702C25174C3D58C47BA29F0AF5D7BB8D491F09469F69CF7D42DEE7B1D6
11B923D549EA4BDEC95B1F6DF2AC047ACB40DFE1004711FF0AE913A117AEA185
1F21A6E4A0ECF381E5D5EAD4CA409496519EDCD4D3A720BAABC31D028C6D5C46
55A754325BE5336AC7838EF961E3CDB2C9CFAE6D4F467DFAB16F4343E83836A5
EE6119843764B74738FEF9478C3CC88384C3A873B5FEFCFDBF66AF3F10A4EE2E
D540CED08879A67B34D2099965A36564178DC0354994DA1DD02B1D1613775433
850E618ADBDA6F5BAF291F2F8DB250E2775C6F589772B443089905350C683D4B
DE1CE313BD5A82AD3A756322216825EAC502424F7EAB83B0550C5AFF773086BD
FB546533E1E097ADD4407493713B190C6E7DA8941967E58ABF554661F4EE4BAA
9B4B2E54A2B9A0A8C6E3775C4A620057AC6E4E2D1E61C861F9E8D0E2080F204D
0F9E6863C0BE3845266E23D69BAE019CF9A23BAC11B46EAF491CE04DFA281E73
138391F85441E9F71DDC7F996D7AE23B75C57342386892092FDD82641F051985
D338BAD67708C11F159E368FB62F312B74FDF1153C1773C4B9A21962EBD0E9D5
EDAAA540EAD880A7C3B5E28AE879EEEBB609E8C6185045156B453CB90B208F4F
0C823FE8A7DEF1F3C78FF7AC4DA62989DB373F4DBBE61DA9D4E5F0B8B97890DF
91632AB92FE41BDDB9F635E4DF768464B5C4BE9E6EE4B1A0D8FE3ED7840DC54C
E7A34CA71278FA3A087E74C3F504504F4176FA1B87EECFBD12791D7003FA4330
A1C9DCB85AC0B31D21C935DEF095D3FC3082F8CE1BA6B916B884A135F94D834F
CFFD11FD8DA623BFBD557191691FE6523F88F16F22B0303C3197223C9BC99E37
78C5DE154C6D41C732CE5162701ACBBC975918160865985C636DB85E249AC787
ADAF675C93440CEDF117E571FB0750BF0432BC43408FCB7BD46146824BCA6494
7B4437C080131D4DA2FD54B4CF7EB11374CDBC85C4956BF9F76F93CF20C26223
5138EF315304D2014ADE39CA8DAC192C2787656B2764096E73CE86FF9DBAB825
EEF795DD08EA4B395A7D111093EA3EC2F36B325ABDC00E20D3AA65CA9A528A93
2AF59C7299AF2A7FDAC73488252BC063941611DD8736326158ACD8AB5534CA4C
246F0C5FD3CD2015A3826EEF67C8DD182AC5EFA2D38CC6490324BEA169759AB6
480F82F90CD02F460E2C2C9137D46DAE56DA99BAAA556E0B313B90AAE3CD617D
A45FE14104337B3818F678B2438A6D9DC741CC101F5C3ABBA220217A2575A7BC
353F19CFBD3C3240F597DA5811CD45674CBD36343730297792F442EE498596FB
61CA36C34709E5223CEEA0A86C9C89D9B9246AF4ECC6A35ECD1D466873932308
A1D7E8B8C62A2BBF9027DF4F470E1805B357856BDE438C1DFA98C0E7DFBBABAB
38C14A39C2DDFB5D87909D8BEF8DF8459F1AFCF285CAAE8FC6A3BC238983A524
6948CCE7C86ECF318C498E5A68F3BC6BF940B24672F73B44A5675E0C9BA31A85
E0E24F4C186B6AD74652AD8EF7B3C906C5F562B5AF7CF0ED0665E4343D2392F0
CDCE27C77CEB75BD87EDB9549374288F3D3FF44232A2AF75FAEF2AFC0774DD90
04BB24A5B0A8AEA8DEFA2A7149139AA22FEA9FAF77A707FD7F9AA276CCACB452
FE08476689354B337A6CFE211D8EEA9703D383518AE5231E617ED706F6B0278E
9A778448A94F5E9528C7C99B93533EFDA463023390ACACDF7E603304077B139B
5C8CDAFF499DD02633DE6BF6A7C81748D36374008A602E6D74CE017C70361F4C
A0CB898F8D902ADD6A84E892C6B4840F2B1B8D8041055AE2E445088619B043BF
C174D395D5A1280CDFA3C9E1FDC750D18950EF78BB3778E0C5445CEF95CCC4B6
B6F46FDA4F46E1ACFF276EBE31EA08445604401E0FB1BF6BCAA447821F4FEF44
08E58C550F3962934F33E7F60FC2D853932EFCDFA5D6B2E57ACC7EDAE81F446C
368A40FF89C0568476073C15355E4A714981110BCB0992EAEF5EF118D86A310F
723F5519F243C73C44EC877FCA70658B421A3386BCDF80AB5898BC2950BB01A3
D013B5E0B81EBBC26AD39134D41DFD79B762BC519E0381CCCD92B8606041ED5F
D54EABD26007C8AF42FA63D25DDFFB54663E0457EED9E39692AB12698C96E910
7070F5B347696F541B5FA212BE4708EFB767FFC9EA35E58A03B7691ABE8B9F9E
1AFDCEC27EEAD3D12D77C3F262F6667DAA696C71C1E623F2BF8BCC44C1C6CDE0
641D676CD12110186C46F356BFA27C35DA908E4528065EBC5BAD8BBC7AB9FFDE
1C605092F60F1C3232E9E4F4605FFD4625F45A5B8698FFBBBE0601988A5D6AAE
598FBE55B74895C88B76987CA1156D1FC0EDEA05031400647CF147BC22F44046
CE2FC49F6B623073ABF39EF6D5B1CAB8609B97E6B3DAA1159517D1805D2BD01B
89BFD4703B3EF8A52BFD2B0D73A84ABE101B5A0B5640CEA3A080DF80A4AAD9DD
98F0DB75B3A2E899F4F3EE7A00160C3B0E605860914B248D43349D659B547E43
5D5787DC3F1062E543EF66B98F9F45C2ED774FAD18CC6A008C105135DC111D38
9D94D771CDAD0F5BB787C0482E43D69C26DD0B3A2BFB9F7D8CF3BEA7242888CF
18C040619871041508B2AE2C01FCF1BD059F76EF585B800B9E9BF9E7973DEF0B
5FE2414668CB104FA8B650F7005A34CA900C7DF666D3E2E0C1C9ADC17DE809C6
6A71C436D10D890EF2962A9833C02C797491CA4AC0FA3EAC58EA3DF0F6038F07
FC10D735BA9AA1317F148FA277A6CC337F57FD7B23AE053293E9ED0FAF2CD5E1
17C2665FB96C8D5ADCE25EF350A6B1D048B7EACBE1DA3649C83F6CA655BA2027
1457FC2C28B175A3C2C68747915A3E96DD5426A5523EA7036044587A364E5DE3
9FE2A9E0C84A9F4CBBD52425D933E8F58798C72508A070B77B336E8249BE1390
4D8F63350CA92121690131FB5526200D0CD10430E10DC351FED7B30047F4257F
DAEA0945660FF8D276745C88DA2EC25B75C01085E9F9C594D28303614722B9A3
3EED607789103808DCA20DA83E152D137AC702F538EB0DD0F7B1DF83F468D5CF
C9484C5FDBA2CAAC2A069C152B12D50AF4E1B2519FBB2B7793C03A601FB08DED
BA6B9A81A2601C1CE1C4C44F76086767A703EB4B9DEF64A98457F7A3E728E4EC
BD863862D228E2524B171BBD1BB61F7EA9D7C739C14FEF078F605903352C6E7C
46C051CE6439DE6D24E226400024E13E5BBA8B1DD5EEA8216F6E7C68C48BA1D2
B2F28B26B534C88F3D4D22E702CD92AE57A680248F5F7C4DDA71038ADF3C605E
15B3E075A3514E5EAC226C5D6CDBFCC261B0BC7B8FB56853C6F4557D4A4C5D03
55F8BE93D524405824B936281E11C47E51E1E4CE26F210067E645005274AA2B3
3CB9E6053EE65B01DE77FED88A06C1587D1F82D049A7D343FB75CD96445BF0EC
947651205D6CF62EF3497A10935CE8F681DFF83E7AF220D40723798A7A49217F
0CA3349A8EA4D9B7EA34367EB617A4955BCE1D9C63221E7FC663D1E6B5340FAB
85706BCE44379C031C3F363DC77F786C51FCD611C8A5779169F0062F223218F8
585365C6E65A6DAFC7E0EEFDE9B6F05B2E8B4EA35401C4BA75FE9EC168A340CF
29654F905EDF37C4AE52F67A3160AEAF8AE82A26963D07D748A7D1510D509242
380637FF16F883C6ED4841133FE50034D86DED09D372B3A31110054689DCD272
2681772670489A70F5CCA069DAA3CDF009DBD5927DF10392E6C5A2A1DBE361EE
840B6EF62F7740EF51575F902C084796E86705E3E9BF638D99DA07E4B55CB1B8
88469DF34ACAD7382E486E3E8499730E4399C09696A83C702B7C6E42371E898D
8D6FE65C93925D987F15AA3169EE243EC6890E0AAAD7E2276362063321D145A9
7BCF28AB7AEA43141AF12A38E1E4434EB9ABB02640D69EFF58A2B4304E6B12A8
50C0B88086C8B2BDB0B3CE821C3C9BCABDF299893BF45DE79A58BEF6ED7EFE60
10850CF7471DB12404758861A2037FCDA7CC321B345914DA80F31A8EBD8AB31C
C0F5176958C1734F5D54E6F47CB378E95B49AB05EE14113EF3FE6C566DE91910
F0DD4542E29B1468389BBF90BB149C68A54C2F1A71ACCE6699577261153C3E0F
CD91001AC70EF32CAB3866965D9BB5DA96D07E2B2F39FB1460CE922597B23502
CA2E7BEE10F0C5541583C5E05147330A129AFA9DF18D14BCBC76A374FD7E7907
FE63B0C712FEBB834013F1F255717EFDE079EDD6F3AFA777230FA2D3E665024A
E7F32D0EB0E6EEFF21F8258B341918880657FA09342C7441E266138DBC6A33E9
A1317E6DE3EE1DF963A90E81E071E4C55AA8BC099745935F062BC32507BA6208
1CBAB8102DA38315C299D106B6EC5A80531CD78DA8A17D79CDB0A26FA78268B3
91F548CD33BEDBC3948CF526AB2A3907D336DC545BA4C441F00C27AC43007211
28A4C89F8AE4AF9ACB9DBC470AA749FA5A3AB9DB0E34F4EEE140C891ECE93275
A3DD6E98A1C29582AF92BD37364DC9D967DBF6AFB03B7EF5B14E4B56E13C6741
7FDD3136C428B0D8C21D15097C81B2AF5DEFC753A931B5E47CFA590E1FEDFDE2
40BADF14954971C7A49CF17C7AA412BFBDBB6B95C298D79B95AF804B59DA2B7F
00AB735FC84B268C56A15C4BF4B8128C8F40D8711229E2CC5BD0DDECD7BB7D06
3C152982D388DB7A0B48DC1AE10ABAD42163EE7CDABFA0FB13B42E2AD6DD0BAB
0A7FD5DCB1E11D974C8BD85FCE9E3855CC7BBDB851C58F62534603D4192CA36B
1D9822CE586EAD1438FBF0BD10A5EE2E5B07D723DC008818336B504785768074
C947175D3BA80CCDD4816C6FB88D8E7E5908240D9E8717F8EE60F889B407CFA8
6F69F1C795DC9CB0E86E742979B4BC35B21D8DFB9BBCBCDA36B0BD4166F6B269
BAE0CC8C7E396B9D6BBC01A85A85F95EB9E16E280B26D512E3384BDB6709BC63
2656DFBED09B3A7F304648FBA9A2FE827D7116F771F1108762AF6BF5AF356F80
734CB08B7DB3B822628EF2910239CC49CE48FFD25ED2DC81609B737DFE1DC582
ABF78917CBF490067300C303969D22D25C9B9F53F8489BDE53DEB788CB83B7A8
6D23A7659626B33FBFD8391DF83DC07D3C606516CEB67EC4910B836D578F8AE9
6A57C23FD0E9EE13B6AFA0E739FCAC94FEB4C68AB1E7177F94AE4D6997AADB22
55723623D895FC952E62CCC5BAD17F6C3552A949CAE5B3DA967462257D5F9A77
E037A5442C42546203F684F758FCABEA3BFF6F66D47BCF55FA15BD4598E813BA
F9B23FBC412659D3D47528D9E831C893607DFA4F1D338616525122427793E070
0303409162D5A6BBF886439B13C0CC247210E750778A7E918530B58942E50324
4857F3C816F85613E687BFD76EB961B6D7DD2B089FDCF9E0109D08392FB590D9
1A9A334C7A0252255DFFE73C4A53C193A3E1729921C7901778B5B88386975ABE
4951F31BF88F7B480E1DAC33309C76618738308D39CC160C7D2B05B9749AAD1F
75E4D5B176E7439BC970F9712DA400D2515A2502E6177F5A3B9031B0C929F395
7D20F4464AC49E4B8E3821635D8F5420CB19F98B56A71484D78B5CBE3D295852
A523A209E4871FD2A186B7A875F9939AF2AFA7E841F15ADFC685CB0653B4EF7A
992B59D32589AD2AD073CE41E565D11502687BDB6D151FCD90F0B8FE8868C75E
39517A74AB30BF39EB6C73010E0A15B7D1235C3D5AAC52489CCCEE4F30500A80
8EA08264BC3D7390DC74AC221287E7874BBA8870B2F7798405400EC116FA6122
0C34FD16DA13B2480DC4B16D88915CF529869B58CE598FF9349714DDDA6A873B
D0394979035DA7CCE11DE4A4C9FA9D30CC55384267425303B8072D11D9DDCF50
F0EF0C2148458327A48F353DDC21B3AB6CD3885F0012382AA3BBE0CD01188379
CA35CE04B2CA47EAFA203ACF926FA384B1C004F735177E9B02E894290BA29D70
2C6C36383668DB3FB5638BA429F0423D898EA2444C3C6BAF3CB7E5E014BEC6D6
BF75E6266B7C4D1709C5484276519375C254491DF1117988FC9FBDCF1F649B3D
50182C98DD4CDD36BD08DB493723C2EC0E0BC5A88BBAE25A826AEADD90B95E04
FC32A6CE89ED161E90B8C7D900193CED0B6E1698FF1257B5B49FF2314783390E
C6AFC1092DBA7DAED95446A87CE61BDBC0CA81ED1DCF653BD097E61B741B5BE6
8CB4DB29E22F72F464B033146DC9A135C88DB3618D77B66A13566384247FD094
ADFFF4CD9460C85EA5E5FB3255A93AA34EE1222DB38552091831D91DA8EE9A93
73EF934E4C61DED60F0FB053805DB39FC6027BCBD31D492DA10155F9C1C663B1
410F7B50A348BD2987A45AE742ED33D1BDE795DA2FCF877B6A0E736B1DE5502E
6737B5393780909E2956A201C7E71AB0F5957FB0D690D6005BFEAFCECEDDA1F3
DB12F28F99D9EC251B2953B8C045927A1799ADD4BC8AE472104870C30DA85E70
A009B1B6796E81A0FBAC570AF3D551F199375ED3D6ECCF457CE3C2C449ADCF02
19493B226A57E017AD4851450A6A9B64335C8B5DF6363248836EEBD6D957E70F
A5EF377C78487E2C534461F97A4F4A2BA777FC82B4A73B2394E89341C57558D1
68677496191BE975E39EFDE9737C90B40B14C4662A8D9F8B0FEE21D1C2B16EEC
AC4C5C0EF5D036FA15EAE8828F1B931DFD9A48F990B60F7E4498F6D20E8A8018
AC181025AF9377005A6B6FCFB8159C35F372B7EB98C72B59FC8B724D77DD48D0
382EAA2924AA0B40FD0612A89E241744D2CDC85674AB1785E17B148F05FF52F9
B4FBB32E93F754312BE66E8181FFA0DF51C5AD8EEF1AC1693D116D5727C8492D
7B686A40ABD710B357D5C666129D166FE9AF6774B32CFFAB75CC79F1B8D1ED8B
DE4E6DD8C8F7F16A01BE09F60663F4C3E69F5AFD54EC302F75DD7088AAB9D7A7
57720280BC2C6865BC08906C1E2E80017CAC1CC00F6CBEB748C4D78465B5EC28
05979811E2B3FB3E1891DD4C8FBD88B96E6381762482408DC0F583C7C42B004A
C8211EB28EE87F0E897BDEFF00C265873C923DA723401541055833C5ECC9D18E
6A4C4F113381173924E6DC3C68A09440902D0983B4EA885CD9DF12110464DE5D
3B6E6ABC008C86CB01851D492BA3148A11927DD65A95164B9BB83253A236A4D9
7E624EBEFF3CE8EA56D72B5DB6526E7B4A923245324E826E80FBDAD6ADFF6765
6AB72922CCAA63F2D4F915B921AA7072575BE1C5A6A2206C5647FF02FEB0A27A
20D80555B6C8CD9587C25E085F8835EF8D03A4E2918520986041483D15289E27
200220E95CC9C1FA7E489F2FF30E9436D3D3FB7699F11DC8A0938753571EA4EC
FA81043CED8B08751B19DB05A9B44DAFF1833FCC9BA70E3F3879F7E5CE75ACBC
7A447FBB1EED9C435977443F30D9A91AE153DD2725DFF7861AC15250B507DF15
CE087F0587B9AE3609B08DA964A50AFEFB3EDC8B99EB65FC2C0D760FB32075CE
A780403A001CA305644A55EA5BA371EB0E95E5C800F7B8D0741303E40B347157
F2353F195C6271DF3AFCC070EFE540C7F72B2A511A96F0BFF12BD9AA37DA5DD8
8B70B37AB2F0C9B4F8B1DF9D565A6412B71732B5261BEA38923F1CF13B14B692
36DF71686E3C1FFB193F4D27EF370F3F71E5D7308BB87DDA95EE2C3C5A09C757
7F2777C5E3C2597873F5FC49C56006CBF252CDCB5647EB89F1DEC272862A5536
617781BBE5E1C04F71564172E59E00E9253C9B160D225ABC3A5382BC87CACD23
82A4F3AED9A0475BF2A12528AB5CEF2D59F066C2FE27CC11903B05D3627F4624
89F20E18CC4DDB0863C814F342DEE328E9226C30565C192775C12F20DE3143FB
6E874B5BD7116F9166B40073D9358229BDC85FECBCBD66B29DCECEA53E501769
49AD34C338A08B3DC66C8B6CB9EDF548724F0D03DFE321AA77AD96270F0C25B6
818DF8D245A860D59BF6213A632E310A7C26F976D26E2ECBFA9CCEBBD7947B76
8943C4656742401BF3764FBA0E66BEFD41F0AF36EA5A6777B661902F663FD46D
6C80AE296B4DD9DDC73442DFC2B6C2B667E14A619299A220CFCE5ADA1E6494FF
F9E4D785C267031FBB9D7A52996D579636A1B9655A2E1EB9DDF2E772175273E6
AD3DF7B7BA6C61DAA4F4AF5E70B13F6F6CA317C1A7351FD623C8D730688A090E
F225F2D1798E2DCFCF83BBF286E9140D3915788E1C2B4D9FC093D16763C59271
21444FF89028B03F6EC8056F5C6B2B7F812510737A97954E10D29A38BD4BEDB7
16962E44EFB348C5A0E024A9C35DC64A45A7046A62A5DDA87BC8D355C9CF3D71
E93AC430011A66439226B08264533901BA850FF1A8B2CB129D0238CD79E556B1
A53E9C53D4E210C6DF4CE0439AD51CA058141EA209FD90DDE1AC33950B72719B
3549752D67A265AAFD9EDEF4D15C31ED493C96CA740985AA18C7F69E4E1A609A
235501E604265D595ACC5B376A425B37F9D9CC8535B2F99BD16EC9F360A9928D
2BC5F2734A2B0B0C2233D9AE5D06B7064DDF4364EDCB9F4D57B6AEAECBFCE6C2
0A3291F4374CD9C0A88E8018AC181025AF9377005A6B6FCFB81D2CB88D5F5073
6578CB47D50503F90EC09925DC033451BD6A6A518777CF2E2BFA2AAD69C40073
AEEA66480E48BA463DC071468BE98E79B6B77D1A48F1EC85AC2D60FA32C2B896
C9CA2E4AA52D6814C3A90F49453C4014F63237901C935D375B2F79611D38C188
89358E8B12447279E9BE25BD4AB0E542F3F017A5D00EA676B71740AA4AD81F5E
7E44309EDD5FA32DC85ABD349D68F0EAE6D5039ABF61C4ABEF37252C1E44BA2E
6D072D9EDD9F9EE6140EA2BBDE45BEBF387FC14F1D50CF98C46549F30B5A6290
7162B395ABBD877EF1C6A5DFCA240A5C9C5B7E4386A38A4D59E0ADF688915B7F
6D9410ACD7E07EEF8474F21DA8E14C2C9E8672B0B40EAF7951076137021A5E0A
738CE467FEAB295AB04FB0DED3D0C187D4ABBDBB758232B7EFE136E412F96A32
A8F9350EB34E79BE368D7EE280F58C9AEB90356711962B97ED67821789A5DE0F
66F3DF8E97EF6BE3F1C940CFD2D3D5763BC96FA5D1B37B0F5993843992146ADE
65CC87DC0B5EE2817DE214DC90AAA2037746E0146235CBFD649F0F46784FAA3D
9C9F3E9529034060F76EF2FEA475AEC43D5F089AAED58B4CB3E9C7C82EE1FE5C
D1142778C297A4CBA83A501C8DFF99CA74B2F75766BBF939AE594E5851E75A25
8A29105DAF53ABBBA7ADDD256FB23C51A1F651596898CEDE6D1A394EB7B78312
03194E76D375F32A502CE810C56D0D8BCA957857BBF8228BE6733E533DD48FBF
3B296D8E1B1611D4B3B244875E4B34F947C369B7B7F73CA69C7C5B01DD80A546
83E962767BDEF178B16372413F810175EF25D0E24A1304B93408ADB8F14412B0
D81470F4532578D6798584C42C033B092C99D92F3A527DDC93BDAEF844626BE6
F7D76F49049B6A79670C7D91373D029467288902E4B2BD41B00B39ED96503908
2768807109F38D7E0D59F2A114F7BFAF08796FFFD5959F139651CF085317CD88
953E91AEA64A29297E55C3179C3C6D2A747A69D5932F180F0A545090E700DB62
8FDF4D9E24AA996680AC3324AD27BB940F9EC37C3C1CB2168B3D1B42607647F6
EFF89C97B3C0F02033DB976A55583FDDE9B18DFC863F0B76ED14C409BDF50329
21E636E9F3805E2C8AB8DCB886F94D51A32B031775B8A30717B84484E5E12A27
FAE2F10CEA6C96698E0C62E9296F21A2B5B44EB41C89F3ECDC31CEC3E69566D0
9CDD2726C2A9082B1AB14C6BCE6B78D38684C8D7DBD0E603260A277D71FAAEC9
A6C932A07C448363D45D80F3C681BACB7EE358949916491F842864731E3B5774
792C9EDECB023AEBF1B92EC67EC42FF3E78EDD044B5D4D6CFFD3330C32D011AB
837730486DDAFE77492914514DAA2B912774931EA8F95D56E6796555F6567458
8FFE57BA76A68BA319726D79508A26591C2581A938B9FC75CBBE1514B0952353
B26F0CDB7F416A6A6DDFC74BC8516062FE9472309B1750D6347228647244F8EB
2F8DEFD25B8F483F02D6FE738984EAE294DA8C737FE5755478A0595955300D70
06BAE1A86611C57FF3A3F6E2178D61B6228B16640E4A8594A678A73538E4589B
31DFEEC7BD7D8B06F3FCA418B24A8A417F7E9C1F31DD4E519CC8145CF9267673
F7C4E2314914C1732A5446F9B83AFA3BE04171939B5FBDF1682C8957F7694843
C1DA6938FBF88CBD5697207FAE5068DEFDC37BA11A4FD17F986D7BC3B3B23D9E
45FC6DA5C5981A80A27F62F61FD87D9E1473CEB699B084ACCD44027A7E8A840B
45A19F41FBB33246F317D2FAFB17DCAE007B2F7FA81E564B947D7E456001D08A
A572C6EA37C6C42C659BDD23DD7CF8A9A81458998DB284E47E0A93F9FC49CCBE
30982AD2A8750BD085EB92B005D797B31D609D0ED4BD6DE9EF1F326A2DA07DB8
ABAEAE92E48808A78BBBDF6F85C9F2017582AE4B0CD3C1CC33D578BF13E42672
D17AC3D8E6ED3CB1418589938B22F0FD149CFDAEA36F9FC00D08513421EC68DE
41BF99512921346A87A21D755F5BCA10DB82A08487FC064D626BA549FC808A1B
849F6CDB0C43B3590D1F350290C84F6A6969ABCF2DE204B8BF1FC7D06D3B8990
33BC7F0548941BCFF4095A1A876A049BC9A7607AB9B9BB8106A4DAE948549002
C5969C7066F1629B49FDB893DBECF66209CA43F65D8A739ACC35A8556C09CB74
B3EBC147D38ED65508938449EA342F21C85480DF6037E30472A11FDF0ECD6A5E
EC8E9AB51CC76BACD22A504DCD40BEA70F6073CE5E0DED769C9F6FB84C87A529
8E70D1CF6A47EB6E0560CBCC8DA0596BCF456AD60EAA40F7B6B7F0508B26BD4B
075B8A212CC7282ACD35F8B57E4D6E997493DD1F3D2EE51F9FD4DC2D3837946B
B2D5A2B94B7A9DF5CF6BE5F7BBA9EC0FDB41D0A2BB7384B96D8460AD2A64C35A
4BE47172FCCD9302078128E88547A4E487A0816795DB4389D1E697FCEC6624FD
652DF8E0381C67463D07044AF41D3069DA23003C1DC1968ABACBC9A34B2E03C9
38B3BA9385F5977EF91EFA95258B6F337CB9BE1CDC157D383CF8F7473B92B508
4420AFEB3788972DDCF7C419C3AA968BA13FBD17F44C6CA1C17D19567AE00FF6
8B3034B3B66F093A46408FCD38B85D1D7CCAB29F2752BA6F7181D35740F05E52
C3B31BEABC207FD8008B916E0C5873A0738EBDF04151841B23F48E6C18F24F84
69091160DFD4AE79EA632F4D54104FDDAAF375BE56AF47FD49CBA2E78EC53B28
48E0AFB5D74BFF42E8FB3D46224DE3658E1DD94FF35AB6A2D55ECBC40E205682
64FBD43A324AED065383ADAC5AEF5068E7176101023E68DD7980ED85F9578C74
880A7413E8635908D0EAD76F76338DB8AEADE7A834103F9E3DC40386FD67447B
7C2C9DA70B8D47EF7A5512D6EC950F6C46C01ECC659F95BAFA45441FE11F56E5
4EE387ECF3B70C0099B8F323A71731265B8BD5D210AE926C86F93F025E9C0AC0
313210017F82B1BF089BD28BE2305961546D04C66EE0B1C636C40E4F37AD463B
9D81A24F8DFEF77A8F1FA267CDDA41461FE1CCBC3FC032989BFDAA1FB31A98D0
887D850F2AA1BA89905CE549052C3BD503061CFDBC32134EA17390AEB5B34134
F0BDC8849017E6E77B04B43A032F0A9D572910AE98FA9E1A7168557858B3D08B
99728DCEA9A520C13824944AEDB623C571FC24EDB5A8CB22ACF60D22105BA275
047A01D525F40446181DAD8DB48B9D54D73227C4298F0B6A19C497B4C54BCA21
EC68DE41BF99512921346A87A21E23D0405A5877A75E03B395D012B8BC5C0E04
163CA8048C3E1C5F8082B6CA3602A26403B3CDE75D2D19EFA89370B86D1556BC
10D4CB5CAC70D0F08894C96441163AB3E15A06027257C110BDFD94D7FE5D3F3E
547AB7D85F1A10D6B7587CA36C8712E36D1C8D87FBF3BF9739E25CF526F45B66
65B82189D8340D76FCCB9082E25ED4B50D7DB2172E7C3F6B0FCA3855552B2743
FE2C17CD43FFA7D1E6EE27E75EFBC5B597B6BE6AB60356E707E5343ADDB2E667
774D3E27D16964F9ACBEB40ABB45E24BFE3DBBC1B3C6F00EF26DBF72F639AB3B
01AB8A9BB2A6CAEF429F2FF4A60CF6B58BBC64642C60426DE458114454F2BBD8
ADCE78A055B8B2F26618C6D83428459E5845376F997446986907F061765A52D2
858592C23F4EE13244F8E8FCD31C5006AF28299DF7A89C4FBA7D30752A05FA10
6014BC46BA4523B34ADA1B5D31E27DE297CBD351442175A1B1EF865445EDBA2C
9F4D42263BE7B007B5E747A9D8D47146CDB5CF915EA1BBFB61AD2DE57EF60DCF
5A4F60ABF148C31012CDF2078E772217A856F22CFADCB2252C676973A6206D40
FD04169C828912B5E1CE273396E836752BA385333CEAE2ED020CC8113FBD5B6A
A2DDBC92833AEBC6E7CBFA9EED6A9BDE48336AE0A2A60A0D4B757454DA411B6C
3FC50721A92E2D981B824DA15074CB1BEA0FA116002CA02CAE79CA20DD539A60
46DDDB512666DCD6594737FA73EAE756FBBADD2E1386FE9ACC6130A67A009154
6D483D807126DEB7E0C94CAF9E01ED6C223A82E9239921FE58CC0B13B522BEE7
E21DBF5A68960CC47014C9E2F1889D158B85290D4E612D5D316E81D0AB7EC59A
2FFC796E33E4579496764A93FC4A56D4A62805818F61D2DC3E24F275916DA849
100D409D6F326B2F24D4217C1D6F2A5F3DC8E90E7BBC20A48FB5F9333D89A505
36251C4C11C754A44D2522B4D2724B71BE1E3C82E055EA49561FBE274C932F7D
53DB08049708105D444AACD6EEEE4A4FF4534004A915C108ADF1D3B545FE3129
70E0F27BF495FA39FE7C9B7A6AD51132D6B6B366063CE605C926A1DC6D142B12
20B1D42165B7B58B7F38B5FC523C3518377CD800A7C8BE60611581F948786F2D
B3CB010C0898282051FB5E063C90A2EFF603B57D1BA77297F8A64D1C43A2AE40
B038CE37E5830E8343046CC24897A8E420176B554D602E293239EC675BF3F310
912E830CEDE6C36F526DE4432AAAB19E498912CBB1DBCF79BC6B99E8C5835EC4
2817BCEC5CD7F44E3EEEF82158712B2D95BB673DEFD6B006E2B69CB36D75B910
96A56BD3044766ADE47658CF277DA14BBDEF36BCEA05026C42E9300AE5093BA9
4F8C4051434D3BD77B1E35CAA83AE6AA32067DB113812B6F8C5A668387CE849D
FCCB120DD85CD393604FD4E68AF23ED7704564C832F41C5C20372792251D60C3
07BDB22C77464C7DBE620DF8B65E613A9F848C5C0B5BCD65869D1382BDA3F528
516BF6E3C46C01329CB3826A650171C8B6FFEEE628574E0CA9436FD816FE28EC
7F606B995A1260A131A29D7F2D8F5B873918976FB422225AFE3A3F92B85B29C9
323E28660653E1202A07C5BBE976434254D07104FCDDC439331075F61FB93A48
83CDDC861D0B1DFF5FA599D67A4A3BAB2D9C49CC1A97673AEE0F118733EACD30
A472C2C9948652490A31EFB184F781387785659E0BF4F88910A6C3C2D6EBBBD5
813BB11DB14064F1EC15387D44FB96C3FD5C307A7C873898CD1FEAE276878762
3A6BE30B16AC9227252FAADE11879DCE89B9ACDFD83095F0751FFA8C49B6634B
EFD47EC39E0B928D1C8D7C0C307700315E8E3AECA3FB8B3BB423D9BA6366C334
49E1F2178BCE3A8297DDDD6257676FF99E33AA78274219A3D52FDFDF36A6E77E
3054870B0425E199AC7D748CF32B11D51E64D053409ED44A232B3192CFE6A155
5DB518DE5321279732150BAE5EAA9AD3F47CA40241530D7E74D177F0F3AA902A
D54166AA2B9547F077D36EE65D77FEA9833F5D455BD69E29B65EB2527C6F5D14
B0996F9ABBA278E5F23E861AFC81D58DA932B431AA82C9FFAA1E5789C1E31CEE
59A30E3ADD7AF27CA40E258A1FDE70C0ED8D059CD35D670DFBF2089A0E7C7170
9B2D9784067BD07AB0675B8FC2A39D0794FAA2BA68EBD74E49EF8DAC4A0C7E1C
904D5178CC9EBDB537B9C4C2F669ED0788C65B1E77444A47088FA7B277789C3C
32B95E2633951FBC2E5DE15E41516A622F9387800FB64D740B7B5692560BABA6
5FE065FD988E33B7D90D3BC6DA64CBA374236ED385777035850291C48D82E1EE
5471775573397AFF9E07E0422F9270B93E912197BA3C3EF8F0FF4F82A8D7AB23
52BE2B04EA467D303679A609522A90C09EA9D6F2EB450C30349BD1449253111F
ACC8C9F6C0D53220FACB53DEC9202FCE360FD75CBD9A827E50A4A73ECDB2BF3F
BC775C87E97FDE32A13181DDBA016BF0B8F39142E3C36F375FBBCCE74FD9811F
7D05D239E67385B6279B8947E54F672D8ACC72A4B70D652A1CD15434CBA8B4E4
C87ABEB28963164A746B558F1713756EF9C12D288635D505315C059906AC3711
3CC01B5A57966CB2FC8CC6640E0EF16A0BC3ECF3E0952134DD6A2E6D9D779AB7
14AF58061E02D3D4F36FEDC47DC99E5612041D759EC64A33B0EECF51DA5C6E5B
804EFD2A8EBE557A32CE4179F4B99EC9E3E445BE2DB9EF5D34E7F747AEFEF6B4
A74F1AE429CD0D1AD0504E893DED11F5471594B27C30E97025C9F29EE4BC9F70
205685BBAF87266E14B81D6260DAE1B683580AF66EAD3C52BE11536F24E19FAB
CDA99BC0FD9033F21C47E9A5659E22B8CBD288148B15534DCE7D749788F38EB5
F8770332FD44875FF0566E52E890A4A83CB6FCB80CE032BADBB4DC618A53D4BB
49A9D0A5FE80646E6E2141C71484767D47560F3B3905C2E9065B0C49585B696E
0DB2231A78C2391B6CC57B09586617474B3A0885A610A2A4CDCF66EC55A7E35C
0316199F508EB12237E4758E537877B9BBF26FA22D376427AC06A785140BB014
AA5B8383F6AD98DFD7488D961333336132D0AD64C2728DF4D9414F1CA4B13B41
0DC33FD7205196F3EA06E49A5D6F48DDFF1A110EE8BE32A4C1A5DD5659A03544
8605F5C42C7E54D5EAD7ECB1DC8F5EFB068D33D6A3C41958B7BF321CA77D2426
4EF0D9AE9E95BEDAE2D47FEFB8B92A16F592E410AFB85F43A4178662EFA768E5
D8E1847AF265C8CC17A2884DAD18E0EB09FFF006E6CDDA93F18B00846256FCF0
E0CAFCBAF74F1BB3723BC830DAA3FCBB3037BB6E9EC5779E96CC5153167BA36C
34DA3D841B0C31C2EB6CCF7BC7C5A66D486BC1675DC6FB9A9C799464092382A9
289B21DF5F456F6AA21A501D2530969281B85F09C03D370D6CBB8209848C8AF5
8B7309BD4AB80818F6C1C442D866F9751BCE099BDA05362C779ADB8626B23C58
F7F7A0DF0A797150296B0B418FED2CB22C5C6050F61800C9F578302026FE0951
C3F4D76FFFAB96C605EEA3F8D8300DB656525B73A38C72E0AAE163EA4F91076C
B42893EC5E3A2EAB2BD07F3F3D64DEFAD31460F401599445B8D890BAB76E5248
A3CAF255D11E66AFC6A4EA2CE4D7EC43C53CFD239D73CDA5558A35C01ED64CD1
A218A57061BD90364D42369CD443C844C0BD6721041AA6FEAB4E905F3B3447EF
6AE66F30A2B8BC9853753D44CA1453E7FF6B27E5C562AB1E5C19691CB67089C9
406EB30331EEE949F71E64CF8ED24999CCD6FD3691C5E3EC45357C6153EBD412
A0056B836A358EC93A74B49D1584932746E90B3BAA6A8ACE63BB86A7C2A4CF3A
4DD4E41EA47685971093E114A666A742F4CB95BF110410A07FADC306D7CC03C9
67D045AA5716DEC59801DDC5B98DDDFD74FD4D9F7F5ADA8EEC22C2ECBB711CA0
888C6A4E7D1BEE5207507B0BD419C0E5391CEC96D9EF6D9F7836B85251D4DB9C
C6FC402F8EDDAB9441233E5BD9D8C3D213162774F745731780467348C6C0104F
AAB959A4024F399AF2E10D2A6A411E0F9382BEAC2484D8336D508275EC9309D3
7CED0CD4E16DE1635E5CEB4D92D0DB863EF4517BE1E37E8181D522128043D34A
694FC67C6D401C9F6A618D291A65EBC4C0304150AECE1B6620D4E6CA68DAAE91
25CDC30E377B78459D8C632DE45BE4BE0F07194335C06A0069B8B9C48463EBB3
76C406BF6591E6FE5E557C4E7FE531993BECD9A30AE49FED4D2F0FC3432E900A
D32F6B8CCB41538B3820AF578261DB5BE55CCB5BE79BF883EEF86EB672A014BB
3C5BAF6CD0286871CA720DA57529694483A318A73D7D479AC6673150F5488A77
82DDBF3B22DFDF99B8F51C0261DD35FD5F16C9176065E37E44C42FA29950803E
1A535EA4678F1DA4E426F82E0F36283EB997EA695C4761F8C356810994E46D30
A3B72486A003B7680C8678E1C3DC0FE83EC18C1D7C327047AA549D061FBF70D0
6E9D36A82FDB68C7AE6D4F467DFAB16F4343E83836A5E781857E40CC9ED578C8
38BBA0250679807856343D9F996263736D79A3C2B91C78AB2E33366D1F1BFD94
0DE6B6FE3FE441A17723D519DA850AB6CE69B7AD54F0A56D5902A662AF03B5E4
7F691C2A8699E0D111D9EAC03071BB8EA01F035C399EDED6AF7A70BF2B8B4594
8AEDDFE8AD040687B8CAE372D82266B84FE3BAF198AF70B46B21864F29CEDA0B
BD61137C2A878E540A07D9E50E9DE7FAD2FACC163FC5B940AE85DC45D1F128CA
4C37A9BC938D5C3572A6F958C306FDB2360D53E1CE3D7050D3452EE6BD699856
E444589208DB4862F20EE091971846BBB054A5E46C65DF0F65EF55031CD38EFC
48EBD2582150C987C3BBD6EFB2EC02F29908C3FD76AD5A67685F8CB942B71157
6139C68834199B7FA73538E4589B31DFEEC7BD7D8B06F3F1804EEA079F3AC2DE
EB982D4155DB034B81B845614482BEE6C96DA9D0287E9C2421C803FFAC42A396
60A1DBFDEC30F706A0892DAD7C5533562B4BBFC8A04128FF971D283E3A348B6A
4F413A566B7424AA836C2B4F54AB399868C2D68770397C7B4173F3C1085D3B9E
7EF4014FA70C9F4640F595DE4DC415F3465E79A459D34A4186344F00034AF1B0
19644F8E00670B60B2D051C6CBCC1EE0B595477E3687B32BE3388478CCDD5814
AD3611C5BB68FD5F1CBB6034EA70D5EB5B0EE8A8CA0F1DDE902B5A9DE78C570A
583C2F94A2AAA643282E91CE086A44BB5FBC64336430ACF7D86AF87683FB03DC
7276434B5F9CE5985A7D63B740E183AE97689244F248FA5BD9B618B3695A3D7F
5A9FCC670D60B0D109FEB8C7DB2260675F6C03DA7C9EFCDC63EA8CC49265CF62
4AC29834953438A7BF88AB1D0FDDDDCAB7C11438FF7CAB4DB8AF5DED8304969C
DE7A32F8996CA03F642F5DEC2B391B8D7B52EE6ED6B96C4AA9861BFED00C5EEC
207418D1E622291CC17927926C6672BE78FA92D59BC869EE885E16DA2E1FD2EA
0A7222429BDC8A040C9267751B687B07A7614E92ECACF64E79F0ACC2E5A57DA1
2F4438F2A36CBBDCD33A4B8F34141B4B1E22F582C850706C43CCB8B839B6ADA1
CD046DDC9919429E44EED60C9350FFDEDD5CD67EE50F369EA947408F3F1EB8B6
94508AA4663396BBD7F833A402CC3391F1099AE95AC9F1A3611A80DB004C9942
FE2DEA69DF823BA29213B0C2720DEBB9432F01A550980BFD979FFD073929F2AE
9738D0AFE7D585F67BF1A789662291F5302DED60D1C56B30138B440A70EF36C3
E406C33C037B51DC5267CB0FF8313BED96496FDFA90851E3F7441B47C84DDB05
B9CF981E4C1CE03DE1E26EDF17C884049B8C2E0701514C0E4FA3C5F07857D791
68030CD7EA9F222E44FE2E6A8B1E580DA16FD7E028EB1A9F30FBCEF78D51D42D
802803CE5678F283728378CC62D0E41D1E3B35C09C75FBCEB23011898E05DB40
9442F9A517D230FC3F11D35E552AC729361E21F854399E1AA3B81194215B50BC
0712CA1CD88BD01FCF87C0A47493A896D02445CA49DEF31B9674D4120B88151D
104B64E76F916F6DDD4A5806519E5E5E89633A4FBE6E761C3C4AEB59EC58EB57
8F7E43A33017F175CD9B3E7D9B140ECE1F8A6770BB3928CBBD68BC165856922E
3FB229E468858ED56EA8A6E8113D086EE8B9D6CB6FEC95DD967B07D0B2656C65
7605BBE55496B56D7804B4EE570B545DE82B45027EBC9CB2EBF650A6A7C41F7F
24C1A6F0E47AA27F2BBA3A4A60A713FD67B410E31208367453DD787AEF80BDD0
D5CC3588D22ECCFDE2ABA82F7E1FAFD6CA83997EF2A06BB70BA0A3DCAA513599
F9B12E53E051A2EA0B0E90067D4D650F3D501D4EFEFFCFE5E36110C03EA37167
FF8ED0EB4F08F19267E9E7262E05D2E8FD2F00CF43A738F1895907B5E8399ABB
B2E82C36F32D07AB760540E7834D6863AB4964DAC20F76481EE0E7CAB70BCD67
BD58904EE1A8849F5CD8483B803978543CAC14150B00D013ED057713EEF17402
DB812750F21921F123FD31B3362294ADB430940F2DB5B2CF0D0930852D6E4AB4
3B058CD0048FE7BEF5BF1F2AE2415443D5FD5F71EC05D8AF1C372DFEAB764502
4167F762652F38C3C7C95CCACD11E97D30979C45E8B031773241FF7422AA1967
4DC8D650536E25521184980896DACF87AC05380E56BB7C716D4CA081F06578E9
21BF184A80A5B56EB1854CF0A8B8DE48F605B5CF2648D9A84525270A50512FA1
4FCF57E0B6DEB76C2395E213B5A5C65023212811DDC156C245B512D2224C4ED9
01E2A2A89F8174516AC53D67A4C7ADD7AE342F05406E868F7FF8DBA09F58C6E2
A95C0B02FBF922FAA1BDC62D5C15AB5EB5200D08B43C1F9EBA32CA384AE9D8AC
2E3F739392F3CD7BE290BCFC37138A97E668EC616F713AC16466474DD0F795B8
BE08CB7BDBE15C1BEDC68F832BF2886C0F31D14DABF5FCBA24217E5140FC7051
8CB5A87125E34BE1DA86A807E7B09CD11A220757F81E6BC48143797E79CBD8A4
A343AAB395D70025B0514C19F1826F14A145878FD9F41EFAC458D5F62A877C2B
D182E13D3430EDAE07BD4D984E7D5FC31FE9C2B91B6A387568B3E19266CCC039
1DC6F424ED456693D43A05476FEF0B6957D9A1A6C4B1AA302BF5DC7975823C9A
8CFF0823A77EBE8F728BB4DF8200CEC6A4C501485B409B615B77CC43694E8913
A4A94E98330454C30487233A0AEE94FD36FDA896FD9A9EDCEB63069E2A9A4AC1
2BE09065D870B33EDEC1B39F847619E087C843BDB33FAA0077A25C6C7E287FC1
803D4D27BAE8C07846791A169AB45DA2A458077863FF5B8F19A2AE3EE13409B0
0E73E1378D450960A1AE69DFF40A539397B6430A7DFCEA7BBA1BFA436B6BD123
DDD24DF3BBA35DC3445A1D689EA024DF1969DF6D78FD9108862925D2D429AB1D
F21A836FB2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM0900
%!FontType1-1.0: SFRM0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0900, tcrm0900, larm0900, lbrm0900, lcrm0900, rxrm0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-196 -322 1502 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70A82798D4CE6D9F23F52CF97CA370D5
FFD6359959DB68E52196D89FFB84700E1CCF3E2E6A52CCB43303FEB31F296C29
34B019803C53D8D5DCFDE72099BFBA29C176DA3AA9F20106D6AE6D530A490578
AA65868A24DD5024A28C6E372C33EA2F6573A6592AE985F03A99884CCF7CA096
043D8D33EC0550084F5D85656F821D8E06996DB3E47A7C4E20CB4FA8F9A1FDBA
8A8D5E42F16B4FE307D36B86A652C196C9968BB436C9CB66C9CA27658DDBDFD5
28224AA3A9BDE394CE703771433B4BD8B2867327DCED10CD89FDAAA5663DD04C
0F4EDA21B96627D495493471C6F0A2BFEBFC2951896E3A52824E1B82EC39B16B
F11A8545D54E1C5AF4BC701B47E1D8D4D073272FC1D51635571A371ECA95C12E
E1C25D2B992EEC97DFBD6FF62F64C001793DBD8BEC957386CF5BDEF6C38A4DBD
F39E9464426805353EB6B50E527BEA12C147153B2080AC1F7C1C713AF14688A8
62D83B9557A4A5B851441290AF825C4C92C6C50EF812CEEC88EC5847D3E6B82E
9EFC37F08E99ED48352198C1DABC02F158FC5E78E55629228EC140AFB4086200
E77BEB9D615DB1A4373E7169AEE1391C89B1E6960B0587E8F372149E7FC4AA23
6A54765B98564787AE6D5F7213976AEC2AEAC2A11C2149FCE3D586030CD43125
DC82E9FD230281E2EE9B068092FC5DA01140478958D7CAEED313A06333463A35
0C18C4C0BC997193BEC3DA9D4670667BD1A0D9674D2A5B3E6608D9508A43843C
45AC8006EEA335B5BDE077D6617AB838822EA1B465CDBD6441A8B9E9E7E910C5
DF47B5ABF9E15825F57B4779BDDC764DB68A47C9100D2A9BA91688E21F9597D1
BCB6F12D5926B94F3EE771F02A94D59AEC23193941E27EEB978C7E907A6B3FB5
9E36D639D56AA2AD38410B9889E72C81E3B4A0AB917247805FBE1CAA6EE29875
F2898237ED7F32F9EF2BDC823E1B348495B77B58A847723B6156E44FD7566182
64F76C76DAFA8F7470FD9384ED7686663594976F9208C6B3C19D9B3853489351
4F17F2EDA0E5BE179E3E34339F2D6419C881CFCB2EE057ECFDEFC6BA0DCE0449
EE9D1F7DCD406098F095BD409911662C426AE79AB13426007826D5ECDDFCA409
57850E313AFF4BF6EE7F96CB6B7DCF5B364EADCE957B001530E3BD2F26923CE8
6522C401271713B28F986B2C54E0F2E5C5A13DEA2D839B35D992832099E14BCF
76530FD861E3A8381E4B481AF8566A58B62F7740A9F04D7B3A39EA77F70B3DF2
19A0415894E427C5F588A0614B44268DC40E2FDC1551966A7BC3D0FF1A110EE8
BE32A4C1A5DD5659A0360FB1272CD354E43706244A8CF09712165DE31F47CC67
1E0CEEFDD2C398A2780209DA6C29EBC9AA2FDA1DD2C0383F393899260C1B5420
6E16BBC9223EA5D9B7118C938AEE2340AA12BB786CDD7FAF7FDB93D536AAD6FA
BD7F73EEE63BB1BCEFB778A1E19C7A52272B3A0D6983DF61299B43730B6F59DD
7AB109AFD722EC2C91256ED9CA78B4F29F970967AC551A3C5BC2D722DDBC456C
101B385B2E66F4D60ECFE4F467B74DAC6AD6BC184C2882FDE2F2BD5AA57B369A
A2D5077ED01A318468C9DFF780A58041164E64CC4490D44F9C16BFABDCCE4DEF
92F7EBB72D912D0075417670BBEA6C15A31507C02811B93E04BCDF5449CF2CD2
F277D1A76BDD781F8149B2ED03211749560EAF0090E349863E8EE1B62C5AE53F
29A49EFD77E43BD16803965F1032B0C786713F2E8F1BEEEF87F841D02CCE5FC6
093564301431AC809D401C6B6D2521BAC3FEEAC930222CC6CC2A36CE5856080F
B347E8D6C1E69C54CBB72DF9C83D7CAD2A46E131BA4EB5063894975DC194CE15
31F2DF116AB4C81C1931D8B1611A44C7C56BF3B19308C7344ECF74CFC51ADBD6
0B4CC365B29EA2F4594B6E4135758AAEC999AA5917A5F51E22F31A3020528B25
A251FBA395E4760547CA4A07EC8D03B6C0594E348CD00372D5F1F4D4AC5B2707
3C16AA8B80A61DF25527D9F730B1855DAB77A983118E236AF7253968647B83EF
5B459D8A3B24AA15B2D2BAB2A93F481037964BBCDE241983B0D4BF3EAE36ACDF
1C7D5C65ED6EFCBB887D8F999D41E547585243A37E9C40B98C30AC73912F0958
C2F689B13DF2D7F68297CD6EDB5C10DE964A8E6F94424263E5C7C571EC7CB0FA
0CA4525083C52DDB8358F0575278475713BC9C8F5865B057F758EE67196B86C7
70AE6A6FC053205C111BF2C07680D1A9AD9007EB369B2A6B80A28E14C4038677
7DD756390D2674F352482FA1437902FFA06E1A60A26CED51F1B8AAC17D417532
8E0E6E8E605095672AFE32D091CD034AC704BB734038E34C9DB624F3980B753C
BE7EF196BA3201D6F2499F8F92A52E6AAF677B6E0088B5786E70D3D1377BB5BC
C8DB8FD1FA6DB83CBE37DE8B956090BFCEAA4DD7CBC20E23477F8E98A231D3A4
4BC29751CB1B2D860517532C245D9611D6A9B976ED0551894933FE78095AFD28
A078885043E4F830DFDDD582F3F53A695FE9FC44EE3FBBBB321F4A61F5BC2918
441A86FAD317D469F44BA6B44D40B1CB8CB60C0DB64F4CCBE09A67722DB25014
F7C0EF51C36B43FAFDBBA1969703CE9582D9B19235B8B288FAC45368F6BBB505
3ACC459A90321E1A1C91324E0DAD8726BBD7C4D33C1151214C2610D3993603E6
EA87D6BFF3DBC93516338CB117EB72DD4F6B4CB9EB614E23F7D328D3A38636E1
FAC744DE320B8B122D39F100C99D95A2324A3AE672290E29A1B1EED0B300A47C
041B52A0FAED2A6CB461A9D43E99481B90A4BA405AA0188959D96F399FCB8E78
17649012946227CEE29ECE62D3E940621D84F130C37820BAB43D4BFF0291CEBB
DDFB529780EFE743521D1CA9F09FDEEC439495E6B92C58BCCF98F8D73B69B5A2
50033CEDF8DF389AF363A8D67761C0F2A1DD706974D2A948E52227F67980C92F
C469CC030BC1A6ABA95172DBEF053374D01E8E6D964A6CD0D6EE00630EAD7137
A71E9FC635A97C5A2C93EB5B54B5FD26EF7D426640589F5C11B330B4C94657C5
279043B23AEF6DB43045823E30DAB29449B42D35388C5D8C2635D00206373CBF
3A088C74C194CB2CA47D3D2D1E1FEDA48B197B121CFA00032C1C46029EB7F000
DA9CB220AAE72FD4653F41FCC2EA5E79E1781A9E1FDAD12E2FE4AC2173B73E7D
30F6AF4BDF1543BBB1D0D9F5CE5A949CE42A6AC05B250302BE7CC4FD908EF361
9736ADAC8B11FFFDCE7F3FE6F3845521A115ED36DF0CF09FC6260E5651091536
FFAC43F0D3E5D466E8226C7EC9B0B2C42BBE5A01A4D014B8466A8D22219481E6
454A486BE1097AB91FD2CB5FD50817B81EEDEF8A11C702EC301368FE4EAFF1CE
03839C340D8C02C98B7E760A3DD64BBCF437DB53D1C47CA3105049D278C4CC00
FBB14C0DCAA264E9448988C136653A30D77F9FB4962E06D983C01825CD9C9559
0F26B6935D4D9781A60766DE10AB158618CFB2FC62B16BF9349B86F3CB13A98F
648FF65FA074AD2500BD03763F5608ACAB6A001374FE99A300E041D441ADF5FA
C106B67E74C28D0283D1FAF55AA924AAD955C7526A993B0F3C82BA6D5F35AB1C
D114682C44276B76C91E92E6AC20CAF799D2402A16B2DA0059097ED2E47A9725
EC763E32D2E74E99A08C36AF8E5864D8C886E7B8BB1D5FD15C159B840A418074
615F73776D77912CFC2812EB5A14D3D81053D9DDDB18821F92375622B3967CDD
77B44844915EE2EF025FDAEE59C1C033E1FB1F743CA205A0CC56AEF7091E907F
5615DF52524F9CF3375637C440436D22B11B8DB01F63F4F257409816311DB5E3
BB4BB0A4C81748D360EEF28D140EF9AF38DC6618C5B2CE27AEFD1FE7AAA64CA5
048460E12E194490A4C13B5AD027226931620828B99F77305B3AAA579592AED5
D6F05FF164B01B822780D96A595E5189A650690EC1802D41AC83BDF394274671
B6DA35508E5CF0EBB0DA86B3581FEDB1128B50C1A0C60F7542550BB439428906
E368EEDB75C1B29DDA38C6BFABD3FCFF378663D66AA743F9DE2A18520919F961
24E666A4614F00F3428FCE6C7D2E3451EF0E7D1E0F1D3091B37F4FB223E2BA5B
B0E57C04BDFEC15103EA47597FCC2A7AD2D7F9612ED8DEB0B4E237F919152F8D
9E86229BFCBB784DB2DCBC4AB72831F3CDE6728C071FC3FCD30E5811F3E5B8FD
5E0B08AD851A31D9BFD710DA64BE553250AF41749C9790693C74A698EFC6A015
BB3CDCF576A0689E9EA289FFAB96AD0636739049F78BE5C0AEEC0C4BAE249BD5
295A90F331BFB96FE305B9AAE7ACB3F0543813828CEB7BC0E850A95333418619
419AD0275CA05E1EC09B97FD98014544491E52865C4E88203D4EFE0E85508446
D21DD84AE75C05893B870D4D6E8DE5D7DAF5518E3E835894E9BC6AB4D041902F
EF9DEE29AFAD535876DD15C315886DFB61E135B4FA038CFACCA0CD98EB6581A5
0B6A672503A45DC4A1907826D98FCBA579EE2A7FCB0C9F24465DD39A710BE21E
E92FA7DDBEBB2AEBED9AE61AFC1AF1B664E9BBAB13EEEB40C3FED31E06372CDA
1C65BDD9097F2C8D8C39EB6D342EA9E3EDD2C9C644CC5BF05C0F7D1CFD7389D2
67E9B5AE090C2E12AD5CE8840CEC82A0CB7D46F90924B9FD409909E8708B0E28
1843FD50709F615EC830A4325072F4E38FA4D9C8D4305C56B6562A13A5D8FA62
77DE9A3DECD483E00BB9D0279C92C3926F8802E58D0AB34760F8D136DB14CE10
E042B26C218BCB42366A781D86A0C3D19919429E44EED60C9350FFDEDD5CD677
139D6416B5E4B5848BD7FE5D3F3E547AB07E9424690EC9A5EDB254704F9165B1
EF14DA7FC108ECD290F44490DB9C708B0954CABAB9BFDDE8067A3F294DF8E979
2F2984F532F14E139DAAD1AC10B7349186CDC274F5CFB30CF083545173C9C9FE
F135A9CC96695DFEB7BCC8D0C7369D870BB9976CC897466D51A72D727146623E
1DDB6DD45C1F88BBB4234F335AEF967585E6A22648D8CEFB6B76FA1AA1135714
F97B739EF23FAF2766D72A304BDA21FF1D072E782BA21CC042E621E0F6927D22
3D5752B69C930053655C34FC46979446834D001BFCAB1CFA961EE73F57EB591B
D155181FED2B7B34262CD2F43A07B88EADB32E7C099833E00DE4CCF34293019A
B7EF59606354AD4A6B726C02176DF5B9AD483E7405DA63B05F451A01A993B664
1F7044AAF6997A01D7335A08B8BE47F16C096125C661DF1282BA2644E1BD70C1
E35DA773D287D6941BAA470563F476A14CEBEB857C068DC5EFCAC44C25A3D185
E483A0A0BF7A7EEBC0694A7AAFC80506B00336285F6FCEA2C3B2713CC34AAE72
411A05FDB24365FB0DDBFBE137FA7565C8DEFB1D9F40700240BC165BB7461970
24694C64C8DDA0974D7B8A9104DFABE61F4165003FE0BF9544154C218854BF1E
7E171BE67C38AAC6952E4040761A8FB358F5D55533651D791F5D8482F794D6F0
B4A3207812AB6A1C609C8D47E2B2CD348F0DCAA1E650E4EFD80AD24605A9B6C4
9348FBDF8DAEB6555918C71679658620C86641448175F7A30868B467BF7DF146
42421265F2D5E1C843F00D43F849713BF55D7609511EAC7B9273A0137ADA6FDF
D1CA44E6155688F1F20901EC87FB8A49B81F8829EA3845E0A4133DD0378110B4
21AB29DC563808EBD6533C709098035AEDBBAEA7CA9443040F8C180C6D51ED5B
06D03E9679987C5917FE4B01A623E7943D26FE078F52AB6129770274B0A54583
3BD6986DDF098E443802AA6D9F56CBD6D1C649691C3E5A6DD38ACE1E53ED53EC
EAEB89B7792E8CF7A0413B9AF2F3B948EAAE22DD8340656D93D61EF3F8DAD463
E4C9A8E628FB695AE74DFBB08AE5A4C9FA9D30CC55384267425303B80674F8F3
BEFB647BD3E977AC97BDCA201089E8394F95F17AFA309E0CBC1070A024D69B78
CC1D73F8BC5F26AD901614682E0D743143A3D98557752B889A8010DE1F1D17CA
FDE159E0EA76812390EF7DBEA50DFACCBF9BBB924D7F3DE5AE713CC37BD96277
0F37D4A5F465A92845A304A65AD994C2B31CC6F6C40675808D37510FF1A39A95
49E7E411C1E1EADA0EE7FB44147531E5A25555EF5E6ED7D95728286CA4F69060
C9BF7BB9A75976AEC88F893A69874A3F0293D687F8117DA25C0DE65C3C4ED6D9
DB299B9AA3BDBC5FEA372EC5A385C6E286A9F17DF31FBBF267514344C1AD8402
E71211788A1BCB560C5ADED027701ADC14FCACB1A666A5BBEC4DF7F4D2D22039
CE379BBDCF532F13010889FE59E50E677BDCDD131B92433771D0BF879D16EC15
34FC5FFAE11212F993C8962C812057FACE8E609FFDC2C3F2CD8681B8E7BDFAA9
14620593130C72963B10D5C4B19B9AD0AB4EA03DB12CE38B87580F899959A300
0F649575455415B05E6963A4FA2E41842C07B475C7BE7DD6D130248E8235BA1E
EC1B49E608C5EE2A22D2872009F8FC63B1BB851608EBE7BF82DE680F6924BBB9
4027FDCE0822FF30241DBDDD37DD43FB4027DD39AA60F8479B7CBDD92563CBCA
6C2C6B50905C922918000352B2CB4C6D8BA140B2CA30F4D80D72E195C7935B39
2722566FD5D4D7FDDDF1CEACFE7702897152EDCDD9C72073F273A4F4C9B5586F
FE8A1B0A3766E92A79516C2AC37C1805286596FDE8EB0520FFFABB84BCE97471
6428D00EE57AE742531892BB3AAC186940A677701401EB4D647A9FAD8D2C76FB
F6826DE88764FE7439BE4FBFBBD4E18794B570C7B462C654AF5FB352854792C3
AFBACD886D57BBC95995799B528EB0A09D409CA87549CA07417E5EF3C41E23B7
70F5B44F5533E04FB4EB99E3FFA8668A139C73544288AEDF853C4B6AF02851DF
4D7C827327345EE1C478C774561911BC1D3FE44C2EDA6D7B9B5610E99EE29707
EBE512A28BF6C0756F62EB9030C7EDE9848FF6156B914FC6D51A36351CFA99DB
19267CE6484AF6EECDD46D9150B09D4EE490149A800CB4C0EA9427CC91DEF8E6
1760E4CC4A71CE34FB84E69A7D4A0B787924720290F7E375E2D3B8A0473D9EDB
DABBF0AACA0ADC2FF2328F7D5C7BC28B9F1C3F5C60FD2930A58B99CBD648D8B7
FDE346285FA3BEA661D6922E038507878C9029DA8413018598F79D4DE96F37F1
8BC1D6B638D132A8C4562DEAC3EFF381B4801B46FB63EF56AC2F8B119123E213
615F5C3DB5232036BC9F876A7730D984FBAF9B1536E72BA8FD823AB6D9C24CA4
B282C8E264AF16F66285778C3E2CD4BB631D9C72CF854E7E85B8B2BB5EDBFF69
B57A6554BD70E5361848DF8FE8E50DF6856F1D10C8EE6ECFC681CC39BF34CC4B
D0C53F5B9CC9E1F2EFA0D6574E8217A7D2BBE4184493FC6CD54BDA8F3EB84C32
883A8035B81C6191E2BF8CAE319A3E8EB67B33BBC7FF58AE1CD0F2D132F6DF9F
824EE4C20B1642B77D12836425FA0B8C5E4C3B13B5A0A44911F452C3383BF819
478D7050113804083192B9041EEB8A19A3607C34D2FBE4393FDB13FC3B396EFA
687DA046B496D11987929C4B694FC682088F5C1CB471D9B9B6F3F51341308ED6
D4AAAEADE13A6077CB637F617DA8ED1557A30E9B207BB438598265DFE3111E1D
1826E11DE8CDDDB17DB2FE123382320756156ACD8F427E3687B32BE3388478CC
DD5814AD3DF79F7A39427A74D7B5E4C981DB49C5EB8D4636B3EEDFEC7B4BF051
591E0626BAED7D93D1E7538098DE0F035EF43360E849EC81C6D1E20D257BB664
302EF23086E3B533A0D740FC3F5A418D2643A9DB38681252FCA4A6443E7579E2
F0B5F37758FBFA88369D09B166752B2BCD5508C5F4C9EDF99DDC605997681B03
EF8E7DC70BF2F2C0047602E7D57FA4588C68111E3120000834F31E53D51C9628
465C8B54A63AE2EE076A49A29126CEE6645833073C205DCD9B96AD58B0946C6E
11EADC5E33E20D6995D97B207AAADF134DE881A7D3E38598A1AFFD9ACC653471
3814A67AB0699250AD3E136F1FDEAA3482339446715B76EEBF53FF8F503A7EAD
CF5EA73EABB9D59049B95DA04FFEA2884D315F5655C91B961AED9382E1314AF8
EFEA168F36C2CC4C41866B0093A78475FA18A11C8FE5D6E3F7826B636922E4F6
848A23864E553A210819F660022F0BF9A7C2610B4149A5E0985E565F367C2DD3
1C0A36823DC364060DB336139D0743ABC7BD6923A2E2D8B405DC61C25B903313
697FDA85250BDDE99E7767093513F333BAC3131DDAD2C761F444122610FC4127
A96D834A2D0670AB8068A9224DBBDABC8BB3E6F5817FEFB6A9645CCA04C286B8
47E53DCCBECF96B048A43173A8BA72A620D25A3A3C6F9533E2007432A6D79718
261DEEFFFDD234A21FD81C60A2DFD883DC496EB267545DAE84A4B76A65DD7F4C
2FC1BCDB7D890CE92270059D2267FE20CD51190F2FE3D0BC8AEB38935B314504
3EBD3CCF93B8F4DF389AF363A8D67761C0F2A1DD706BD12210CF75DA4C7AC443
7381828655204767EC0675264154B2337B319BD148F82797630867AC626BEAF7
21C36FA673DDEF25457C95F1630BB899B09DF1E30215BCA408293AD141E65721
F384CA12B6D41E8CE89D32138E26792C220BA49C853CBFC1C16428A20A42A63E
A253B964356B262080394DE1A4E8C260E59EF4B244CA58056E53F69B1CFDCB72
3D56BFC9D8253D20088D1BEFA38DFC7C83AB7E808487A9993A4BFDD5B3BA6931
437804B891084DF61B766E07A2FD92799E39C03FB8219D823716FB5F2A2D6D8E
C2BB56A69FD69DE4513ADB9FE0041E7E81C909A13BBF238C0C4549DFB0AC519D
E36B7F9F0870F38AA4DD3F4DC44F3F4D9B7F37A36A44180D879EF97B5705BED3
10DD87E3187C0BE1A64CA337B7D1E585108972A98F61AA416CEF86EB937CA56D
494F7D403806BCDD516465FE355B1BA190E9598324D4264B32555423B5E0C970
E31077A543DE555534E1BC46F7B947784E7034070E228B1095657EA880C4956B
F9F76F93CF20C262235138ED58A63EC8A7D32EA287FCBD67994D589C290AABAD
111D866EF25BE7AA909FFDD31DB19CDB1CFFBC4EFFAFE0660FF19267358C0384
B0294B7788E5075A2B39321A1CE74E8CB2D9CD77EB6DE0154777DC8C1356CE76
9555E6AFF35CA1B3967EFA01C4A6A78E59C56CE37E144582777946A8F4EF5ACD
55D679AEF5FE9DE77B27D19B1A06180CE092968D293B7F333F1891915EBA24B1
A968EB32F4C709E562DF10BA6196EDA348639FC3A0B479A3E6D1D9E3E1A66B8F
999268F0EAE6D3A03547EEBE6FBC51D8DFC71FC9E98661DFC41060D7440B63D0
B37CF366B627B992C9E33775946819F8F8E6F082C7DDAE3704E8ECC9A548E89D
8D50A3776F221A2E8AB1C9294E225FB10538F5EB74033ACFE7CCBD4142233A58
F86E367B195713C9511A3AD6CE4C20E2ADCC38E6E23E362A2B10C44A60DDC565
EBAC382B6E657A807F670D51D7F882167197CB4ECD37751466B0F02A6373CD7C
1227AF18C40FCCBA3D5E4D403B9C00A983BA989EF86D5C5A1043CBF3E4C8BBE2
482E8F141F1CF8AAC8943C973FA5264B6277B4D401A2D66F80014EA3861089AC
8F16222481F720351205AFFE1EAB195E947D18B6626BF640562AA3AA092FAA20
A211D4684B7532789CFC29BC48F0A621C3052E53560BB36A3C4D1025B630C12D
4DFED870186012B6030FC6853E7D2E69911E9F039C1267B2FDFB9E871D1F23E9
FE689810A8FB12BBF455C6DAFA6AC2060D47935D49902A35FE312A2CC3B826CF
C36343F19E289DF5978190FAADDAA0521E819EB6177E69B20DAF0226B7D8189A
B5A975E5E7A9B35924DE87019875579EFCE712EB0B9D40881F20F15FC88947F2
259C9AC2FCCC891AF6C88AAEC1A55A459D3F57504048C0F21E022D5E4E718FC2
C74D71B86C3109AFAEC18F1F3E3A25A9CBA3A0F8E5789F7B233EFAA28355517D
644A31D46C6C0132D296378FFBFA7D93C0C3973E981C09BF60BEED788A9ADAEA
35F9B7A7F749D18D595F89376DE471BA668667834194A1400C1D3743456A805A
BCA4AF78989A62A0B6ADE20B16F952A8B3E3D4A31A381137872DFAF2F3A85977
2B7C2348D031D5556EAFE397ACC1B898D9D47A79FBC5344878436F05BE2C5BEF
083F6D0038092D309C213D70F8D476728119E9ACEBAAD81311765583564A44AE
56F46392DC6E35CA7EF4D761CF20D1BDD9B9180621FC071CD84A3A3ADF88149D
2F66F5579AD76AD7702B7C21F5F8B72FB3875C001E76EBE8BE9C0D76E2F2ED8A
06043FB0D175888F1B733D262FB309A12EEB9997550002B275DCB1DFCF64C1BD
E8D1A6ADC0AFC088A138F6EFAF5E66C20A444749573EC5E6ACB22563A9933548
B7DD2CCBA487DD73C8F731943E0F268FA3FE78059077CED5E9EC069458DFC33B
5D34173E3E9D75021EB334EF140B2B35726427CF1F2639B16C99203C9403AA0F
1644A4F0F2888EBB407E92769952925BBE3FB49851973828B8BEF905E8FA521F
1AB86A820C3B1B8960CA31C5E10BBE2AAAF5FEC84D29FD2B297DFE62D12951E6
7E0D9B19259C5E8743F566EDAB756423433A1802B78A0186B286AAC2CC7932F0
17D6ED3ECDBDF1D7A25E9CD97E0EA695765172D5C8326AC9DAC1FCAB4E414ACA
BA27E833A471ED6E65EF6647DAF6C8E45629D1042BCF0F2A3E49CD48C57FB6B4
20D7C12612E1B01DBC97F61E90A3E0CB9D71091A44B8A33EA33C0261A14CF35A
06A1FE895C7ACCD96ABB6B56E1F3DDAAD947AC94C3A46F131B9AEA50FF382BE8
1895323E2ACFE54AC457D222E07BDC5FD1FF5396CBD9D7ED5799E53CC3595A0B
86A05F36E65059D0219F7E1037D75C23347A4C0249E2008F0A98AC16005CC746
D0A9EE690057725918DBC5EAA17E79A2B6287E1BB6A3EBA3B57A96E413AADF79
7F65CD594FF7148E5ED8CA8A4C9A854BD22820CA42F34A36E097EF2094809AB7
5715DD54A7C6339642CA970357FBA289F6043C0D29730DB3AF32E8D6ED83CB80
975E2059FE484187590A132E2CDB9F75B17B2F16E43F5C474B4F4422ECC5F69C
4B6E1D0B583CE268426965F8F487BEE65F053935C4A3E1DBDBB2D5DB325C6B28
8EDF8D5AE7C94D63E4E0EEA94E8CBC24504CA18448D6298026C4019750EEAB4B
1F896E0360B927C089DE309045A92FADA3CF8F17C8B981A6895841D6986DDF09
8E4259AF585933C2174D0E96C3CC53309E90A9BCB68569A7BF92E659212CEDD9
3B6381F319AA50F051AC1FF11C2B17E8D5E1B958575498D6DD4A99817BFE3F08
82B3F9E68748A4628EC390C35A636151688C19C690B20B6B83225586BC18C5A1
4E3C0BA25435E1E46DBAF38F0A1C3343437475DFF9D449DB71105122A7F5E552
5EDCB162C7FDFA7F916A933BBEACF5F84E025334A0B671378BC393A6640D1BD2
553EC9C2A535EE0FA606F006B034D0EF5BA145A4B6C947236563F4EA07F80A4C
94CFC3D6DAD9120C7224C2C6ECED524A95C0CF6D8F355A8D9CCB976C65FC3D1A
C2155B7FA473F27E9B4E461ED59DBDBCC87A394A0FEA6707EBC1FD7D9A624AF7
F1B65A9C2E0782DD185A557EBC70EFC78E4A6BC9A87CCC732241B78FBD2A36C8
3DEA5FB04E17712554E772DE956ACE0CA995B7BE5DE65595EA71E4B878EDA120
BDE573A8E3CA36B38753B6939100BDA273018CD884F8C09A5D8B2C0CDE22C6BF
6EC519ADBED96E0CEC2882471D4198557AC95FFABB31D8F27AE69880C75E1040
F69D90D0697D7858C28A24FAE3C7C8E1ADF63DFE9E3BE2B2ABD660D2B06BF72B
2F8E2E05CAC73B6FB37C97E610E2D66A374F9D8102AA6EC7F05B65B3AF62856B
EC4995F53EB126E94315E1CCFDAD6F7A6B8A26DB42B2C54E6F4259B3179FBFA7
A81FA9BEE84A91DA057C832E564392765BEE10DFF421166C442427956ACC7639
3F477D35837398250FCF19752E840080E3B3FC12C7263446E657E5E6FA7626DF
EECAF8FED97E6C23E626B3B40748574A0A76C929E56D70779E6932874D8CC384
97B3D0F0A77E11CDBC02F158FC5E78E55629228EC140AFB7A3297E70F512E760
0B679BF475D7C0E6DF18F9B59B09FEED89B3D4966FB418D6F64E374E0ED96273
6A237031E61B58E0F0721BC624A6DB1B9E0DB13DF1000F36D15D4289EB41C8C9
DADF89F658AE0F68AE093CF80AB3AAD269F4CD60147C6D2C1E13D2E6E0C4B256
A44BA1C8623B9B70847F78062708C6D88752B3283C241524AFA38D290BD895D0
6A1C8FFB894BD68AD0BB35BF36A9CBBBDAC2DAA3D7A2E30D6AB1EECF7EF22863
57486B427F11FD99EE2EB7F0959FFA480FF4A68E0D1E2F9E8817FB8E1EF293D5
D7FCC289C1861193FED983CAAA9DC7A08708A3D6B78B09A8E506B849C9B8C6AC
D8B96348FC955008815F01C1709E50E9C589BBF1CBF8880850258B36AA134B12
B7350E4223F95825A1B5F92685589F36F15BA84639C5C1AAB0B5DE75DD427C47
DF2E86E9D5E3D3027547F58434677237C694CE691C8FBF4E59F6667F24266A10
343105E947584617685896EEAEC279370BE7CE7A1FC93A9535C3A393F6748DDD
165974A8C447AFEB06E4A4AAE9D907414E381A2CBB80CED0F3942BCABB9681E3
60F7E39753FA55DBA0981731AFD8088DB02C5028799747EF4B189914E7BE15A7
F8F229A82CF09948A472BEB42D93A8B6B7EBC757A68357745F675B625DB0C0E0
EEB02B7AFED58B9A38ABEDB051C4F8D647A01DD653C10FEEFFE1226B773DB1B8
F8CB66CC75F66597667E605BC641F05F7E06B6F67736194BD5C344A9FFD7CC91
4728F9D30C715114423D1B004ADF1427E6C0F5AE2FE329B2091E7DE3ADA10AB0
A17851972FB083250907BA612F4EB833F30CDFFDE0232AF3C4A05E73C8D4C9A3
5C96375DB94FE91E079DCBAE6DDFAA83397EA0867C9F04F156053EA3D7E84CC3
FE915E206DC0006BF19D8EF0C8C326FE426A768678819B070C50CAB47B191738
816B644D77648C799EADEB641E16539396C0A3D63AB7D27CC05C7690741C8337
F3CF4BBE2B76F03AF839F7B3F64411CA142BC580D26A0B642859F3C692932FD6
EA726D6D88E100DF2695D516A94163E286B22D4E3631F96752FBB00F384FBA14
9FA0021CACE613D3DE8924475F94D55DA454D0EB81EFDB44E6568EF1704E6CA6
0D1774E48FACA216E57B04A669DAE36B3010FDC551ACB26F9FD17920056C5679
5EDCE10321CFA3B01E76A446B2DC63C139FDCEBE615A70822DE5A6EC4407A3F3
5CD21D48016E8554B9B288B52CFD7382CD184FE43D8D0B8D1E0D15343A6F844D
849030BE9C3E484CCE6E4537355F1CC9E03F8AD6236FBE589423B942DFF2E3DA
0EE7FB44147531E5A25555EF5E69E959CC377E155FB2623C732933783D54D258
822764CF60D44B611750C6D43D433449328FCDD63DDB8E875D4CBDE5BC1FB3E8
FD558ACB9F8869029925BAD6B32C5EA6A2462205027F88FDCEB0F9541DE23BD5
5DE7E5C756EA15D385A59E7CFC37F54C0F5E53BBF5F1D1A3FC22C747D28249F5
31B146D3D081B9EFDDBC58907EF4045DB5FCF569CA2F96D2E509181FC39871EC
8653EFB4B9C8B9A0EBDE68BFEA8164EB837F213701705929B128A584ABAF4492
D247A1D5231D5C3C48181C9CBEE7AFF3000A002ACE02FFAB67E3CF8E43D4993F
E671C99B2F2BE6692EEB2A093EBA52E61312F26BD712491995318B43DBFE4D0C
C8085AE23E6F3A0CE3767FB3E937D80D4A9789E83139B2353403CE8211CA2781
AFA556B61F60C1CF7119744A4433C9131F85632F6B316D7A0A7AC7FCCF64AC5B
CC7FF645BA55E4B1A46A61EEDD111C442A7CF3DA6293A77062334AF1D34678C9
7BB968AF4DBE3C28B47C3625AAE4CEA6C3F956DD90ACD575C170EE2F0D03EC87
34796994309FB83A60EC22BC451476B2EE53252AF7805D5D9ADAED3AD5CB3F07
FE63DFA87C42ACA14ED6A46438B2DD9C5ED8F98E41616BA8FA73B8C7D3C610C2
900C6A49DB7F48D70E9963CC3A9EA7C866F22045C6C6577EA6EB4189E8ACFF91
A368FD4D6D3F985C07AD665B4173C99F8A51D970B069824C1EBF4A685076CD53
38C96E24D8C4D4D627E14DDF88719234D18CE08FA542EC7EA0DD0415997105ED
BF2A71B13808B25AF98791191B962D632A16DCBAF16254AC2E574D9798945579
2D880A95285622E8664EBFA44D54979C5CDAA616FD831AA662D47F36BFBAC09C
A9962401AAC4AD7497F7B5F2F6E4C580ADD685C2AB9D2DA969DFC15CC76E4FB7
BC2C470BBBD19340833233EA063CA246FE2DC3A9870B7F04B845C7A197428482
D425B5BD086A6DB50148987D87357EB83569C4C0D45AE4EB6F62C591AF2C4237
619F4F31EEAA0D0BC244DE3D952A6763841D6D5207A8BDB9FF4070C980D52376
A3E651D849B7B3BFDC1BCDCD4401A8012D3C08F3AA38FC9743F598E582C28BCE
DD6C57F00BE89CE410D469A7807796D3E3502CFB486A56AE811CDA7DEB0179BE
BC76A374FD7E7907FE63B0C712FEBD78FC8238687981A92828346D24D5FBE889
60BD66C8CB334D0824C5E83AD1B8F73F3ED50E28C9DE835C4D31D3DB0BCE113A
6A70C65B04BF52E36AA1DFB91FE62A193F3DF2386D1AF6D24770B96572021CB0
9843818ACE3750F5DC4A4776D464A72D3548C5EA96408C1008C268C635704A93
491A61ADF483FAB194251B3B1426C9F392F2DC54827C9D55471A2E1F1DA0E40E
78DDAB0D4645AE226A0F1CA683490A0D9B8A1559FC277B01FEE72E8E658EE9C1
3C6350F14A9209DE8A4909FC149534D4F442656553C296724A240ECA4AE83015
E76D4DD53CAF39ED63CF34CAD89A52E46E15B4752D16DA5A893102A102D24EFA
B4FBB152028059A8909845C2A0BDE7537C450A038E948F7C4A4D314997390E73
ED5D9FFC367708C2BAF67C1A51C1273293B4DAF726DBE0EE4C50A4E2691DEBFD
E89EF32672B72A17DD14F024713B8F3A5B70369533EF7A354C7D6434EF90F436
CB4C096DC552DE3EED3C9B1CF54831588D2E7916532F48977A7462B74FC7582F
0927DAABC7F76595FC2E4426C2B5993333227904D8D26AD07D866EAC1E5B55BB
1251BC4D0556B4E46A3FC621509B9F1AEC8F6AC22DD822E6ADA4FBC6B7C24181
70CF2B8057D55EA087856E1D57F7F1DC2F3F8FB20B3809BDA319419DE5105AEB
4EED77D407CE511A8D1D729494AED455C93DABCEB8DF4FB3EA2C40AE2815C366
9FE1D4646DDD116B5D08E759E1487693BE05736CA382BEA56E3EF92C743674EA
0A63815B9021C9F6F39C6FABA7F3DD0CDE7998214B1111C7164E46ABA3D3737A
42F92390E6A297412DB47516FA152620B3F17A86AECAA35C48BB64B4B9DE4976
D3C5AC4EFC3A1D8DB7E6EA57688C97CD7C7C99DBAC4A83514A162481D6B9B76F
3695B0B012706DD96634D833C6DDF70AEC9E2780617C38266EBF1A36DD427A3E
2B0D7959568E26D9D078A09514B401BA385B8325EC1DE5F0D7F3A9ABB5AD0567
AC878EC44A72154AB4800901D132230D6C539D9956444E02C0ED240270398288
706F7D9513F1BBF8A7B602B2EE7E2B8C468B7270922AE367084308F32BF97856
4357C31F9C1A8A64C98FAB5F7AC972977070C63EE4177E3F3D2AFF386AE5CA28
BB9025796FA97B63F4B43B193A4AF97E1E183E53D96F591B548B049CCD0F29EB
9AB404DA4CC237483CD57F37FE6C3D8E9120E103844D52478F6545177D6B1C7C
E54AD72757E95F7B76DB5CF1E6077E98045C3E7059F3050D9A111C6FCD1F657F
898F5DCB306B9562DA4BC2330CC07D582BF9AF52119358D42265877268828875
8A3AB3321C9FE1D25F08CBCC145975B2DA56F41806B7C3D231690F7C8913C7A3
CECAE07AB541E85B3BE26E884FD1C519E63BAB119D174083F0672B404B880F42
F3E62EC84725604B266B887BBAF00393CB486780FF1EE62ACC3C660DBC68217E
EE6DE71F42E609EF5766F00C26320C77DA882DBB81EAE547713D0F7BA517800E
B07D6C5692156BC8845DED082F6CB1E67A8C036C5ED6740D79C03800693DF0F3
2F93AAE77C8FC61B4FE27524BC50D349A552752D48BCC68DFF3DBADD06488328
477232281DCCDA8FEB4653AAC9C7FB106DF362C15FB991583690AEABEB735103
551007B513A48F7BED0AC75991BC3A8D7B194D57E9C59E27689CF52344D48B02
0560A1B74564A5513E8A1B2F3E7EF8825D53523C335E8773F4E201109FE800D2
3D9500A9F983A3C2BDC1818B1B135444276DFFF44152AE9978B0B510D667DC85
D022C9DDBF4991E4BA2AC5D42F6AB08C51234A87D8D42B50E05137EDF3B69219
C50FA88819131F36463A9D02F98221D897052BED6354EDF507DEA928003CFFF2
2CB3EE03841E657F3716379DCBE5D9526FD1038ABE50972818BF8C80C682AE70
C683199B7647325D295528EB7B8F59F0FAFD11396937DD289E60651AE8306747
EDE9DDF178F2F8DF0DA3FFC26DBAC23F34FBF72141059A468B6257E5748001F2
FD80D8612B8C468B7270922AE367084308F4DEE9A7870DC1B0CEB57EAC4D8D75
4D47D8956A2908A9BA7C5CF316D8688325E8CAA1C0AD0FE8DF98C6278F586CD9
270154ADBFFF20814A7405408504E26F6240554BD98251E284C950A2329B8371
CAC8CE84E14B44185A17F75D50AAB563750DB7EE142C2399B107DB3830F07F32
EA637775BCC1B2CAB0C51510D917F4EF01782DD1D4D1EE1920C4DD2CDAB01816
D466D9D1038E882F05C95B3D0973ED5734C4C3906250C3B0C3EC1F7383D31D62
E5F876F3BDFA26D24C4FCC95694DC921AE491037C19D1086CA4417FD2A9DD1D7
C6BD029122F7C1B96F0EAAB791D69DEE9BD4A822DC3F087B3E2A2915E04548D6
04308E8F832434FA4DC081442B2266DF8B9BAE74837D54AB01CD2596F52867C6
C985BF2DA5AE17C56E64998CBEA5DA569167234A9788670EE2465F95B83F8F0C
F61F3762966A8859A162869701D8CB9C39E511C4C730498455FED52EAD7E0CBB
9E031AC71BA3904361070A5331C55EB5D0DB70D62676AB4030182A0D5055564E
DB2173F7C66FAA3279755303E8785BC76F3360C355698E30735924ABF466A222
8AC8D2C0732A013ED310D6FA933A1742F55AB169A312C95C6F212F904CD6D83E
FD62976E62327DA2F81403308888DE0B5E89DC62CB398B021CFF579317BEA015
6E63AE071B3E67F00029F54AC12AF2742D63A4E89D1838A585862FECBC653F0B
4C250155AAF2CBE5AEAA3AE49DF09560FDA30192E67A8EE15EB35398B1DB515D
06EA0E3F61D8DC3787E0913F2B9A920ACDEC7E95F3C14F12BD4707FAB8572443
E10EA69A27688B0DC75E790B8C3BF5FAA2C6D43AD9C0C83854D45F3E8C5168CA
BBE0117470E1C548CB681B4F0CFE0C808A6B7AD79A5D777EC2204995E836833B
9534EE4F2DFD81540B0F87700186B4E9F7FB0BB25BB13DA972BF1F211004ACE6
267F35500897F21C1A73262F91893D3FB90959F074A0D44FB3B5AB62A56FC5AB
99A90A9500ECE26C5AFFB1720621DDB1EA6ED1891A2DB20B0C808B1231FD9A2F
FDFA1B8952B004E8E5F1500D94C4732241B78FBD2A36C83DEA5FB04E14E93E68
32B4D71A1BC7C2AF7EFEF9B9024CF8A72E6C35D743F19E517A314D5C972D3039
05FD3A1CA96334384C71B9407FDE0D08314B59FEF6F3AB2DB73E296CE5DB4AAF
D53E6EEA1EC1504C10ACFF14F2559DAF8ABA95E3FC4E5E8BCB2BA49C368CD05D
9E3CBE1748E1329F2A60B9C23726113ACEAE5A6CCB704B66672FA0912C0763E5
2E57AF48D0417903216C935A67EA70BF2A427A048A89B922F5D17512BE8ACF3E
C5428C47AE870D8096D2855C1D366F07CFF3950EE8288519E8DF021E77A09B47
63A921CF28A4BB318AEB1408D13CF2710FFC0D365BF2DC34E1722408E32CAEEC
F607FE14DBB01D5F186B2FCF79FFA89516E173855ADD5C92A6FBF7B8334BFE73
47C0DB72FAFBBE837B1EDAC16E2D08D3CE3720E27DE553C9CE9750886C822E8E
99CC02A7EB2FDF3C5AB316BA24DA5179166912A8E62A9B0A1D331A6DF16E8547
6CE175A70D1B7E168CDE426C13CF17915840A2D5CA7A33CCBCB040D1223B416C
798F1F5D76EFE43E0EF037A4C04C6B64E5061F5F6F77912CFC2812EB5A14D3D8
1053D9DB60F3AF5770DCC8A33C8645359114E9D719ADC5828C8A08FE98C99C2A
55EFDB97B56BFCD131F5ABD47D7D76D5EAC8195519283EC34756E3B529CA416E
161D4DD32EC8021777792F313FAEA8D93845CD2AA8A1CBCDD07488E5FF4FC5F1
99827EC49370893222868D5F547E6AD9B24A0A08AA00186A7C0EFB5FAA512136
D27A9E876B5BEC2FAB34A277A07A7DB9D055B9B5BCFDF4A396768284C48A6025
6F4E2CF47E1461DB12A5A5B775000998125405D61B296870E7905AEA0B1987CC
685F3DF15838CC491BF88C15D194B7A147B31BA2C881A3AD2C54EC17B8674D22
357A40DEB9ECEA0B4929A6DEDA1B7481AAC68722CD688384D0062ABDDCA82869
341D6965F710A4E177DB005A8A8783F49CF037D26B4DCD48C57FB6B420D7C126
12E1B01DBF24E6902E99E004E0222D6042D8470CF5CB38C3009957809D707330
B27B999C3EFCCF460E8673D519C1C814597F03CA78B376625CB5D87096CFE0E3
24E52ECEE16E00B9A85D8361035EA2AD57459F07BCF51132F38D96E60DC58880
8D52F4085C9D3FC28E9F60011771C03FF78A1622A8A8FC43B261E1B40D5BFEB6
7DD8256ABA9EB54C0F31EA7BFE374D0923A086014F3AC293653F266B625A9DF7
ADD09A57402A6134EACD303237D2A61516C1E1FF0E034D80B2D8860951277F5F
AC47F018BD12A0004BDFF0AC98FB5260D2F71FEEBD09365FAD4FA8A79B5C062C
6CE1FF7C9A7D8F522B2CA316B7FDF16CE4981BDD484B5411CC726976BD200810
8FD2BEB17BDD4718A133690E6269475B5E4B670FA412469514FB01D9A8B9D88B
03341F4D587F6AE88C84FF443BC122E310304907427C229D6B1BB55F93496D24
B80EAF77C4678AAE4B3E1B2B24A8EDC14A31EF962BB5598C1D092F9DB8FF256B
880F0157C7A82E60F8B6731BA48CD3F4A06EFD453E7574D9490729EB4D42B511
C82AE213FB08DE4D7FDBAC3A26C95B1CB5552DFE368C5B5C1BFC366183C318A5
E78C49586F717C5DCB454C2C6188DFD137351B967E2BCC2A707C32C2724177E8
21DFB3ABA3D3529FEF16DEAE8D919C85E2267EBF0F21096E0E0B5A1F4B31AE21
42AF0793A0FC4E93B51158441BA9970D09F798DF8881D59E2A92657A89FEBB74
11F953A2D7FCEBFE9E30CAD29DB8E9EE69C254316CFF25E7A60319C242815801
05AC3D4618DCD2E8B16748ACD968871088C96916978710B8C317D3DBF36CFEC7
2BD6653EC0703E6F34D13D6D04DA8608C3D33CA685CCE2ED435EF6F132564C5E
C6EC425F903AEB022C20B065EA5A71E2048548074BDC4EB26DF41BABEE9BC7B7
B45778DC84A513F352B24E7EE4CFE5D7C6187B119B867189D3E1C9FE0033272A
E1CF34944261BC78E60049489F8D1284359F2BE1B2B8034EF99D0D13AA597940
A10605B67F500983F2611929FDC28A4278CD58E4B5A0C1ACE945F990585122CC
9A41872CF5A637FE2AA29AAA0E3A664DFC62513E0AE050076B69CF2F4852C673
ECC627B63318299A8BBD341E13584F1FFABFAEEA96AB748494E74A1A74A66CC0
A5B1420B7D260A5B19785C8A5D4A41C1D2BC815E140C9B709CE3B76976712AF1
2BE530536300D85A247D369761CAADD79BE3E0C73D943E15E8CE39B4877506BF
6848BD2088A3EF05A4F6FDBF29FA5F02EB3FA7C8FE2375FF06437B04EBD9FFCF
04B34BBB659382B803A0FC6727D2492D71C59F6BAD0458E2756AECFEC16F6966
C8D2EC37F4B025E2709855D4BC7F761A8BEDB8B36AAA642D69A32FE0064C3F1F
1747CB60C340BD338ACD573F96BBBA7720E675BF7899DD76280312AA0240D803
82C22CB250673E396C64B0937A1115D5B62F05A37F0816B9EBB8200F2AB7DE32
1888FB29A5B0927390C4FAD4AB7CFEDCEDAECD0EFEE4497B96A7B858653DC924
2D9370344DE772092C10D6A9C650BDF391F11686911E8FFB7C691A75D32D2DC9
54796D31E9CE57B9736B48B2C8711D6DE38347AED4CF1E9EFB60F1F2DAFAF2D2
63EBD78613937C1E88FDA01F80A9583171E1A19E0FEA3B90B5DF617274684B79
6A3A55ED7C81B805F6AE39E806AD809738068E7878898C64529C16885840D322
12F7CCDA403B3F9339270F0DFFBC5288243F1DB3B9817A290BC1AD9BA889101B
64D933EB0E8BC41368F0233D19A5DAC6B7B5B2ED8677CA694BCFED114A803DA4
9858ABA86891397537FD6232CD2CEAE9BFBB00CEBCFF6456A00C0088ED7E9410
8037F7338ED1443D10BEECBC9D14759637E085554E4C5A9ACC19F96F39B4C3EA
DFE02C4271899345222AFA564453E11C93B0B909FB89340A97B1061417459137
A19BDE965AFDD8B348AE6248D91477537F3B7BC541CED825D57BD0D407F931A7
B0B13477A3B38259236115A247E1DF459B1AFF6DAB3E4DF24558C0FE5B9848FA
2EF6753D9BFDB13E8346327064CE43409A36356264741D8FDA528D8F2909C261
5B5EC0446495BAEE5C2EF91C7D1163454297037866C75EE19F39CB2EF03B7EFB
8836F4A92E4A46623BD090CD1BAB005691B2FC052EE00FAEC71B7D7B3B2731D8
AD3DBF7BC497D241D6413E63A7B3EE3FC0EE9DAE8BD8A96B5299A8EC063088D6
85D7B87EF42BFF86439EF2A864CA407738F4CF23E753D601887D6664E7A39B19
16428ECD94DAF0E41716A7EC60EC6F51B4160BEFEF5B305FDC1DFBF05DAE9FF1
892BB420D2FF9D3F39C6F1533C26670A987238E476BBC2F953CC2F8AB41C46CA
F8A94B5BAE16FA640B20DACCFF7B2D9A7399EF4628F2EF5DE6A668854052ACC3
54B72E61C55827C667EEFE4DE3AFF4FBF2F3C4A46C63EEA590749709E4F339FD
38236A72EB72A5BC67093E575BFBECB46BDB70666F5D2B47BC9F11F28D4F676E
D640866377BF62D05B4EC6FECED2110BFE7ECB4F6E12CCAE676883FD39587727
77AC6D3696EECA4C73B56141994B28615909C9BB4609C7721A8C08367E6B0EAA
9BAEB2F34A1C45DDC9A485A92A6F0A5A7E1AAE66A39573F45C879BE3EB78039A
426A0D395B0A25D64D3734B7194A079CF4DE728327341EBA95E486AEC78F281D
5026D63B28AE277CF58E5ABF60296DCB503F00FA0820038F0C19DEDFEEDD5503
76C6A2923DE2762DAA34A09DBAD5E44430C64D0D2C7EC6A7A9344435B9D25174
5291FE30E4669CDB9C33F7EF2E337F36AAF49A6B71D3607C21A9CAD6092BC107
35AB593F73798F757C1E1F9D487C0062AC50F677ED59DF632408A74C0BB6C5F1
409A682606BAB4CD931871A0663299042725642DD02CF9C17F9C567B09738B32
8F05C1BE8DA8F170C971A65B80E331A1BFBAA8AA046C45A943FCAA5634B43D02
C2D7AF11B1CBCA33DD7B8F1CC47DBA0C39E58058BDDA8F22AC31CCDAB1277396
0C7D668E4E97F6463C53F2D0D835BCCE7879858E92C97109A5117136A0237A66
F0E1E9F691E23431D61C1105E59D3CE234A7A84DBA82D3E0BC0F4F5C8BC91671
5046974122D2AC1726DB4FFA38E55BAF17D1386F9CABFC5043CACEDEA6A859E5
FBB8B8A5B87F4D9463056862983545A63E3E9632D114AE48541DF30706EB1A47
5902A05377457E73FC40780E5DF31DA9C5598CD9C18CF13480BCD24438163893
453F8CF7045335234A87A68F8C3055D4FB9FE3CD26BEE66B027EFD2F78D12ECF
55AB02C9C2240D93A4EFA28245E0CB38DD648A5AEB2B80A8F13AD860A11E3C91
C442B05CAC7E446302B8FEE8128A8CDA3A1D0DA85CF7A13D16F3B66E14793347
7319404B880CAF97D7FB80003F4A7F0DAF2169CE41C011DC0DE64B210D9050DE
8FAB6829F0B4AEC3CD732E440ACBEDDF6496A7D419810C2F119EFB9392BE3C78
47A1FC3C7F97F218F469F310A49793C9FA60D04AF7833FA1BE187F6BEC2CEBC0
6E7DD6781B007DB3A16C47AF21CBDD5E80F3B8084BA7F8070B2980EA9FC39EF7
5678975E2A32C59ABB04796887A628760CA02CAC2F6C90BFC14D20174AB2239A
B94A1AF969C52857ABA870FD7DE970BD61AB155C5E35D87C99AA18E4EA5DFB20
97BAD0F3E014DB7FAAE5414A3CD1AECE0D16413D44BD9910E93D597BF5B3CB51
39DCC51E238DA704D3D6ABEAA33AC687883DDE78D5E55976807A7FB8C5C99EBC
2977D13AF717871AF0E2F3181553D073DD1AFF15BF7360DEF190DCE3DA325C64
2A707E790208436FB290A23EFC943526B54532A39C5A79D0D5E85C13BB505BDD
09C5C8CD4BF052740D92975D07C63883CAC1A546957A9B60225673BDB3459F29
840CCFAD108E95725EC22737937BA11A9DDDC71E5BEDE187E50B99860B8BC5CF
6740BE86AEFD99178FB6B442F967C770EF7D08CE572B9EB950114653744EACF9
F0DF3D93DEA47FA88F87CBC50DA6E525DE325417700A95DFF4F6F7912E8CFDE4
B0EFE56214C412C0470B8C86132286BC8E8963DCAD08A9FE569C7E4E58E0A454
38E2E1E16B68D7F50D6102483AF77BFF1D0699190195ACD794AD4AF94A47A9EE
C8727B313B25000D856B5247DF929EF0E7124B90FAC904755288252289DAB549
106547756B4F6C34CC29D6077E9E64C62F7640B5B47FC4D37E58EB0B927DCA01
2883F8764227587B339EB80D3B712FC94ADC495936FC09E0DD921E493F5525BF
A0D3CF9427A4475F3997E384764618C783745D80D893AC9E135128927966A448
B1760CB9A20AC35841E2EC026E8206F2B5538432871578D1A61E3A5A01E6A794
8D99DCD4308653094E43C79C4B4BA7B4ED86E2155887590CFB9E83B95FE28ACE
B1772ACFB09912FC6C1FA62212DEB52772FEAE66DEC029172AFD7551A71F9E3E
698F374D81593BBC994F5E569AED34427AC73CB23616CF01F00EE7F8C632C6DF
83E3469DF4F44C6FE9A5F444712FDDEA8411BE2084825F0ED2CE813AEE14AEC4
D4CD996ABF7C28905B6CCD35DE4751735EA6EA9E3AB8F29384BB9C6DE8F42BA5
8879CF5AC45233FAF01D26ED56ECF6D3F9996D848D4BB1163D7ACDBD11C64F65
1AA2CF09607C130F307740018EFF9FD9FB5596A9F7B41F962B0892C8590B1888
C9BC7D6B6A538C44A8E9FECD7786F57238AA34C761E9290F8B2A63C4637B674B
C4D5EBA5C71BAAB5C09E21B67225734B19D6DDAB0A1ACCF61F026169F77B1FF5
955E9F1B737B6BA7B939F93D51DA8312D47B448D4438E9E7FCE9B5AE8165FA73
331A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 90 /Z put
dup 92 /hatwider put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA855
15895421CD4FB9817B90833D98C453B3E6E24D9CEB5516F3FF8AFD668F97C05F
88DAD038B253EACACE1A07F29B26C62BD74A48816915A6E62DE181255952CAF8
A16306C063BE4C713BD8570DB29C03C3FA6DFC98DCF17D22F8A8D8256C5CA298
F5E5FF68B03265E0EBB4FAA23DAEA848B6108C0E5B18B34A18928A5390F8363B
237CBF29E90E5A2DC9299C8CB1610063751CF2D2C3A75E896A5792F05FB7123C
0892A4A0FE733443469858B2BE4884300B9456EDE0E21D8F22F6C1A37F87D9E9
6D7342160E086F47BAA76D67A66A4E4C2853950F4D72CD7787328348DE250C9C
35041459DB8A60FA4E04F22E6CB6AB06AD7D184A1E2B00616CEB9CC63AFD302C
FAF34187E9C011CF0B80045D4A835748C54513D94340A280DA44D4CEE533C7DD
455EDEFED97D581DE14F3A9024676C2A39C9DABFB1618A28BEA4657C5624760D
E121E3104316EEAC101EAC8780F3D4CAACC5795723A7371F52C4FC65BD589F38
A44D3CAA7264D6AC15896035322BA5EDAA90BB7D7C235B2D87B60C412D577A5E
CF1CD6280DE1749C2FBF30B70BF55640A84C728D3A81E9C4BDE6B10651B63A7B
BD2EA6A9560BED302E7552BEFD72B83AE70079C1855ED9D1EDF3A754394FD6AF
63BCCD152B879422B0D8A56018D7A17D9B7DB9EE79C5D6A5AE18E33CBA25447F
BA2C34C8F0823016D5A07FF23EE9C7B5A20858D477B0602BF02262404D05B2E6
1929E66B2BDA15CD13C33F05393C02EB1E2431A4A863C2429BB2496A5064C09F
4A911A6EB4F6EF05B0BC82EB9CA9780A496D483770B12790683655A668931A89
18093BAE2D93D64B5DE0DCB7EF2C4674E65639DEAC65FF7C13D29311EE69B73C
E5A211554CC90A7355B8D960CD7EB665BD9ABFFF8D9306336F7F6EE00C894D8C
A6842A3C21E78343F1F38A6B61025D8C5C13534363F5B17DC9AC2AE48A95A8E8
E5E5895D25C1124C7096B480C68673EDC34768DB6AC51DDA154685A1B6C5ADFD
8803E2F84A226DFD692698A4E97599CF485BC7B510803943DA669D5C6E257970
FAAF93317D37B2619E8A3DE96BC95B399D96A31437846B726D9E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B01A190FD830741285B001D05FA4E85693A5DC3207DBCBD7BED7D230C72945A2
D7CBD8E7A0C607F80A4C94CACE846F19B5B15D74CB090F8360C05DBC6BAA5BAA
1CDC394C23B0F46FBA30A15F33344F44E47C17A79B98AAD61952AC0AD2D2B38A
E272F20B3F66F8B1E65BC0C4729108DE73387F7626BFAA1883534E6966E13B41
C5423FA696C351FDF01378205427E18EA6548E679B9FBEFADD706F0AEDE4E562
43E31E69A87890849BABC9452D6CF81E9033D37D986F6321A29D973D1F8C89DC
229DFB6E4185B4B808C5ED437314F75DA25FB7EAD662B6F2ABDCDA27AA8B4404
26FA172B731FF01C5A4E745F19E52A40B063ABADF9B9D0B093F31A7E547BF633
89776EFB4B78E01F029B8C3435D472F6EC82B25B153D22DCE5D8AF7B5C6AF8E6
9690734CFCDB263E8BBD6EADE7B88FD90AEE0E890CF4288449E15C22BF0585AD
5199AA8D48586E587FD22D9DBE0BB1E298678788DE65F955F7EE6DBB89760E6D
B7E6E97D825A13CAF4C06E739D956249FDCDE8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1000
%!FontType1-1.0: SFBX1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1000, tcbx1000, labx1000, lbbx1000, lcbx1000, rxbx1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-229 -316 1737 939}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435C02C357D527BF5BAE9F3163F8850F
4267F16F7320BDD6979C2F8C665632114CE1D7FCD000F5FBD3E05848929A6E47
97361D305E2B3EF0D3289006D6D4A92B4915A07861EFFD2EAD6D0E44D7F2BC50
0393AB5D4E20487C48DB19B78C49FB68EBB7ECED723428C77D753A22B7D69614
D9508C82BA58E2D874CC9F68A68F2A40B655CEC8A6308B67DD6ABE39F97FAD75
03DA383F4C166B7EAF7A3ED4BB7FC5E6B5D2832CD0A6587B17539297FED807CA
ED127D2F0B4D1835845D8E3FA03981EE7410C5EDBF3C000051861E7C98A1CD97
D8CFEF6B875885BFF5832E8FCD91B4780EBE0E908E59EF5D3FA8CC9D67787EB9
9FF5335E365F2B9EEE281ACC85039C952D301529C2A7B52B3A174115FDBB2268
D98A22B25EAAC4F57C64C0C1DBC34B0FE96C1D9DAC2B7FF6749250D8502C5C28
3B8CE334C9E727CD19A3AB4FF6D3339E7E9C3F43BAD7A78D4C7113CD45530995
E6A70147ED0D3BE8A22B346818368B4AA3AB2ECEBDF089D4134F08780B4CE5F1
D96EA7AF6FC84DD5FDF8C9EB273059C87A568B0E6B0D41B1745D6DB55C621F11
5E7797466B74ECA431199CB2C9D974DB020DE52EB9C39B2CE83FEEE98D229076
8C6B6237B150DFDDCB233858DB62479384302233B6472BCE3E34BAAE8F821E9C
4B6ACF55A88DCA7FB297973FA132DA117DBA2FBDF46240FC15D46DB4FCB96755
9E9C14B62375F979564E382E27178049229726B25B523D85FE7AFF6640D96F18
3403C13DD05DDD24B5180D80ECF74C81954C7821AC143BD93111D71005A1FBD6
7C615092298A3999D91971A3E4841EFF387D63DE04A7FC6C0C3F42125A265178
8700B06BF950F0BB85EC5565D2B6DF6127C88F95E7CA7CECFD9B5EB798AC8C81
69AC63A5DDFBB21C65E834A32857E87B26F55C6A3A04D2F4FE43712AE621EB7B
3A41FEA633AE6C255C3DE3E6AE805C97890743B0B8F87ED5B96E2F535DAA3639
B351C8EF330672C95841467187048ABD8C42B329EAC163090F32BFF53B2232BD
69D7B1644CA359239F49CAB55DD7EC5484B0011D8E3BF51E72E64046CA865DA0
49945C979973271A0282C0BBEA7AEF0E87B65B9A2CDCE23A7AFFE8D09DC525FC
1538BE6688432CB4BA0989A7A0FD2DA2E293F18BDC5B52E6DF05E63CA91A99D4
EFB0ED6BBEABD452F927C2308C96B3E8865B8EEA6205214EA3CA31059F57AACD
49E16527CFCC0C3A57591AC2366302A7B21BA43F980020F083A04A68B73340A2
55DFA748E0CDD0C0F80E6AE4E251F1FF4CA5AC8F6B1F0728C75C21261D2C8110
554432BA176B4B5DDD2776D6CDD0DBAA88324DA977490CE37C2B520C8B4F0FC5
EA91DBBE8D91ECFDACB53C18F5228D98F0B953607F420B9228C3B45A26663E17
2FDFB0F30A16B89CDE9F96724448C2748C1478CBCB8F473F045A6DEE34F7C92F
6E884D9912E9E0256869D7D5CB1E4FF5A6094B2E89C89A02EE03ADDFD883DC49
6F6E3DE0473584728294101C4762D9ED86AC88C48E7077C30DDD4A6519488060
C9B836379761BD8EA30C1C1C41542326588B1A4F775297EA3C46DFB046742F76
2EA1F27153C874D9E7D1F2FD32C072BDDF1B85C3A755448A76EEE0C50F55A84F
6B08C5D9F4F76CF3D0943A1EB5FB5E303C02099ADCFFE4BB4ACDC5883A9EA154
5C4249B5BD4670C64CD8D31C0D4E1EFF827FBFC2902DDB9843E1BD0567637ED6
F949C63AD27FB1412B31C3A26BD62E83282F7FD96029572E3F394927F97628D3
8D403BB53CA7458DB1F0D03553A596557D99015287DD4746C530F01112306DD8
9BF495D05338B92645C49F5B790895B2118B20729C387B48A62BB0D606F78C7A
F73CE3F311E52BA1A2C68E50EFCA343686FFF895B7C475C0D7E5E46F213B789B
0C0BBAC30AB9EEA1E6EBC61A9DD8A58601E38EB71D2D572C4A9DEC866883E78B
EE0CB24B393FF4CEDF697C67C54DC08BD784A7D5814116B912C48FFA971BF1AC
71C38F3C55A5DF090549142FE8D1300AD0539C4478EEC851F17FA71A649657C5
3CE7FD56D3E4231463C898D5BF18C1ABC01FDD1C5D5B9F121C12CF813A5F4D97
BCB31014CFCA5DCFDD74B2FCC6C9C21BB895897AD9C429688F96BC8DC3C734D5
947C9F86036B34E97DF1AACB8BE5DCBD080456E5732EA32894C78D6203B3ECEC
969068C7275C608E3E676FA6FC0B79B638DF933843FD4B63D7E34B011775A0C9
F513CAE59F739AAAA54CFBC3966E3AB9F2CFB10AE589F59BBDE3BC4B083F2703
78D817BDCD7C674C31AF13FEC087430B481D5BCFAB8A1043F16B65FA8F3D8F82
F7BCAF71DB9715C7CCD762C3F448AC5EC0B4DC2C536E8B1890B8C7D9870CC984
8C26550700086961DDD724287803357435AE71B3B0E55D70C0E1AA3057F954E5
75018D987074C4AB27AA731536312DAA72F7FDE40D89072A533009B501249A21
C1D49A89D3F0C79AA804861B657B480F336F7341EF5B4746BF23D613BDF67E57
E3A9D008A08E4E3E6F9B6FB6280E7BBC372737B54DCEA5F60D6081AE7FF0C006
4FF0FE080CFD3B9D5349B3F4B04FD19C21824CCBC5351DD74CC3A0FE891196F9
A563D3AAE9834FD4A5833CFF2ACB26A3DDA7E5B6DC88828BB9F0F8B1710AD9B6
05F7DA43530C8963984CCED78919017F8EDC6CA9EACB882833958CA66E537F4D
ECD492AC8F7410DDDB927F5086E3AD402ABF220D39DCE33DB22C073CA16242DE
1B24F8D4C551B376C42D7BE6D5B62B597EF22301EE84AA10ABD7E9C00638DC06
904F0689E93486154ECF786445584414BCA564B13AD9D129B072FFC59A00A52A
8B48F336BDB634C136C7EF32B5B470A584F81C6730F06FF7AD1DD91954DC818D
23F0F943D2A063AF60E3BBB574DF2DAF7C18D901E3CFB2542C4C95E743A391D2
9647B8BF6556C8414C4ADF3AC064395306C4FACA86BA38A85ED8FAF19EFDEA6F
93B622807191CBE305F0CC179184A3AF66DA4E88A6FD04C4D1AA9ACBD47A81F5
8F520028865720A58C52BA94D85B164581AAA81AE1E1F727C30B163834BF20A6
DA9A0B9F2012E84E750C163DCCC677D06DB1E23768A45863BC7A164417287F08
A5B457AAF17C0B903C55D1075B61028092FC5DA01140478958D7CAEED31B31B5
22EC61099BD30C5656748D8DE39668B755E60DBDF786F18A838536F3FE07F686
F224ECC49A0CD77537FC3D5A6F28677F400A0BA17425881059A2D1339A463F30
631D398ADDD534B330467DB68B7EDCB0E49BB68DEE20F853903F755911A900FE
D40D35F6ACE477D9C81D49C9120F911D26FE6AE10781EFE6C2C6913DF9E02079
0534D6B281E4800C0C1CF3A4DDFA96C0E5A79C6262032D2F8DB77722BFC2BAC7
9D6604875AD08F94157DF999DD22E92290E6AC7243F5628A7A3586A992C2FBB1
D9A2EA800482A58F6D5C3C71C870E2F4D03570FE4972A4696507C0F36339A37E
C8347727CC34FCE0724AD0405F82F5409F480328AB02EF1D35BD99596FB08A65
9E64CA81A7BFEA7C7409FB02BB58C91DD88C505EC7EFD788387A6889D88D686A
8AA9E73D348D79405EDFBB32CC0395998ED646BAE50F283890E01BC024421F97
D7A67DB096B594B6C033ADC438822F964CB56DA11B12A643022BA9CDF2F9E8FB
D3B055E983ABAC250362DF356AA09753DC83181D75E60C035F8D18F1A619D0F0
D4BC8D88BBC246E1FDC16AD0B3F60BA1D57D2B7A1977F20042C8E414F8FADACF
D56DBFD32C0A93BED4A6078F5C6661604092FA157C69E8D3F2203FEC8577A7E1
64B1EFE9CF77AD3B89FECB4B38C292590AF5861B20E64858843E2F05CA31EDC3
0AFCF839B2EFB3BC2F2A4EC939F3A357292D1F5A5E23458458A74B5F3FF6CF40
DB53A552F5999A19FA299AD865D3E5BCBAF2BED6B4EC91B83194E6576FBD2CE6
96B8F7E4C5F39807B5A017AA24CC1B923780B77025B47B0F8F4DF03C31F7895E
496D6EEE9AAF1ABB7D7D60BC4157C4EC61C94EA59D05CC9DB849CB9EB2D85D22
22BA656101C3002E8F1BEEEF87FC81C7480F356EC5DBBB5783C8294E84BB9CE8
9D908DA88113F2A9135365ACD7E6E3A18A0635A9D7021DB958F2E2949CEDB65B
11D0E17FA1B8141CFC49FF3409E0CFB48BDF997B71606C0723F88CABE40E8AE0
C75738D40EBFE38B66071BFCF861A810A30D5E96038DD86178735C772A8D885B
7BD9E4187F6FA67D7AA45F96AD8E564418990D646C8D5C6389DC86561EEC79D3
CFD3B7FD4F949D50278B87B99789377B2FCB2343AD613C0FCA9BD9F065B791F0
B8B14B296CB735C416450790A3B7E23BDFC4CFAE093323981CE16787CE92D29B
5D159B7728023E6FE0DC68CBF94FD85A94445D399DFBF4C4C26AD9BDBF3B0CA5
6514E6550245797ECFDBEEB8A77E075D447F0DDF3AF7CA2489D97FAC2C71A475
063FB3A768C0156DA72848745C4BAF9AB03007097A35B8CAA7E681DC21F59D96
A81BB46F8375C52682564A0B49C1EBD4BC6F43D41B9C34ADDEE724B08553905A
0D84309EDAEA35F9B7A7F749D18D595F89376F4F65A7406FAC1D7F0E1809A5FB
D84954BF0FCC5A24DD663D7CA52551DD10E2B4D7720E9920CD9F75C3A5113DD0
5E3CD8A2CB8860DAD6E8FF30B192EC0552A31A46FD5F2C448D131B57FE269108
AE1E2FBFBEAB160264F7ED7BF1CE5DB62D75CB4E704276634E6523C8B0E9551C
B7A461A3B5746CCE8AE6A70537FC5E435A5F57BB137DF75A468CE43DCB13A757
8DF52933A72224F925F3A8DCC6BAD1A5A701A394932F679444C284E42F7365E6
475ED42B17630A502B3BF01142FD210B4226599CD4ABE8982CE8975FAF42C2C8
C63750908872FA1CAB183250BA95345458F66A40C1B6E47FC833938AE26C48F9
7FDC7C85B2C3549AD3277AF603E70605C64045D04AFA9F6AF6DDDE61F240E759
5551D20E6DD571A7346C3AA1FE81513EAA1CCE0A99AAAF34136E0DE665463C42
14B86E9F3F43F5D9F6A59AAE64C3F396A5A9077FB466C005F08D1EDEA2AC078B
18E50243714D42FA352A5D9AD29CDB1E64E737AF47A894EB4DD5968F9CD0270F
E5332DB5E996FFCEDE71C1569899B200D5E928A06AF83059A365AD0E1B4DCC72
AC6BF31E280AAD4A686AD6A7C10A373A23292B4BD5EC4969A9EF331F18149DD7
600501B8FBE59C3473A98E06C981E0206D1AEA39EE8F36A99F2116964293D7E7
E9DEC1EEFBDA3C0014B81829312A18643F740631F4E8A5BCA21C499818774D13
867A9F41AFDDDEBFB922A82BF8FE45235E37B57377CB18A1FD52A241D97019E1
0B7E087CF998FACA6B856E8156DD12BBA280B1086DE92432122BBFCCCE759A4B
18676164952D4A1920083B57903DF8C414D751106AABD7E067AC65BC00514DF1
9A62E23446FEF225C447163E8C083BDB0ECDC694C0A0B81BBD17E9EEEB848154
EC758792E6234F8F98FF76311A8CE50A8FA91F9B68A2AE149DB2A414A39BE00A
DC4A37AF8982303318B9B351B45B2825073E5FC89F98A3B2D0773BD15BC5C6B0
CDCE45287496827E7DBA957D39356BC8C853EB92F2FBC003F717405C681FA17C
B51579D8F14C4F131C1D25A0626495FBC0C37978AA3EA3B13DCFF78285B945DF
AE1AB2E8227161EDFC490EAA263A1E1827CA9AE516A95F7DCEA6533EFA1DBEB4
DA5DC7D0C394CFE1FE5E8C4C853C1F9A390BC7E8B2517A1046AB3C74434F603D
DB68D0DBCADB3D8C5F32233104A9F80E163B9465A266E4708771CD53855E2113
76B04486A796DFE6966A446A8E4E9D35609CA323FA110BBF66C40FF3E62111B4
D48F2782919CCDB92C6E92354ED262BBB2DD5531E735F359169AE48781BB1992
C1BE39602C603E1E14CC94CB99480AE0FF7AEEE580F9B685AADD6701818A544B
95E6ED927116F8AEFE05222AEA3517240270FC5B54417DB4B3BE25BA789F4788
5F523AEFE784E3AD152C694D4EFA285FC19357F228A070C91ABED171CB2BDF18
824A25EFC13D8F0C60F55FE74E649567B6829084F369E00391D4343CD6E7FE7B
A0391E8BF463DB5440F1F794FA42FBD8925B53909398A4BEE3E9D8C368868F51
D3C843B201C7A2041B4AE823CB74464DFF46A8E9D9C7350A4E7BDA55E226A928
6987A49F0C4129FCF476030C0A9BD4E09DBE901FF078265593697C4F4EF6C0D5
B32D331AA8D7038DDC5D7D165BAB011AD527E221050F374E9C04CBCE93C8E10B
4DB3F5470C355EDA17677F586144609B48899126B167FF2071287563DD2800F9
65C62DD4F4324B6D4F8237604AA81BB3AAA4ECE54B38EA0E3A81272B64E7D28F
4CD9B61716383B331C43EAF952D1B191EA664DA83D0459F41B61FFDFCB0858D8
D6E967CFBDDFBF2AAD6E68279126686DD7F5F012E24D49344EEEC85770D85BBC
1A45CF43EB550198E8201C7B9AA0F2E63E81349285D5F6C7F876256676FF4168
8AF98B2B4188A4C892F4B5C0E5BF7FE47CB6308685907447523378FB9B3A1FA9
6E489362826D87549A0496F465D00F0766E196C4746EA8BBA99AACE0B524CA6B
3611F7BD51DD93D5653645F56AA97EBC23452DF54E541C131784443BB7612683
DFFB1CBBF3906B936D0FCF763EDABCE47FD992FBD13388443D861DB899B106C6
76E95C2C35FE1AD1EE0F90A95F38D9C2694CC88CCCCAD7FE46DAFB07295073CC
BEA51C346638B2A861EC7CE14DED09D5A583EF8F35C5E340BFB3CA7092DE659F
3D15CBAC71388BCAC73B25AA2360279582280F19173974EC6D3D1AC023ABB3BD
F9244DE19D75EADA387E7C0D6AACEB48400643C65F71421C405D78C1E2A438F4
6730F8E44D3F4D5D6F9E1555F31A6EBC19CCE61ECF9296008E6E6D86A469DE86
BD020E3E3A3FC9DFE67AB5C56FA11127279FFE3EF7450883DECCA7FF068C88E7
9ED8153540C88F88B9950C05422C157F83C2461366668D36B7BE5236373EFB50
5346F0D5E3DEC8CA006790D4C85E7DC74CF522EE900DAEBF28DBF36979804DDF
61F36C5BD8BA61B92BAF42BB04685A3C539F5F1051460362D16D84C5202FC2CA
2920522A4C94DE4D114F1FFC823B21A45545B6325DA3B702F504A4567F74C4AB
27AA731536312DAA72F7FDE0CF96E24C1F8C3544E0C4724D95B3F43EC34E3EF3
CC0A99D584C255FBEE470674E962F171531115AD54BC3F12ECF5D2A21749E561
3D4D2E6EB21D373449647822BF0869DDDA17265921D6CFA7F8C641FE9EE621CA
F4C4120BB5520F4825B34770906D2220332A0179CCCE97BC128FFC26857D02C8
2012C0834FEC2FD3642178A038C2F7A86A51787E6AAF16F66285778C3E2CD4BB
631D9C72CF8B78FA426CF2624C0B89FE857A8AD5CECBD62982171B0E8F040EE9
D7EC467D089738DB7E9E39A3B21354871276C33FBD8E3A9F5A4729FFFA616375
B697B7C5900C4305D9FD84C494EA65527E8708279B3B2437BF1CA196243B032E
891178B37D86BB44083AEAD4C019EAEF00041121787B44DCED2A0DF5F11439CB
B0BCC0D1B9351FC2667B316185F07643018E7057A863D1455D26BD337C5D82E2
EE275A371776FB79877E9A77A1671EE12374D750219DE16ACA00CA1DAD558C1F
267648821E6B9AC3809F953115FE51069ECA119F5C00FCD0A977AB4B7EDFE86F
E965D1FCF0AE6C6DBFE5334AF90B9186BF1462DCD191D939174202ED0552FC8C
1E9BC7347BEB427461984D77904696E8B740656A0443A119883F360BC18364B2
39BE7E1118724B9A085996B99730BD1B359883C9873391EF11F78F51E932E972
287541AD2293441A27BBCEC15F12A4F8D9BE40B40335D227999CD2C2B16EECAC
4C5C0EF5D036FA15EAEEB23529CE4FD48771904ADA553610240BA62C136DD06D
EAE2D33917CA7B902309CAEEB7A63C26EA3D6141343C0918B728B393F377F003
EF9211FA90D6BBE4B4953170FCC21D8666252C232B6522493461E04B888FE582
FB2F3B157BAA36AE5BD3B37A2BAC8A56474AD348040D228F5EB02D553CD0A893
CCF96BFFC14B395BFE18FCAE34C2E59C0E85370EE5A0A1F869EC9B12426D220E
C981E3B2E063BAA75079FBCC353E2F0C85D7CFB97ECCA0D1D8E1FF52164E69C8
9C2949FA02073BC7010BB188B4CC52ACFFF5B0764B6036E65B4461C5AD81A37A
60C5FD340E4304BB80E0BC68C689FA6E8033483F80A66AB279378A37AD29B05F
ED1E15F783A792C906A725065260D4452C5D4796283CDA43CE0B6A1BF639F8DF
877D78FA32A7CF62CD4DD8B065A9C0DFB25DAEFB06846162A2A86378485C3573
50B331890A74C6B8C95F76977E198F04D816988170241D149F343FDE7CEEF020
D4EA592910C5A29389D7AE8546A7630D1876F99BA17915C9A84893D7A87F0CC3
AD42C6E299893223725B1FC67F8C4A73AF4A83C130A9CC26DE48CAA33E88C275
884EF4B9C4BEA18AF59A59C019D52E6795586D2366DA5723813B2288A937B2AD
5569A92EB33FF4AAD0DE67DA4946CF8FEB75D1F1662445F14CC684C23C144B8E
106C733EFF49721733118C71E3C20B3B5674680FF39C7E68A73055A39441C411
3D206195F8F769B5CD39EB828BCA766DB7E793184B470CA3360AD99CD65ADCC8
F21A26F197A309C26ABBC4C25C5EA947326BD56AC3B79BFB4705319E03CEBD8D
4D381A62845642F3BF4FE9CD4ACE18C28D627BDFBD753EDC62D4B534249B0DC9
7ED833C8FB3575862F939942981F079D786A24109EB1CC015C6B23A35BA37BF4
193CFD0D5AFEF6BDDAE41CA2F8E464FC6E82E3F3AE0132CA270D52DA73041189
394516C799BF60747AA376931244BB6F87CB85499CDD7B10741766E95793F4D2
E779C8ABA6CBB837332F822E22D858D5CA204E31E0E1B857F2A404AA317D5353
162D369F1673DFEFFFA71CE8008A7FF811E92FDEBBE69DE1721D4E6E11F5A0D1
FE4F0C41168731A27DD7DA80FCDF1877A04A784DC774E603A7654C27976776B3
87F9579D049AB0381FCD22FA7701FEF4B44A982FFC2E4EB89D23017B31F3FEC3
F337345BC224E9931C0772B86C825359683CB6CC3DBE7843656FDF8F653DBA3B
A2DD6ECDC4F01B2F034AE7A5B9351DC61E31AA26A9331F5D5B4432EF5F400D86
A6F09F1CAA22137C8794E5133CFF9BEABC7BAE61A504D9CB27A085BA2FCD1B26
C54D2E45D2043163A8BFB26A56361DEA174B3970F587F6109EC61F3CDB8FE2FC
7FE0E1D2B9CAF791B47F0951ABF4C2B0CF36F3098958044139CC285BD7F553F7
F9DD798F3B2663D56444BC56BE284C4C920E0FD64145F006BF7BEB2AA3C61784
2F3217030BAB2E5EA8412EB9F6DCE6C475674491455DA96CC30555FC7B712B6A
D42BFF71F28B77D3B8F392F4F472AB6708AEE20F8795B1CA919263DBB3C52D6A
57637EA68A9FF992607FF78C6F639F5163D1E9AAC24A9B95490E49C16C8AEB2D
C3E64932509368D49D15C5FF6C84B52D11B2B554A9326D5103C15E8BBB23AB54
8C2BE8150CFD890DC65A7A9B2AEA11A934830E22261BB0AEC0BFF6E811A8097D
EB8A1F648BAEF733A49CB71BC72B43ABE9874EA7668C150F0CC455120579C646
CC09C6EBBF9C96838708575F944970FB7DCBFBB579894044742F24E2B7171A88
318FB6B39BF2040284C1785922E674978092152D2D1A294F807DB97B43EF02AB
330A60B7B993DA081DC874C8884270F397CEDFB551159F13B93D9B572110AFEB
E79BC3D78F59A5F4D0D4F5A7B0771E54D217D6BD041E88C758266CBEEBF4BE21
CD9813AF1D7FDC8E43B0386158298B1A2C09AEE12B321588629B0B0152DDE9E9
DEB2BB1CA9DF8BA01E41280317AD4C9170C959FF3B4AE9DD18438E75C529D5F1
674C274AAB3DBB681A6ED1734CAFF267E8804458E1BED1CA8C5B31B6D6982D2A
02F6922A1E6C0377516ACD05F0492374ECC30BD782DBA0EA671B5DF405304B88
D0BCCEF106ED93EFE822FE2361978A8883921365C7DBD28DDB38607FE6F8DACD
FD1305141AF04B49F1D87264F640562AA3AA092FAA20A211D4684B753D1FBB8B
D9317583FA8268E3FCF67EA5E163F01B31144C001AD0EFAEF546655238EED9A1
A4BBF9EA5E8B7B60DC254046692716086434033D3D98BF16427BF143B17D02D6
73C52352FC2EF078D6666FC4C17FF6E0A6A54397387332FD80A2143ABDFA4A73
702E9647E28F39F5BFD4EAAA8DB7094108395C4488A9277EBE4CA7A547699EF2
66D04FBBDF0DCD8EDA19C69B2AED11087831F46726B22A90BA99B69BE468C6C3
024C8BA292946CC660E2268D77DEA1F8C17F3A5A05E9FDBB0E3930DD6DD104E1
8B803AB78AFC746DA1DC438A9981B1148530F233D6EE10BE283E54098965C08E
DA5FC70762DA6AB4EB29D0CDDFFD893585F22CFD765A69F32289DEA8F94A5649
FA3A644F4EDECDD7998FBCF284DEC90ADE3440C82D48D6A33EDCF9D044FBD71C
E0F2FE66E5F012AD590C7498E5BD5DBE56BAC92AED94F1B303377BC6DC71AC9F
B87EA58B375E68A554C624612226855766C7E04E4B31178CFFA1A57E109DC701
99F30F78C6FD3C0751886DE2F0D1E725A0A1C696981F8CD0CF03E0D9BDB49C32
707BB1383EAB9DC7B8996578AE68B60DF72F17DC6A63AE8003112773098D352F
7AFF5E77F97626828281C8237481BE26B6E2E61D58B5CA96B3D1D4F44B20F435
541CC75FC3AD9AB8A1F7E68C35848AB34D90CF5B01FE462675CEEAADFDE26D85
3867D41231AD088E61815BA0D58951843110ABFABA3B61F7E812297D0C6D5072
0D65DE28EE4EF4BFA24A77F44489624F7D7048DFAA4065C5B2EDBB90F13348E2
2B013F3531242290E6F139F88B264A896C90BB3CE15CE8FD7BA2D7AD103D2506
920DD54D1BC3E40C3D002B8178AA5696942AC4B62160EDBB0295564F2E2AC4EA
FC2F85128EBB1C5FE12BE7D390A9112129D0D9F772D91C0CF14FA9D6617B7754
05EF921B66D375FAF9F63A323B4FD6AB76DFF453DD4F5BD04D871A7CAEA1CC29
DE4F90D3FFA2E85499616DD58C40DCB82C013674A0393434E8D2415AF84A2DBB
0299A729709AAC9EE1D540B4402277A83331201931E5A77890B1B09EC59755CF
EE11E4F1C89567CC9CD0F3A3BD3D0F938D3F29A8376F77780C332FB91C70591A
71A951CC34EED678162F781736FCA7C857739C81401F721613906CDE98B20131
EFEDCCDE81D66ACE40648AD7A4225AF1CF178B752F028366D8460C31A3DA2964
14E84EE43C66D8931BA1BD1A545BC8D9A5805C51FFE7167BEB8857F6EC176461
500471693B912992BC817E704F74D5AE611C8C37C8898C8615CD75A5242FF91A
D064C5B36E0777972356B682134436B5C6A5F8AE65C30A5CE2D1F66C28E1A263
D7E0635FDD92A066A79064D0B13EEC603B9CC4EA6E0F80BBFAF70F4D896FF0EB
C22DECDDBB32109AC8A08CFB314E1B7925A0F01795CCFDB3A66FEB720650B9E7
3EADD1B82F6EE18D07609D33DD220A26924054977E715CA1F39BCD72F12A25C3
2D9E237EE196BA66F539079840A770B90B4AF2AA83CA126B008CB0A1F8270C03
ED2E5119487E834CF4D54F9887042739D3BB911E362AEFD0C3B9C09ECFCF64A1
F7FD34923257638864E1E6DA83FBAB0E4A7F0E09452410840591D8FF50620AB8
D6BA1CABF99E00178F2D7D52BFFC01B4B0E4B06F33F5AABDF27F3C60E8AE3B28
7732A1AD46365E0AF2DBF0DACCD06873054B26FC2AE2BA2A71E66C668A836CB6
4F77409B5A58AFFE0C0B180E6F9B009818B226E99C7F1BED3672CB4C7650DF6F
DA03E75FB8046BA34E3CBCA440F97FA94CC03E5FA5A59965A81CDE8EF21D2EA1
E6F34B5561FD426A85C5EE149F191CA800EF635485249DECFDBBAF8A34BBCBA6
C09E2E8FB85EF7A4AD11C3E3E1A2BD086CE183BCFF4601146F5947B21588C09E
459F01D3CD3248B53787DCD47E8E39FCF5B78CBDC0D146C06A3F3D9A5CAE8580
FE8DA74EAC4A163E0E9807A693768DAF76E5570DDE1CBD7460D4A4EAC07FB9C4
C046E0C3D9644250CAB983ABEE60F9BF8FC70265EFCEE3135DF2565E7FD1E771
2A8277535FEA823A05BA343973FBB991729123AC14F2B4C4766BB66960DC16C8
FFF32CB52E477671C3F4341B22F18EC252FD10651E090FDD32A5C3F9C66A5F10
8B4F731DB49890D90AEC8BDA5101105C5511F7B16B38EA429C4DA5EAD88475A8
1ED7245198AF8F251C80759A7CE36A8BFF1BD89F261650D52E7BB01514BD9BC6
30B886381B36011A0A87B66D9F6C72DED51F9E282B0C584F1FFABFAD36D0A133
E0DB85DF80F1E11A45B6BFBBC1D59125A62909AD6B4176B3BB3148AA4673DC69
8A26EF21AC96C1DF8072CC8680187A5624EABFE24B44032668307C7CF7E5722A
F1647958F52B9B47C6659B41E70FF18F33FE54E74DC1322B45DB3A34269C50D6
5D14B6D619AF7C3142BBC9CFE75BE53F9CCF0B117FF30D3130282BF79EED7EF8
1F7C3DE36ED0BD0E131BEBE4DF2BE0E1E4A12EDF3D3E6FF7A05EAE5D6D8C627B
DFBD753EDC62D4B534249B0DCE626B5AB519714DC28C174D3AF0C9401D32283E
5D3F29D356DC2169FD09276AEBE374A20186D5DF5C73C7A1EE7237F1402A7A75
1B3C9AEE44069BD87AA928122D1FFF56BDFA25E2AED0AC4101C0C99E23ED1F8B
2991F38D65DA6EA2C3B2432CCB2032EAF44C1B337596D03D65885F27FF8D88E6
A57C45938BB39FBCAB7A839D70DA25272F0CA57AEFA7529AD7D6DA1E3A01E31F
047BCD8D76252E8CED9DD1BE4AC5FA8B91501E576E6F6A38D5E1CDB1FE550346
0298061C181F0B9FB0B28D20F7B6DC626ABFAA8975515A550305F97BFFD45A0B
9C44EC4393D41EB64C32426D3A136BA3849EE20E2089FD84EBC9330062A9E9DA
6DCCC3999BF52D21EA155D1ACD225D6B6F63AC3DD19D367BC0ABB2D3658A1117
CD443A613A13D8FC87CDBAB9D317F7CEEF7E52B373FBD2274998431706DEA70C
000FC01D3617DD63ACB5AC29593F93D4857290DC157585B5CB99345C1B684092
71EBC504A639AACC03964FA99DCD81CC6A8CC0F2C45ACCDE902DDD68635FBC33
9AEA0C8A3205F255764F0F80A771468057B3122A2FA23E29961AF97D41631D9E
1CE676C575E0F1E5AD91E1779A56BA939BA1C65833EF354219F40C2A85240C7B
ABD29BC1713447920409608BE1593D63DEF777B49BB8C2BB7A7E6E2F3D9C8D2D
9AFF093E9D1CE00B4E79C85F49A0799421D55320E678DF666F9D0C6AAF99F488
BEE90C7816D3D9822FE06BA617A6CD203977D18C80A8F013AF309A303CEBDB4C
3743F5BF7B8B5B65BA184CFE595E725CE9432885F47FC1BFB3B5DE21037B1116
3C5FB156EA08CD92FD5DFBDD15836518BE3750EE0E88D515C4FBF546213FEC61
1F63C81FFE511264B723CF874A7ABEF656545FCB6F53B6EB6C5B79EF4BA46D5A
1E474C436812E194F6DAFCF1539670E69C3DBCD9AB10D3CE083F8F7D84A54DD0
385F36796612916E90DADF96EB56C88DD85911EA04008ED46F77C043E359D695
826A465979148DA4C9EB824EC5CF5CD25CFBAF1520637E88135BB9525550DD77
29C3CD32B8179ED7211554AEE505A65A240FFA7C50C6985461292BD44AF2DC41
F97F21ED1DB3E9D067C194A0FC38F09139ECD44EDC4C4D95FCB4B255F09CD635
05EE77B3ADE7248B2119C697FB80A3059B67985A9B0421A92E73D7B0E9FDDA5D
757A13EFA20BF5CAD8E57397FDE1F30D8CAE2B290C2D6563D365236AC752054A
0189A816293F93F6746BA5AEA5F5E2A0C160EE1312C979D9DA9EAEF9AA8C542A
DBA6B9804AB5A32A2EF6F836ED4B747E222DD0C85328B1897FDD1C66A459E432
2C121F77A1CB63CCDACC8FCA97B5E0C1A4710EA572B9B2660EFC447ED123AC4C
E9B33B1761A8BCAC78990386CAEC9D42FD75CE5CCD112C69FC7A4E2121669C6E
6C5B432D1560D7E4105BCFA36EFF48EA35036CF27FFFFF2F1F016894547B8199
8A8B34E3E1AE093BD3BB91090A9DE98024D682C96D6EF8EB521A0059287A3A4B
BD8FDA7111358F429F91E12DCCC856673F261B5076C4E761934B24CE6B7A0BCA
A20FCFD437A4B0BA057824229D74263CC0F3800D50107FFC72B6D9F3FC5EB788
B00807F602A7C917267E421D3002BA583EF9B31BC4C6BD545FF9C0952D3C600A
5EBE4552437A93BBA21D3B530E8F77BE91EF2C180E8839FEF863D3C64E1B66C4
C8F0D7A25E9CD97E0EA695765172D5C833140CD1F82FAABEE416359896AC7760
431526EA15293E0E46F193E78C1AFC9DDFC00F3E05AE26ACF63ED9EB9B8EE076
C7A04386FAC5732771684619EC8E2D95998E840EF620C0C6A6FF48CE1CD99FE6
404A9C2F3981C67D00FE42B5C7D78DE4D0D5BAAE8A4A47BB0515BC34C21954EB
C5029FAB9ACB87B3AA7B2C6EBB567842BCEEC9329F12B7A6E718A56A3A2A3118
4D8E52B64024927ED395165D2EC80C166B4A30536A5171289E0B41D3E1FF4165
FE35E1599736DC754BC44143168F1B63DBAFDD232614611FAB63AB6E0116AC54
9C56A3D8AE8E55606CA677643FBA89CBCE5CA0331F5632F4B2BE684B749A1ACC
B074810FEFAE83CF025B89C875F633102052A44A20C66E1E7122697E62E4081D
5BF4531AF3970E6072477C0B90BCD0F1E86841305633080047B98BB929856F45
7DD15F54F5739E65121B53C83E7B9A1A5E93702CA4ABD315EA5DFD9529BD90B8
365EF29A3CBF0772561A275266210CA2AAD1128B221DAFC09146535C52064F05
B4C4FD44E1F3D065E8BA77405F559DDF4577F77841B40250576839BE2A90BA99
B69BE468C6C3024C8BA292928CBF4F4C5AC640F559306794B7BE0A5F270467F6
8470B85DC2E094A845D6B778D2D554C9921703D0C3EBBC3CE12AD3084528D13E
AFA5FE0F170D4162B4F2451CCDD9860CD9B2CCA344F86F1B565879418B829867
00F831D3AB0B4A9B1426D491F1099AE95AC488D41F111465419F49E7DC6559BC
C9C99A6F81CE1D27F300700FD18936C4CC0B5E531EDDCE52FD6B4FC4A738C029
EE33C206B42402DD001691BA63C29C3A6177581C98DC4C1399F958FACCBAF383
B70A59BD1C6AD04870C95B3EFB6445B4E57E8FF1E8971AED5C83E61A5ABF89EF
17F259F9D39AD01B2C7A38C7600C6F1EDE2A8F39715A744940B74BE195224214
14690233682745B92072C8C9C1F2D315C1EDF38051D6AF84346EA995A46D9365
2C616EA1976DDBF4483EA43863502E8A12727F5D50F3C73B54AFB988D5DE781E
47B8E2AEA91CCD93A6ECAD99CDEA9706D0DE8D52009FB5EFE995BDDA377E0956
39DD17C69195D52981FA0470AC3C849D29F1CC10C623D090FCCF6D6AD16460C6
8AFDCC3B7AF3BA4F8250E227FB09164A34A51C2773E8FBF697768310F537D704
EE7BB25D172313ACB05A3E95CFE230D6663E2BB7D2D3AF5BD01CB680CA475069
4FC8FEB0B1BDFEC05CF9AD00DB55401C6274F409C4A1166A19A9AB1C7334C655
3A9718678C319CABD9C84B251C4C126350C18CF451006A9DC14509C0A4F0787A
4ED9801B8A640D409779314E30DDEE84259355484DC15802F43389D35B5D03B6
C803CA35E938E9F0CA2EBB1AC0992895B885E45CE5800B2B623E0488BECDD26D
BB0B38668AE54D5258A8BD60E5729A48B8C3E76437206C5F8A22292A2E721870
C49542080B58C3312E11E1A1443C4BB2CF7786340AE1FF4E1F62BCD805CBBA34
E250A98EE53C2117ADE498A272328926E00054B156921AA8694E1AFF62E58157
7174F5FCC9BB2D8A83357972275BC7136CB0E5EBDE9639E3064A5BE8EC172C2F
80AF1044BBD5BF7A93C028CE0D3DA5C529163F431206495675B0C19EF27A9580
B22876B2675D3F67DEFFCCA45E19DE0CFCFC70378BCA796DA99688C145C4E10F
2E7E9DF8620E9522F5EE4A467827014494A6D183AE185D73BE00B9A1A37ED801
9B294E97386886E8A21EC998160FB9F141E44135C1FDAFA7C2DE9611AF662A19
6A8003ADA440884CAD4C1E71A82C60E25A1BD4A46B7D73586CA15BCFDEFCFE4C
A5D62CC048D61B4F3D2F43A8EE1E244A0727079C75EC9EB7B355D9A507E82C8F
B9BE59FED41DC0EEEC68B404081F09F426BF00A2F1796AD56BDF9A35D1059499
1D943960A2776AD75E9AD7E3BAF2B4493D2BEEDE36AD213F0EE69E5163C8DA30
F989B8F241246255833DC43ABF341D280B8171AAF8F4F0BB62081CBAB8102DA3
8315C299D106B03E4CD63DDDB367F34D81081C111B9BC5FA536150EAAF93ECA3
69DC289F7B6380597933FD4D8586911F73FB7B4EF52147208D9F801CA12FFB53
46D7A5C5127E1F8D696AD230C78AD71474C52566828F41DBF602CEDF7F768391
F7B71160E6CEC7B0B61DADB9598CDF7358C4A35891495E39BEE2AE4770EBE599
75E2277B691B50D4A1AF52AEA4A5AB186E285D163E391FF3E9AC38C955D3C1D5
234232AC1D0CC642A6C5B757E5ADBF685456E0533F47564380AA19921DE10E94
9FED22A0D284BE5922D37FECFCF0A21A74994BC7B861325A9758F70935D55B1F
77CCFC181A35D08F979A3D146FCB1395A056C38FF734815612041D759EC64A33
B0EECF502B864146FD5A5A0C87387BE8E85B7916A4B8194EDE4D4B472A362FD4
BAFA31DA0FF0134830E690328F06818BF0E80636D9349E11A8EF2562EDDBD183
BF89549B61C5475E49A8B325A6C767CBC8B7F44A227270D13BCF90E91EC2B46F
B322DA22A1E9FF2BCC9FE9A6A234F6B3CA6255FD68AFC52B5A860085D455D216
CD428EA2B13CA3BC74169094B71108011E42978B486E1C3ED46CEB347A89CEAB
8BBEA2FBCBBABB9AA29EBC2AAB1C8ACEF73F5D20C11660D4AB1D0016ED45EDAD
C228EB6050289B099CBFE4DF60BA32114C24339B715B5888A4BB97069C10AF00
36B231CCD3C3B0272C73D401DCB7FFB35DC235EDE3CFA7D6F4410E1726DBAB2B
FB7CE096409ACC021052DFCC7E590223115919DF2349EE921C4B563ADAAB878F
D8D5711B8ADD87957324C4422EFC571B8AD6C04DB0CAE7B8EF266573BAD75958
8B3A47FFFB9D60DBE9F3ABE36D414842097027C3C771B5526EEE9E08452591BD
98D198ED988F593D5401D516D158F816F0D0DFCA6EC27CBD74FC36774CF4EB34
062FA49AB90AF028658E60BF0DAD9E9682F94AEC9E3CB751B4D088DE464496AF
E6F30043F45FF196379AAF85835018A39384062FDF26A4B467CF3BC505F4482F
0CDE22C6BF6EC519ADBED96E0CEC2A62E92A3BF2BF517A3575756B7D4F164FFC
3F0B6D0F2F2EE0599DE870005977FC252B1864A696B0E62D77EE488D0330C6CA
3C4C4CF5F60445268DB63E948E317A4C2D8A832151CBDAFA7F109DBB9C39657B
11080A1AA51A91CED9A9CF7BCA386974F0F0515713AC1F6AA1AE1080442A2AB2
C858B9FFC476D5F15141E7B426D3A28DB4895F1F95D5F428372A5A21D452B56C
B0C518B17E14F871DE0B11FD26DF2F60EDFD2DBB20744511E69B30E807E1C45C
FC83B4574201FACE0430F26FEB7BF2615866CC5A23E7DDE410D27A37AE6020A3
B4937580A96D0B1E140095EF2D04BB595F95159048DD7AB511DEB7826C2699A4
A221710F245C7DF4DAA1C5F2AF7F36B7FC8A11889B5017A4C44633052EA5DEF4
EF0A7E11FAFB2576A0177FFC72B6D9F055C94EB0BFC19BAB7BAAC154243580FC
B00EF9641A70AC1C6414CCEEC78F2EB8D6134D5173D394AA7CE5FFB35B0AD2A2
1749E1289E7068E41075785846ACF378E3BF2E5E837146E0146235CBFD649F0F
46784FAA3E4E6AB20720E26BC985D885118AEA16615D19B44DAB841D80997D76
4DEC9CC7B9F5F09B8A3ECFDB9025AB3009D00A5ACA0006432E4D6E23C5191E92
C72F9D7930F755150691E5100F76E02BF55173A43A7B825C2C6328EDEB44554B
948B4E9FB1847FA7B0D8994ACD15FD969E9454DC9847177CC07FDE81149419F4
9BF064CE6E27E4EA6B4AF1897B33C8EC75B13E1EDCE2E9D84192525D19AFF9B7
BB1F23EC79C6E98C1667EC1E0A7DAE2F56F264C0EAAC3B72EF1FA79FE1E56B1D
5C32EBB718DE9EF5D5CC5934E588FF88BBF75F28383B05B6120717744B58D2A9
6BA3CF9218986CB2CC5413E5EE6270EB3CAD8193A3AA1CD10D5FA9FE83509016
6D11C29F1A842A63CA55B5FE4283D5F71089C3F94EFE8B865B4254BD6CEE29D4
0BCE62841435C39942054A1D417A92396BBF26987017379003226657CB0B002B
4F768E2D4D83EFDE11FFD70F6AB79683319344C43C513C35A9998E9EB5840BF0
2C63357C426725D35E3A501463B79159BE99419C569A573A79CCD4863144EDCA
D0114140E52B7E153C354CF4A1E1C371FFC22BAA0AFEBD61E874EB2B8EA1111B
11562682ABAC7240AD67B4AD2D9E44E0B6FF7D706B3F9638D7F632F92F8725A9
BF1F9F4E3B04FACC8B34FEC11B39FBD63480B402E2795BB389C7ED08E6DC4956
250B1E5DF4F84430F2E5809E05D69ECAFB6B0ED66FCDF497186B0020B49CAD1A
5E9DD2A54F7DA679B9BA97C8A9ACA7AC7A3F8A6EFA217ED3404015B7A2A7EEA7
3ED0D6C2F3117B0C307700315E8E3AECA3FB8B3BB422226A03F800DA5E9D9C43
E6D20691B072DF21E710DE204B126D571E5438567A6F6611B3B7EF2759D25BEF
E3C9943F3676651A9AF642811D5C7133354B74DE079EE97EAD7CDF0665F6BEC1
94132666A36480C3C8B62E71C09F9D30C65CFB66D14A201A7943854C6B1BB451
2C486FA4A8C81E93FA4F4C6B81D56A2F3732CEA7240C30C602488CBF10A2EECF
7D8F662991CDECC3D44423F534302DB5FB0A9310ACD691C1BF1D1D5C8EC18328
D240ACCFE8158F0E0A990C2E78D9E7ABAE4095EE80F870F114FF4010102B4387
AB3FAFB1A8AD0F446CC28ECDFEF253C0B613BF54AC8DF313FAF9EE1B895B5232
8AC1739EEC0971CB6F2A2D3428AD814DF36D640995FEDE89FF49D878AD86269C
A02D9EED19200FA8E0DC8F23FA8A0387850C385903B44F4CB888BEE7B371E311
F8AEF0991A4EB1208454E896DB6A86DFD3B60F1A0B0AACA771E615E57A821D80
2704BFB6A13FB6FA40C0D4C09B91C0BFF6E811A8097DEB8A1F648FE5BD4E57BA
7672E19E360549603C0727A08E0FF5A5A1C15373CA3D91A2CDF342464106F7E2
B400A1D62FCBA2BF778FE68559CC2DFFC6D4CADA1C9E0B4F281BB08566DC18FF
0DC576BDDA3663F22FF707957C96CE525A46827794773692C8AC0DD5462F796B
907B2B0F70E4CA71FC970E8EBE166ADD3B3560B1BD546146DD8DA46BF2FC6F74
06A4E23B266C8FCCE78BD74838921E315834B8160F9A3AA806F512E976E35161
3F23E810E2743348788CCC4B1831C45D42DD70875A54949CA3FAE720AA240146
113BDE623F7868BCF4C52C63A5696901EFE6AF127E300748F3B7F92685589F36
F15BA84639C5C1AAB3CA9AC19929F34995728F4B225616FC555887EF6ED7E10C
3F5F1E3B0B24C159AA1C446AFC3AAE46D82F1ECD6E4B0CAE7CF1C95957785D4B
F354F70900B8C22E80E8F216898D2C891F8D6F15A2E82B52E5C2F883659DCC23
98376F9F3762D6CE21EE6AA1A98C22421A41C7CFF1D59BCCD4357C7643F95461
AD3F28D6049ACCEAE85292827CF645287048C4D0775C9D5B267D4ED3B6FC050C
6422AC284B74CEFBE1133F42216A11F2D202FE774FA32B3E0FC0056A2C0E2838
4729609260CA121F14EC6A03B5056807A02417B42CA7B3F927062C125BB08B9A
090633021290713F38B6EE610FD76759AC582905C13E65A1E045A8ABBAF0A9AE
768535EC2DD30B9E4B7A063FB3A768C0156DA72848745C4BA9E4AE89662291F5
302DED60D1C56B301384FEC324FFFDC05DD565E5C3596AD5B763266CC6E0514D
C9EFA8531FEFF6298C4728CFE186E733CFAA7788AC2ADF052007F9104EEE1B48
31B46490CE0F1C4EF1ED2387628D1517E7FECC0913DEC0148705DE1663066776
A9FA0D7B8B7E21C013EE3CD986609ABA34500958A2888014AAF6A529F2E38912
4C17D8118517C4E68DD89BA2C7667E07BA5F62386DEAFB3E0004F27927A85423
4631ED086B9B22121B83294E11FA54E490867BBD26342FC34CD1BAF5D3C64AC6
381B934EE07E06EA4D4E2BF509062926B55E7F75E7FCFBD5438E55529B9DD289
1B49CEA500A10F340919C7BFFDAF96BAD98CED75B0D761E331F6FD638A0D6E4F
DFE1E5042742B861809E8ED84BAC2F2C60BAEB7D44B76892F507FE4DDE56B90F
1EB47AA464B3F0467D048835418DA80A31323B71DD770F50E1122A4381B5C5D9
4BB9F8DF94D37E803EBD850A6621DD63C2E55F5E3FCDB6B3CDC70E90CF496C35
5AD7E4CBCBFE74F839F758F77612600629C809AF1F2E3D83ACE24600A8140712
0685EB6A0283FD773F1C0C6BCFA2D9571F6B1C0CF4C68D2356C2BAFBB327522C
7D1ED7DEB6751B51A01B7A6200273F4B8CCC9BD713BD3DADBB12D1C5FE032D48
73C20D620006D9736CE644B2D2A5A5B62E01335E25CA1AB255AEA06A215E5568
28E9BEE3C4C11F10423130E67EC6AA10D95D3027865D43E7E6A72D985AABCA4D
5F3C704E89916821AF2F3261D0CA4CE105E5C21EA9D01B956F54006DEF62E913
BAE178D36B99EF42173BEB1B1F8A29D731E357940F3B69FCEB187ADCDBAEFDFB
BC223A41DED6AE3C87DD05ED123A063DE53B6D1A7241B0E2F8991BCF316BCC20
A48F083D9A539D49D41624CC09C56A77A0AA0AEDA3B71AFE1A128C7BAA73F391
6EE864138D5ECD4511F1462016C9256E1B7F2873CEF693AAF56DEAA7545E1F2E
DE2798845B23A8D0B2D17EF2E6FE512921E474685594126E4496051594BB12EF
6877440C8E3A17FE4B4E31E140F1138D791446EB1C7F2409C68733FE2EAF300D
663D25B9DCEE614089F66867F4F00C080BAE5956600640114829B8321028C2C2
1CCFF5FFBE1E8B5A33C6DC7F00C88FB7DCB35661AC0F7DBA7B29A098037FE37B
6CB870A67F23B0D131573D520B368584A1CA5DB6D66AB67CF6C529AEED7FBC81
81677C9CB23BE0FBAE76B9B9E3C134A63B359D2F9FFD879E3B03A15313AFEC26
947808C0039824417256B490A0B68754822CE52513958107778E85019BCED048
93B751FD84BB642EAE4E8B6815B586924DD3F278DF4DDEB6FF460A0251A00742
F20DAB7C71581AB24B9AE859BBAAC18B272C82B09953FE360AD1027F072F854E
F5E63A67EB0D59DF35F2F520667D401651C17B7DB4872E3CA4C8DFACC084A9DF
113F26515BEC9FF3702094235B60D5507B50EC78130B3EE7FDD64D4C4DE11B45
B7EAB2487F6DE4CD0E31A03D267D66849BB2C729B6CD3FADC4A717A77448B888
4345F39AA0AB550704C12C88AA671F4C20FB2E0FECFF63A3E60A1575CD8A4FFA
AB50557C0C27017BCDDBA191272380B58043DD5C8C8AC5C3E4115069C5D8564A
F62184CF9120C7EF97B7939D80295740AAC6B57E1F891D173EF8D6450F47D45A
9FF4FDB12A415A1A24345BB250147B6F18F86EC7FA9C68F88AE089E0450D285D
90BFA50B60FEF3ADFFA96E6595D9C9D9089F5495655FC34A39D664F25D17A7FD
A6AD3FA8660C75B87E3ADAB06C88817EFDAF40477653EE1A5FBFF4574EBBA17D
58E4BF017B061701BF1316B1DC081CB696162395D837C70E2BCCBBF7CFB11217
150DC68D7954BA91EB8EA47A63348CEE529BBCD403A73F82500C73943CD1953B
6404E1304DBE4FB5001E83CBC0D1B8B63B9C273561F284EDA631CC074762438D
51037EE134C2391B711D80D47ED0BD699D79DFAFE7AF4B8D3C5D3A7EB9C765D4
6792F7C21DAB08F23E91C9C8FD94C991D828104291D89860AE3560103C3293AD
46DBF117E99B44080F19C45114299E5E91C172AEC9EFA81A6DDE952C4E7A3EC0
FCC520D66A005AE9975B729B697123EE9895EC8D9B54DA64B3C2793A5822F543
C96D167DBC9FF922281B8A1375E44A9B5BEFB47A1EE32053857B9B904D3D5B7A
81FC9F19431E85C4BE6F8EBB9B78BEEC339469CAE9A99F2094E149666775D32F
ABF0BA73AC83D3F2483756DB4F1968CEAA9F97E61E75CC2CA3E08A3F7CDE8FCA
B8458F45C5C44E4554697EE01AF9AB84C92AF36766626D92E4E619120E61A42E
31092FA8250CC1DA1CE5211CAA735B81A66B6B94F4EAB4277F9E4F171779E14F
387D834F7A83AD9EBF56CBC36CDA10112167EC9DBFE4D7CE04898C5C5170F397
CEDF15301B73A11C9E6DE0B491C2414A3CE4CCAAFB890F2C775D1904A2205BF2
400A01261A35CCF6E4D7DE08C2889E0B5620E8936D5A1D025BA5C0315276B37A
30CBC29D43BE7C6B9D4DEBF99B9B4E86202C497FDDE7E02FD3302BF50631244F
E98EBBCA197AC9594D735E29CAA03631A29C559B3D0B9E8B1FC967B67CD05E08
B1FF84E611BF71F8967FB7E5181AA74B9014E7C56AB645AD270F98921127702E
9578C57108E85BF16208C0C4AD1BCDA3C2E39A1B10B19D69DC639DCFCCB243FE
1644AD257C6C32DE85AD8C2A39CE21FCCA3639ED9F78C731E1B7F66F34ADE393
4050504E65B9A804317E37F8FBD08408243BBC3198DCBE83415C7F759CB521B5
6B44699EB932C7827B715A512E8D8337EF03949AAA7444B95514C1F955A2149E
E68ECE0FC2763C85D301F2B0DB57800C02FF6068430D79DC57A18C35AF7F0CBF
38C245BD9A2203E357FF9BBF1C5E636198B153564CDBDA863B654C7C69A46360
FD7E32C2CE0C811830B8967279F89990E32D1266F90291CB3CC1218B5A1D997A
38BD171F92B6608B386F6F62CAEFA1A64AC4449C4D04E3FC98DD5492162D7FA1
45454674E9C2202956FAC8AE52BA546D7F6B2D90802FD2E50BA00D2FAD43D9AE
219CE76E2F777DFFF8B6A2BD4102EB6B6F487E1E5CC1A557159E350725AAEDF3
F8ED0E1F0A606E77128CE2A9B412161F945A9FF27DD4D2EB87E67BB64C8A1EA4
9D49D2BDFD8EFE2005EEA3588714D1F28E593054C9B54EE68C2AD92BBA8C2A8A
87C88DEE2DF5542FCB75D9BF28309F427B9E2BE28E10673E48339383070AB163
5681683B60CA650DC772826FE446AEC1A2AEC32507E9952011D03698C11D1087
79FB92C1ED0E7CF62C7AA145F54167A4783C41786264EDC8F0EEA87BF65AADB3
F4C8ECA8620A56EAF1AA569E24D24AD24FFB0C880E5D1F5172ADC19BEB3CE0F5
7E2C8B073F5F22BF1AC6EE9B4A50708B7966FE2440AF74041EA82FC2BE39CA9C
7B5E75C26DC80018051B8EF64DEEDA9D03C7D6DDF604C6C9616D1BA9177CC8CC
763DC17E98F4C6B666CBB74BB8313DA1C19DDB08F5BD187185D5DC3F060B4AA2
04726E0121BB326B73BB3C553FCFD9381D21BAC7EF86745B4E893E270F45753E
CA68AB782E1584A44AB1BE13050D54F75DF543366B8A0270E86E423DD97615BA
DB005A3E5233986B1BD5DBF80F22BE126CD4FD8B7DCFC4244B1F6AA8973E200B
4F3A0D1F7B0A43DB391A7163EE6ED83BA942E1FDE4D3CD1BFADAFB6A00DA0E48
E75A3E14ECC055DB41698A15E8F2AFE20ED423C566D640D7E555B5DBA591C2CB
690F32F9CC1AD714B3E472B0A62FCCB2EB475A3B05E5B26C892C68C7549C12B0
3A80C34AC57EE168D1212072078099E9D14D808B97DA67AB685B349A9216BF66
0DD192F1DD5720339D507FBE407D2B0318A5ADD187D5D08F415ECD2025508B90
48F008CEB5CFAAA7F71F9D8C40476A88A4832892B69E3248CF634AF29FB5DACA
D2E9A028AB4CC54F642AB4F9C0AB12BB9E879020D8A948D4DF65AE11773E09A2
6EF39EF9E93036841A23C9CCFE6F8D7EABA8DE6D930FFDADC0F266094FED7A35
145C4DD10DE3C207F53730387A67389315E4F2E24DE3B62F02FB7685AE9663DE
EA81C3F6B579DB5ECF3D3997A1DF9433B856427078F38244AA0011231B71D92A
DE4F8B23BD38DDE0A68B6258A00DCA2A63C70A4F90E62AF46624F92B5FF4951A
E97BCA4E8BCEF7F62CAD66B10889AAF2C12A1E2B9A3A967F3233B4506E114496
CCD783AC56099C231F03CA84DB6B9B6EF3020EC6035795839BBB3B85FFA8D46D
C7EBEE8152360E1391970D6570817543FCBCC266DF0056DD97C583A66BDECE61
D0EABE3907BD2173E6E964B6BE08F7BEECEE7AC0F5EE1925A6E3E4A26E8EEBE3
C0541DD620A5CE2F2B54A9CD779A60B73A2236E39AC6463DCBEFE102C03FB2FB
6C5E83CC915B560257330F84219B1A4C8CC0FF0896A78BE54A2483F1739FB2C8
D09DBCF87D5BD39FD83AC606A9773543443999B5138F77783CEF1E8F8F319A63
C4F9A9CED91B393E6711C39E56BA36D176223A49EB227F36CD42FA35498DC09D
0DBD1B7330A584AF660C834F1B406103EB06F0F174A806068FB60578C53987A4
D7BA10C895BC13691DFCF0A47684A0BE25F6200B5EA62CE4AD1012AA3C2CE520
BC493AFDD830C792ED0E32BA8D7093A3585252A2E4CF5C722B61C6A15DB573E0
CFA58BDE1AC278C037207F34280CF247FB9793DE033D06960B1BC32047820F45
B25B0C8D352FDBFC8F6D67EE371AAF3A1D4AAF4381D88697D25AE1202BE2ACA4
E44CA208EF51658E345BA9A03F15CC14E5BF13EDC760EFFD8FD65734959E0974
10CAD3ADCE22DFD33BF98D10CE7B2232F459EB17F11E6DE3C948A143A6C57EEE
5AB8416064A8A36BE067E9B43145943FE53CE494000826E89067B8547A683D84
ADF7CDA9F11EFD0D146B9A7B154D422C6F950D3426E51E68CD0295264D285013
C970563EFEA4D73A129432D7721BD39B091C09109B37D8EE3B5B4A119AFF8F7A
183701A1A26CFB027CE8E75FD3EDCDC69D19680B860211CFB115B407F859DBA7
2BAAA1742FA37D92C567C53645B0B7D818AE03326A1A47E4CF11223FD95A428D
1C5CF8F9455544A6507BA9955121B387656BA7CD0159ADD978D55D6122575D10
0E0D048567B495286212E5D3ED7307A7A4F0AC9AD07230B8BA1210E83ECB6057
4CA8D06D9798C46574EB990AFC248C9ACBD96CBCFC11F2B07409770B0CC40671
6752E1534C3AE32F234C8D5F6438145D1599C8E4CB804DBA82C823C35BF93531
CB7E1E49A8162595EC4EAE53227FE6B1E4B641734C195F8816DAEAF548E8498F
264787EF4E24967238575E84AEA0DEF6C28B11B6E735C062D8C2875DE254C6F5
4B2F7DCD49B038757998C81BFF27CD9A440A020D9A47CB2227F3A9E44002238F
46306BABEB8B83786F354814DA44A82DACCB69B0FBF00BB687994E27B11CD61A
BC67C434995953CBF4A9FD09817E957175DBBAACC98E8731BFB3312968E153F4
7189C874D66F6166BA731267B7BE37A60AE53E5EB8D6A6B1CA6D2622EEC5C750
5D92809A02A3438397E1F977F07CF8165719B9798E35CB7272DD0682813DE814
9828AD3DE7B0665C80BD4C2A2A4FDED22885CAB933D4692631E8AF9845287274
98044014D8FAB15E034E5845A5F013C9899345922DCACD704DC8E16E9FA1A695
ECD52F2859DA9DA08842EC407F0E6BAB578AA8BF7B503B6E90579A678463D8ED
85511C0681C1AD6521480E69D4A2ECD82891BD976DB644C43C1D72DFE0C495BC
9B9BF7A44610ECC27D99F85EA031B516F70322BB8335B7FE40630587B12B8236
0918936BBC4741E9329613706E845BD27B44E2B9FAAEA93789F63E9063CD00F5
60E7833E91DD35C63D13D65119134C1CE293A8C61B17559FDBA2E3D629C38410
574DE668DC7D79FE7CF8269845AB6766E51F5398D632828157DB5C0BAB3DF570
CED02032CEA445973E4F55A126477BDEA207D75DA1F91AF7B0CF640DF73DF73D
C8EB065B84184A82A7E9E39139A488CF52C6F2F21F336838CE511369185B038B
BDA7C54B626A0819E1AF3BD43EAB7F3CDBFC21621AF3F53E365AFD6D6EF24520
7F977706223B4D45CBA792E2AC4D0A91F2451FD55745DE22C6D874CD994FF982
754FA2ABC8DBFAB0C7D43004F07412D7C447ADA43E6D2F7F0FEA89816E204CB5
C2CD1815CA473A6E93655991FBAB709FE7734AE991D490FC590C6FE68C5CC838
BCE557A39EBCE23FEDF2EAEAB0263CE12B9427D969A32CC34AD891413C1179AF
B65030DEB9B47FA71CD19320E18DDBB460FA64D800D7970FD70D494EB1DE6A38
589D1C67B43D543BDF921D3603E3C2B0A97ED7CD2B7685EB12132CFF0504B23E
EE7856B064AF555155662DF5F6DA6822F652F5371C2210A0EF6BF09562660862
FAC81C3E1C7DBDEF4EE0DFBDA2554F935FA95CC63B9D548AF3AF455FA671DF90
8D8363C14B73D813B31227038DEC6F9CC4F3A2553CE7CACE36171361AE6CF1FE
B067C8DA9950C4614FDC0795CA8E3A6FB5FADEBEA66525D010258F3C16415312
9E45A0DA1C2169DDA955AE5EC127C1C18F8517C639182EF0A2A394C307ED98A3
FD5A69D11A2E42F871889EBBC8A7204B30458AA650C005E3E7FF55E20E458351
C9E2207A5D0E58906EFE8110967AF541C06E64446A20D20E2B7E7261A19A1E91
573713EAEEBB997CE0CC330D3CEFFE6D7EC8D98095A385B932C5CC60AFC78C2C
91166D5EF5123AA2EFAEBEF83BA4135DC1C59508AA8368D2CEF614C154F98F63
A4FBE16B739E926C1CF7963A36B06B28637B4B8089F5BEC30A4773C796944949
47A82995FAC0E049431A71ACBBEC8ED89C08BBFACA1174D6BFF6C0A4AA25DD67
E36FB93BB84087032108CD088DA97C94E94CDF7EB5CFEB48AE0208D07F48F796
149013E9C8FEF1D83E541384B499718F9349ADA4B7900148511F56DB838398F6
8CFC87C576A3B0234589D8E676575FF8FFF7629C44B8E70ED1CC4F57C4F51937
1D8CC5D6A58293D4C041B4442FAE9046A02CC2BBCA39DEFFB8748E0095625A33
C14140B493E29A2253D9892B409E9B80C19E9054D51A86FEC7310249ED2BEA38
DCF040942469C3EF5EAC9D7A8E5BAB06C73D06381E3DFBECD690B27C30E9CB45
24FEB94D00C770B9E53247B3D0DA00FA1A747242D0F123EF961F7AF9B572D901
ABEC3A4E9726B6FD8C8E2E67D700A3F75C9303ECAE4B1115A3C38EDEE9622805
9380E15AD37A2FE9F0E7EF740391927E4E6297DC713B53EA03D58C5F8C523145
1F028282695602A9A093F9E139A57356A12B5024CF889C739C01D9C80BA655B3
2066C5C2775648F40C13E0F364FF8D4C8477CC7CDFC641B9AC0B7ADB48E4DD40
F3E00388D5EC22DD9C482BF028B9F9EEB87C59D6BD8FE95B7F4646BE9DA3968D
45F617633A02303F608DAA033BEBA5FCDE538BCD45393AECFDE95A127E31C134
FBAC9928F27E767BE752B5C85BD3E80057E60F1003649D85FC99BDAB8B1A0E09
8A3556BDD935E68B6FDA32BECFF852667E809C18D8A6D708B68EF714A0457757
95FF28E918FF53A9FAB7385D253A41C3CD866513D56AD35ADD18516504D991EA
D7952925943D7DF895663A3A716AC467964F64EEFD1CA51B6917DBE26629482C
F9B993DAE4435BE3A7A073B0A3BAE07DD660DBBABFC31D128E990B7D47595F33
2B8522290598D9B8B68DD0779BC493E835E88E23D161BAB7EBB3E9F96A9F1EB5
D06F27CE69CD07AF912256CE6F33071A79A80DD7C1E2506607542D021029BC7F
CE746921473CF1EF69D7821A1A5BAE2AE375833DF71990ED8EEA69256F4B2155
ADC25A751E48A03CF9944B13A819E2A37D029EDEA7B761C5AB603DE437845420
D3C819053EDBA7D5D65EE89279140D521E1C1368261A78CA36A5D2B87EDB9183
F0CBE58CA43FC6C91073689A969CAB7AA9A6B1C18CC62AAC7217AE6E9DFB3BA0
25C6ACD1C1CBE51F633E5EDFC6560C6A372FCFCC984BBD2EFA2D956721C8CA25
4431FB34F3308201BFBA534E338CDE29BA830271D3483CF88F99E0114217ED1D
436ED7F450D506F2D2B3246B3B0DAA444300E451A218B9AFA90764FCE84B8BE5
19B4A19E9A55041BFE6E63B7383165402E545F28C2870796916EBEC7C2B31DDD
D04C2F1B171BF868947EF8404B6B5FAB9BA1F6012C3B1752BB93C6DD1773B3F7
62846DF0D24232BF7792570D037EA153CC67FAE198CD169BEEF940C28BAFA3FF
0C94FC9E365AF370398302BB9B23B15E20F514F4B55829E2601924633B9980D1
52B39CA6E1969458E4119ED4709ADD26B395CFFEBBA9960AF7047D16AAE05798
47F6085E7D2C72A60D42171B8F3AC0EAAC173ABD02DC3A0120D2838B7FCA1FB6
AB240F4580BB50603976E227B1B0B4F674A2DFC2E966336EA0E89EF8F0485BAD
9DB17C819DB6FD26CCBA2DC54B8E11CBF699F55CD693F3EA04018A3E3158CDFD
6230C9AD6517C2AF0505B53C4DAD0D460B5DFB3CA21C799C49A37F30CF7B08C9
9993245B2C172BFF004F14C967F450EA75F76E34B0B14457B035EE5875B05795
F476DDDD2AC1AEB6E4BBABD0AF74F45748F1DA3FE4DD7FEC8645014548EA9257
AD6D9AA7A6371E7277401BE9F383C5895348B7474F02740ED8A01DC2A4BFCE26
AFE879056872C66583F638BE1926FF91FF4C6D7CB8D25C5A1681B17FBC0A79AB
F6821BBBC143E3498AE4BBBED2D87B8312BF5B8ADC9A3899D3E483B455F283C1
2F6252F0CD91A3137F6C78874FAC21BF5B764CB017101F33B539A10443B686FA
F6AD889EB64A5E5ED1606D780F7946C0976BA87FA87F25B081199A744029D499
D0482F7790DC2F39F22DC92E262F66E09CEE0AD0E9C6DC512E59487B064715AF
E084FE60F9C4FFFE40456C63114BC5B895B7A035B4C49E2E613254D78E90BBF6
7037C7475FEEB31E800BF056C6A5CC4718CF84900AC0028D081ACEDF99D92BA2
51F155F743C5C2D65FD65C3443F054C27728B7363AD4E28BB055ECEEB248EE58
2C3A481397F6A1C59FE118DC340414DC4988AB859795B1C6BE79E2ECA9C0E808
48B6A7095B1F0335D133D5FA73C9F86E3748125F180145494A42242976DCCD72
8DC8800C19CAE9D56A4D0A98DA1902F42A0A25800CC68DC967D7DD5BA310E27C
DA6EDBF504CE8D1E16350BA379064090448918F4B0B4380B33F3FC4F114A4186
AE4B55130F0E3AEB285E0C71DAA4C4AD8F8D8DF8F308048614AC5840B889450F
FD3F5DD6094F1D09DD3C45ABA43F75774C18BDBF62457035402B5843CE089AF4
22BE1BB15A46FAC05E4954225470C05D2C36FF0C8D8306A3D328B315A7D248DE
9E1228FB8EBB9B8D42EDEA01E8DACBB24595475C1B8EC910D0DC0DFD514BFCDD
8CA117CDB9A16A2E1AC5B5589233BA542AF0A2F6B5D631E5F884C5757F04D44F
A9D99DCB12B1F6F1A2A17EEF44C9A8CA32708F001F2FB5597E0F4E5136ED4F2E
0BA80D42D4A570676CF4FC2D6946CF306CCD03C985250DDB5B23D0BEE057C56F
51F453263D1166270EC5B9C3E34DF0D131F87C9DFC8AD559A172AF5709F6563D
B4D13B6B7F7708ACB23CD5BE069A52F1421BDD8BA06059811D0C52C03B684B1E
6B2F50D6011A5DA9A8270D1FA299459BDD8564040AC921C14C9FD80A8F155872
B17EEEB3D7379699635365017B6231F846D01ABD758970EAF81CF77E7E557105
5B39FD17056AA6F3F563C793AB02B97CDE2F97BC2E7174440420525E4188E3CC
0C68F73487B33D2F3C69980FAA42340FF5AC4924858B5965F2A0F5F584F826F8
B02914FBB4874794A3CBC3ADC1FE45289D02F5E99B59EE2283E8B23FCC2894F4
891173F9FE2AC1BCCF6DD682ABC556D51AF2559F8FBF4F621E4D2B8214D3EB01
9773E492E0DA33321868B52BCAAC67A5B399C015DCBE71604BDAD1B96B825234
3CA8823FE8750CE245C33F0B927F6A0699D7D511818BD59A0CCD86913A7469C9
14724A5CC26E52FCC44548BAE57455A928E469042234B19055E3B83782404D3A
DE84BA3C79991D7AEFEAB08D74A4A81F976E014D2E8AF2112C1FA48BCB668C23
29869B5DC299E13FE0AC8D524F3783527A36B00864B75BECE044B48AB2B44741
5264BD7206CC614167C91D4F8BE63AC91064E336A909021FE0F0E43676B5E83C
BAEF8ADE6C910F358F7CD78FF188757CC465F1D990F193C38E316D2576AEB556
6AF5FED35F156735D376A882DB068883337AE21B3CCA3210088DA69AE16C1995
A07E2229BD61DD0CD4B7A58CFD2685866772C0706AA87A8FC4251FB26D2AB701
9142D42446296EE28AA2C8015C6D1E7FC5FF52BA3E5FA91E0D632A6BD1461EED
C7F25160018426B01714EDE78B2D0407129766300F7D471F0FA17FBE6D6E8467
9728A48453A20239719AEFD03B94101DD6B6D1A8E836376CEF449E328E9F7BF9
157CA2EEFB596477B309D0362DFE8B03432E55FB8B192BB8CC55E5637D97EFF0
AA6908FAA99FFF01216E0A14072D217DDB5DCA3CB1A979D3CD96EF1835A96DBD
06EBC6DA8A5132BAABCB686636ADD9F9A88EC132A50330F9C8A4604812A6001D
8ADB5D043B2E5EA90E6A5B858BC74A08F3A43CC035AADE559ABFBD4441A605D6
24473C1AD4205D006137B5A054E67A7EA07A5AC6D649F0B0388354DD15BE1689
2150C1CCE871721258CED60AAB649F923BDAD45BBC75DECA8295257DF63B001F
D837A9E16B291B789859640243DBB9284687BB90365DD13250302DE51C037CA9
C30C3CAC5C575ACE6BCC6AD0CF99687DC83EF27F04BA1A1C2447DCFB3CE65D78
E4A093111ACBAA98536006992DF9DF03F27B24AC1EF360E1C3D4983441D4B83E
A4FD00D852CC101ACCF060EDD42625445B97A91F66A93679A317C70129C32DBD
66208D122FF184A89C8D783559ADF5C8F37B424DBC377563575ADA826BCF5867
58DCE31125911851302486A98593780638B6FDF3C54D55FAB1271BC5888F18F4
595C2BFFC548C8BC5205962144EBF08C53026135AC215895CA9277DC7FF0ED55
64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 25 /pi put
dup 33 /omega put
dup 39 /phi1 put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 97 /a put
dup 102 /f put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 123 /dotlessi put
dup 126 /vector put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD3671E815A6D
94820D0C87AB1DCEC251605D9490BC465D8A62C95B7352250D76D9FF1D3D5A32
9690780A5B56F9BA2083B29AAEA996FA95246D55AE88B0D3F6F307959251AFD9
82650287B5A98758C8FF3A60C40CBE3445ECB497F3E04C98DD52DCDB2F632D5E
FB5654C417A12EEEF2DB5F0CC54A379DA75BB9DEAB9FD9F256C1B832D55382E1
22A7DFDC37044BF0CC2CBCC4405D8A3495F4886001D615E1737FD9877EA3EB51
823C2FA1940BD8BD802C34BD648B41E268B825129BB13543961334C69DDD8407
97E868B79C83752682CB506FC1C801F63AE7B3B8D7EFD23C54232AA97FA8B2ED
EF2AE0382B4ECC8B24CFC62F698F8BBC90215BEAA8446BE6D261E30DCBEE8CE7
6BF8D0E51BE2597E8086F27D4C58573A20884D3D77E562D3FFBAC63948DC1856
C3D10D9D864549B625ECD297C38E6DA6E587C23EF0F3409B7047688A30603AF9
DDFDCCC00D3D4EB182380E87F7E8D78651DEF235C7F41BC6BDCBCC0AD9ADC2E5
DA9FF6B8994A8E47A5E85C13176B769D3B6BC490736A0DF6B18201426CD8E60F
E84455F023E0D109536FCBA2C23DF091A99F114F1DD4203FCEABD999F172ABBD
7AD46E304E84F73D814EEA2E95B4EC48FE6AF70E5055A9728E9581BCDCB32DF3
E28548A6105226346D0AD2DB16E3EA02040719CE9C35CC932B4856FAA58E0ADE
5DAC13D5B1BFC4E95FBE574FE6BCCF0013BB62D89FB0FBAE8FF89165B98DE079
87ABCC821BEFA442C87F9F5614B871B5CDFBD6D1C3D83E1BE85BB01FAB8C4FC6
FD06BACB9A157CEDAD3CAFA0484DB34C84A8A4C302C9ECC2E4A897C02AF469D1
DE992722F2694343BD104EDCC6D3FD1618DAA4577EABDA8EAE65CCF983122572
CD89CD18F83160432E8FCD61D13D16EC1AD0525234F66B0D11D12F07EC2EF964
9B5C24E1C2E22B2349BB7FCA19F6AE03FC15A5B1160909F8644E34AD6F765B6D
9351113878AD6BF65757AA6771B4C769CADCF88A042948A5899FE940A25BB58B
C507DF209FDFB99B5C369ADF0A4FC36DEC8C679BFAE5CD80E853C0BDFD6F038F
3194D41598BDD15787799B546F502C3EB1EF8218699BAC904510EE31DCD0D6A0
02FD5D4E017D1E1F25DEE52B7155F5E823DD2183445737A6815BFCA26BB0D64B
79A652635ACEF75CA3CD198217FF65B3880D88F933DE4493C8E0B3918182604E
7C487E52E0B018644286671F6C0320B5A3E00A6A3C399577033CBCE41A76A6C0
6393CBB7A7A2CBEDBE5DBA12E10475C0C14025E8201C027A3DF9BCC0B4C20EAD
E33B71ACD17700F9BF5996AE082D09CFF7FEE1DE683571043988D3D44DEB4AAD
2EBB392013D137993F824A75EC09C1F0556C11C9B30E5D339A90157DB0A0D727
3E13DB85C781AC03269098EB984C972C1C7BCB93D8E49A3C511478ABB54783C4
F7F8BF80849D297174A5195287CDA176711E683611EF78D3887C2E6D879F6C6F
BC7F141AB8FFD235236BE97D709A5E14B9B1F196D689569E81C84F3B90B27487
0CA96D010918AE33B4916B9656381C23171A96767E0FED0F1CBBB0A3A7892567
BEA46F083D87CC0E79D62DD8DEA4E284CD8F25F6C066107538628D627D24CFF0
0E00EB4BA0E8B73C51849FC2C793B94AD630AE5B3F069B7883506212A83E4DB8
96AA6355103067C1D35A56517B582269427FA7BB7734070B12D555B1F69F495B
92AA815B60885FC742B14EB81CC2358773CE62F031665118A5AAA982290CED4E
E6E64E05D4B1766A0256303986C38BFE07305246955076AD584FAD5B5B1A5D1B
AE4E7FC43CA31CE6A1ADA75BD96C299F1C755E339FC9E54D8C0B6D6AD8E10ACA
2A63507391C3F2F079F7EA1D79CD0C496F07932846A285DD40C9B5F8B533014D
DA9E810619E4070310C301A27CAEC35AE1BBA0DD6374C6BED393638781758241
6038231EB4847473B650C674E789F5D706A5CC21AD7308233FB04C1DC16A7C3C
0B84C8C31610AF30B955859408E8CE35253E104A1E366E6C8CCC3B79D2CEA3B3
40CDA9E93A107A4C5599605EF540B90ED60CAD814F21B5C5323A0F3177B83C5C
C17CDC874A04B6FB50052F93A190F99BB01D58D7B544D216208912FD5462C99C
EF13A40B2605221BF57E6745EB3FBBDF6727F41FBA51A22AF4DD50F4BAF6C3F6
CEDF4BC20F67126147BB25F5BEF46BEFEF2E02164D472ED7588925FFB06EC41D
8624A3BA8FCED83DDC1E1532B2A2DE9EE631B4C6FED7B656682DFD4FE4C654A3
B9EEE735A89AF30E987A239AB789A724796A18302B7CB6C7B47F930C33DCE2FB
C4E9B72FCCE134D1E9113BC6EC883B92FB125A5391E4417C835CC6FA11C34369
A2170EC9F641BEA6E1A65F58D1805F3DF4E6EBC4D65BA1584CE111C8517838F7
3C273224980CA26D6BAAB9E5F874A54749AA4B337E748995A74E9D831E634B42
7847E0502E63B2C33677CB8191C1E8A2FC8B82A7DB3FDCD9D52D26CF382F28B2
DF3CA14ECA628CF9B0BAD2CC7F3175B6EC20D83E0C21865AC676740FFCB3235A
CA56AAEC98EA77048381A8F26FFFFC130545E06B7FB2C80EAD1D0BCA8B1C0610
DB262D534CA8365DD55CD9EE5F5C6801E6B1F5D2E8A0BB628DF9362F2C138E76
E865A02195CFCCBA48FAB94F32C90D4110818455DB71512BAF1C6418149B699A
825AA1BD73AB84CA779DA49BD6AC237E633AD0C7DCE0547D46D52D8F4DFD4FCD
AA1BB0217103606288757617AC5FC73480A75E50688A2EF223E167B1242193BA
039EBC288BD73370CC912E2EAF1CCB2E313BCFC1383A5A978DA1552B85C59B5C
317A6A310A81168602E80E92B2BD553BC5BEE8E0D82D232F303CA634336E926F
041334BF2E8405AD0F578BECC661E05CE0A5FAA5E8D67DB94F3CC9BA84773A42
DE91C044F76D8FBE9FA09C09404AC6CE49626EAB19AEF7C796D026F978D7B66C
0610C0E58457A6691229BB302C71C19EE5DBB12E2EE884973511A4E3A0B26CDA
08DCC5455C76647BC6E852CB3CCD58B6EEFA0B2CEE79D98D3BF212AB73134E53
800E8D4C8550718FDA42A40C75E09262F14C7FA2B0606D7B825643A620E430FE
E40EA87CCA4500B9C50E31E723AE176283AD7FCA72FECBF2B10F7A49AD61CBC6
9B80608AC6C02D26C742F5B826F078574DBE15EA545D676129A7006FB90EE342
17664F1723B73E18D4BFD0520D6BF82D10547A6EC006B0A6ECDB8CA6211EC7D3
F517070B8868C95DF98FB3BD66E8371482F53A32C306557703B07B70BB576EE3
FEB6416AA945470B6F3929AF0FBBF98D085157F8062971386D6F4382D8C02C99
CBD6E4EC6FBDB938D93CC057EC4F667794CCC6F984C70F2F447FE8E5BFFCD573
24A14C9EB89B9F013E1BF923110CB8C220C000312FAD951C2CF3E48F176F6A55
8E59089141076833C978C942C9FE72787D9199EF037F10AB505708B119077736
81AE40F3FBE1914FF7481E7E2147D3E495AF9F480EC79A58797DCAF94730B7C1
7DDB74F7A4A2A885DFCEBB90311E2FFA7A7F64788506045268ED7103702AEF74
9781A2B676A0FC96A1B30F5C6B0F22D2EE34FA80C25D6C122D204DD6BAEC6BCD
21AEF69C908C85829D4262BD84F84BC843589133A68B2BD0D9776ACE5B771C5B
7DECC00D318DF0CC1379A4B1D47D6E4772C5C460CBD2DF15D7C0289A83809AAA
57C3ED5FA0FADC6923EDA0E5824810FAF4A4AD32FAB17258B207A4FDC4DB4578
8F8818EC931E95F43F73E89C9FD8F30F155DBAAAAC1B83722AEEF009B3D8FDB5
7FE001DEE334D65B68DA7841A5DDF52A23CA266AD097678A239304D417DF3A15
51092EB7ECF5055539AF297EDBE881135F724F42A1DA8FDECBF4E1623D7BA381
08720F28C523C0E09AD0D65198271BF9028CC85F056A1A7D56FDDC3E95D4DE93
3CC1738EE18FDB6EB709596DD8A30A768F562AA658C13079C8D1ABBB5970C3A2
B43D664B0D23C21D9DC9D6141A4051BECE14ADE31305FD91E6616908BD2DEA9C
62B7E20E723CD5823F8AFC62F88CFBFF02C059296017281626FC1BBA13A4A7BE
76AD50F2A97A1545DA330FC5870D9D2DF02FEAB0C7707DF28F3B2E894D2AC4F0
4FD1B492238AE0DE32F7A22968082E1F04213983A97F45C1153740339BBCBC0E
BB3F48ED0F25EFE57DB1FD61AB10A0CEDFC3AC6FFA01818BB6DB1B0FE7B93489
9AF451796A8A29CE0055C13486235BB237C9B3A4FFC2BE306B3DE5482B562676
85CDC366ED31EB134D1CC27369CAED60B08D27EA95B66BB942F42DA872B16194
E721DE8C80DD20AD3C01BB25152649AABD3AE65067DC8CA50512909DDF62B4CE
3B1E5BA13B119F585FD81A822BF7465A65FE2A6FCEF62FFC38CE0D2A1FAC1F27
648E69BC25339EADFA572DC65CB085C3FDCCDDA3D04C98EF210D5F112392CEC3
45DD5D1ED749A1B50BA7F7BCE3B4A18DF003D6D1AC7D9A27534FD5767C44AC4B
75581B80DA91A0A129C43F329EE58563759387B24EF33EB5C51A19DDAF1201B3
5592FE8BD96F29DC15303CE44907573C2C7A684FE34CE92629661A16F1C671D4
635C3724405C5947948079403C389EFAC17F243C5AD276386DCB5B8C1BDE132A
20B8AE0E8818B1B92BA34BF2DEF568C80474F13011279615DE2D611CA53EFC1F
899F261066B3F5204FB28A9A644054248EA2453BA5954E30274998D337D44078
6B186B827D7CCF3CAF0BB7BC3EAFCBFFD04209C05AD6B8BB56F1226DD5522BA4
AD6F666B9726117F365B0F7F22FB01C7B9951A6448023E1DF9E5F57DFCEA7166
5B11D8D29AB1B5FF692670C0B3C37FC9D3D523FE710FF61D76C6A72F6CACA274
BD35BAF4DA75A14E011918E934DCC35B7C783DB0741B10A0316AA897A0375524
00C4EABF3BCB62A6011AA483A3FCB1DC8FF6F004A8CE1453743C2460F37F1543
9AA3DAE9C18CF99906674597B41F0533E27690E0D70181D7AFABA8D3F72CF678
211814F2F5F2E31A08C037FE6423B5B1CF8F4148C00B34C3A111857DC61C8940
535595BD683AE3117CDAFA450BF8EFC1D1DF933C9EA965CBA91D0B0BD54C773E
4F9D34D93CB2D9FE4B111B61F646DBCFFB24697D329C7C0D7D6E430528804CDE
CB42C7C59625D6BC7A8A5565EE1DDFBA11B3B9F421F03ECAA6E95F783CBBC7D4
46B9536A93C5BD9B242D04E3F8F36F3514139B8AB89D9F37D28585B6D59163ED
1624F0E39E958CCFFB6518CF0D8099DA66F1E2B920B151DC70B5DC4F0A908ADB
9D4D4114933A24245EB0AC4EE6DF36FE47D27FFCB76E89DF02DF28DE43A2D02B
928685B75B1A8C88B143CDD77C0444A185FBF29B76F9C3E686F216C0EDE9A9F7
B3C99B856D414AA467EA45FC25FABA6DFC32E3CF7E8B11E74071D57B299B0AAC
C9053D6B6D862DE840C8866D278203DE4D086C104B9D3B06490D1256DC4FBBEA
9475FDE03DC1FAFFA74C48432190CA0D3A70C4D638ED85D842944D019833551A
3CC4224BC2739FBBB77CF635AE79045E8EFE5F952F56464C735E695727312E7C
0F6CFFC5C1EEB42BA6422D708D56EE3E3BA16FA60073CFAF2EB762480881BE12
91BB54F7EAA132FB6C64AD9FAECFE6FA7065563B3942DE6E81E6F9E4F0A08E2F
80351357B265E11E78B6E7B34662293A5D0EAC9EB36E6EA9A4A05E53623CD1CD
F17ACD29846D365CCAFFE35014587D20DFC6C98902CBFBC8FB606D8DFA762A90
DBF8A8B9E88ADED1D3861B50BB947C95E78BAB430E28E0DE249756194447975A
B085B622A3943DCF8B90C0C77B07A383664B1B7D3B2BFDC92DC94893E60CB78F
5E46D562970A39F150893C467BA43046C4633357883CB3620589AD13AC156970
B7C4B425ABFC5C15DD4955917A914CADF677E951798D767B0A3ED2FB78FDD648
038E4C1D8F2969F932520CA8851684DE9D09541CF5BAFB9838931C1CB9552C6F
2C792741E43397D8261082E7975791C5796006F4ACD8636309EDC8F99BC030F4
10215EBC29242F64AAB48BE9F7ED9C5D02D17F3D0482E1B96F750313DAB09D0D
F0D60DEEB4B2AC3C69A66C1F0195B2F4488E0BE79F5E0824AFB0D9A4435D2711
770D2FC827AF775A2920912C733B3C76C312894665784CC94B168552498D389D
D7B1260D1F4D1CEDD3FE17504FBBF832442166A553635807E63B5CC9A509A2DA
B7FDA5EA0F35B9F1027C4F3DF9FD8EA6A3D5A28A26A7FE55D460D9D5BA7AA977
F360DC5E48AEF69EFFC13697DD7A632D1ABD4176D6DDF08037C2E4C0E0B97382
AF69BD43026FD9AA28764D5DA8733AD023CA8F43E6CD7E9C686F194FCB3B5B81
021DC9AE86A7DB6748EEE7F02464964E47254EE4A8DD94A08A664B16F13B2D3D
EFA9C28775716171B2CE1AABA6617397B4B87A2A4523C0A4B90B6C73811C3184
036FC3BE900F34CEC16D93E9E1D9307D0E5503D53230760F82530FDB0ABF0CE5
D9F9384B94A8A7F314CD630F4F8C3C05E2A592DBBECD53A2FB107565863D093D
BFA3889BBC60483F610FA3008AB3FDAFA7F94E5B033EB00BFD1E6D105265AC69
362F5B8A5E9B73DDE1298A9FBCAB78DB7CC30EB4771A8436BEBA43EB11521212
9B17D62269CF13E96338E3E002E1577F121DEDF2C54CA4DC08BA8FF036E002F3
70EBF6BF8D9AF97C85A09B4E11DE6CA0A498CD7B38EAE85E93AFF9277DE72FF7
A8AE10329E94DDF7A8E44C247692663F00EE4589463EFE71D5177EE64AAB45E2
5D1D249BBB6B31D4120B334399EA88E90EF2DBFB0E4ABEB166EF1F489D052BB8
957A72B176BB4B3F82782A76C690195BD5A8DF981A8608325014FA1AAF05E982
80947A44D2C9AA8C68A07B5142F2D90F83EB18A3353F24323445D2C103575519
D388EC3CF2B90FCFC24F19F3E6A65EADAFD7CBA1AC6497E73BFA109A60BAEA18
EF86BD7CD7ECA18606D912D5ED2209B5B52487D58BF57FE2F668454944AC8600
3BF57926F1DDB4056C102E8740DF7CBFE97BCE1ACE712DAE370DDCB7F60DE742
5016FD1892A958274F51ADEAC9D735A9EAD4C620900737D841EA4B884F2650EE
93D7232815FB7E3D69621E0272AB03EEF7A90202D82D8028E0EB5D012434DDE2
07D363CF2CCF576E88823E33A7B7954D0178D1160E526A2DECDF6B04144E4D5C
C9D9233D25EB2B85F994F7D37EEE0A7028DF833871CC453963CFA4F7F94682C6
F2C4FDA79E5DFCE6A047DDF5453D4CE0CE71407D6BC2DD30F5DC6559378F10A4
C2EA0A0F8C99C05EA2FCC90CEC98A2A9233B5A64A7C1073CB636C4FE6D0B8CBB
773FAFC601C0E710AC80118D7C8F2504624A79522F8A0BC7BDE8464B4BC519E5
34A714D12AA8D15CAF1D56D478490F2F763BCC35851EA95BDD6FB85D8F245B68
D2892699070731632E1C5878C2C260DD07CAE2744C598AD3759A497AA62B9C6D
BE0F662E94890196EBBF392EFAB8FCD02FAA8BDF9B660DDEF00814F58D8C5710
60E7D171BFCB1B7384089E7D82B72ED8743DCA2BB061618BFEA404736CEE5168
B2858F71AB34A4EED320CFA364233855EED5C49AA98014AF0B9231045495F027
11EB8C3EE3313C01A178903D7C9E23E12D1F3B6F540C2841FEFCFDCAC8DC039A
C3FF87EB4BCB9FE42E02AD9011F718083E7415E9FE36A6E658BD6D9B8E11D125
B347AD325DB423C747D6AC00D5C90E7F902293E841DE58EC4E51BA76CE1914AA
B66F99B825C263690A3828934F3B183EDFC288626E56DCFFB160F6B524A12545
C8661EC31A333C1C5898BF7ACC3F0AF52EB6F05AEA295281E9DAC8796BCC4166
404B8E4FFB2123CBFFA3E738D0D50D2F53E9243ABE4E0BE0FA17F60A58886D8A
8D78F1B6C88EEF9C99545EAB13526F55A7D5D54A520C916D567B4D39D5EED4BB
1CB8504C421FF205E82E333EB4B56908B1AE6B0FB071BBD133CF2C4E6EAD8CA1

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 99 /c put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A27C8E215F5894EAE38B79395F23CEA0624BAF427A30EB6E92993B9
DC53E690A5557FB4E93ABE9F95A4D76117CA26949D3FE6160074A98F5E9039E7
79B826B047A5B9FB43E3B96CB32927A36FF5B9354A2DF97AEE0D09A156F4D61E
BFAD51DE7C311530920A93FD6EC3E470330AAE465EC3B744AEE2F5C10C12018C
E74015A5F973442115232482E21867B22A7AC4887D3E82F32C16064A2684EC7E
78E1AB35E2D841DC068CAC8BA46B8BE39AAC8BDDDD0509EC99A20D5C55887C73
EED1703F1BB63E42B412C3892348B7288749C81270862B8528F5772B116BC54D
ED03B006A672B406519BEF23B160A29C62B7782B1E4783A390315569E15641C3
29491CA0DDD5BC6E2806AE36278A89B090DF1B6C22465827E8A0B4AAB41E72EA
A4265BB0838D519432023A2EA97D0B4C73DB1D4D77D17EAA35BD7DEF5A54D050
720CEB18C9EB433AB4F7CDE57AA7490C0803B59CCB38B77BBF8BF077458C17EE
6E339E5C3279B78C4BF98B23BA5E8AC29E77CB6A755035B1B05F1C86833EEC02
FC813144F534CB35DBCA03CAE19A98F8114090E2D39F9B2E15A5CB99CA6B09BA
4354AFF8D0B4E2012FE5806735A53EFD99AE1170DBDA9AC3B3B72801E011B0E9
D84CD6456CEBFEE343C838665B01338929DD79B8FC1B2E7DC289FFC702276681
AF7D03B31878FBB1F73E41AE2F3193E1219B298DA01C6F8EB2A860446C717D6B
FCDC00CAF403BB449F19BE418B41F69BC01816313959F492E6B962B946D56AF4
DB0E0BFA4FDFD2600F36C66B1AFA881069F00BA6008BDDB01D403CC40C5F2BE9
213AB7726DC814F0D43DC49B40676D6859E3A1225255A6CE9488C855936EF155
DC90A020CEA122A36D71C6A84F4F90FF43CABCCE04E27E3D9DABF95CE121CA4D
9ACB9D8204F0C5D2E96F447E8CD23B3F1329E1F019B82F2E8840F8D2AEC81319
FFECEFF0B5C6F445770AFA8DE172104A59134C57CD5CD0305BBF875D7087C62D
7707E16BAEFBAC5641828BC5190A4B2BEFB1750D0B7F56E52DFF3E48051C4F31
CDA32A137A055121C8A23F7C3C614B600D34F32192384592AD70FFB4970CF74F
2EF0633D73C071CE2E9CD62DF9FE0E79128AE4CFE7206A6C4AF118E348E0BE63
120324CC33EE13425D8A10F2F289DBEA3B9DAD21E9C431EED5236B67B0552D00
C4D3114908981F51AC4E66A3F825635F6AFD3CE06BC4717BA198767A352ED992
99F90E901EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA2BADC9BE98B8A5013
F998D83349B69E4DE0A3A861D03CF39840FFB6EE0B0A7D70A27C36C456F678CD
C3008CFC463EF5D0CF683CB9AFFE10DFB913B41ABF072A03C85028A5231B8B92
0F09E9FA8EE617DF1ADEDF3D3190EE92A37DBCA8EF80565DBCF15FF6946767B9
E7D671BBAA034E8C3200E3D3060095F72715128053E9B14A055D9F688B1F4B34
2BEC52B478206ED9F8FAF6B0A70F46877976C12D194DE33DCEB8DC36446FB24D
63F66122E702CD92ABC228EF59139A10E055CF9C7B771C905B7439EEE46E2156
6FD2C31843EA7A77D900F06AB636BCCCAC0C3EF7B33C7D51152999BBC5CE7324
27D5BF6FBB21017A5A32FCFB655C48E611F1BC41DF08C4E1BD72CBF21EE3F1E8
1AEFECB531398B9E11A2D878FB2541B561AEC1AFB3BD19017BF751F81BC82E28
5FD99B6CC9808D4BF6C5E91C51725CC009762BACDB4317A096B045AEB594CCFE
0E61F5230FBE35395BD8CB1E8273A55216313CB926B3E29419477FAF092943B9
666224238D328C48F6D8A346D6469B9A19475976933B742305066D1656493996
A2A62906853211FFFF96A492130ECBCF7C8E0FC9ABA3F6DF622512CFCED538A7
C12C1F974E42BCBB4E72FE4BB5B0A3725EC51012D9981FCB094F2C067ECC3B77
246F9F8C8E7926F6D8AD959DCD90E62B258E26E398918A03B37FA4B666C54EDC
AB57BFA7E3B2B839838BB87C04841CDBEE459B73A917E949930010080C12CC74
EB8C5288E168E18C8694AB38732A7BF2B0150F2F0E35F4D000DC45CD6405E4CE
30B551AD5C83F6F34B1E87272E8AC300761CB99C905010227FD17AFBBC17A93D
71033DBD26727FC58C4C4A2F94FD704F48109C5D4E89B8B17CD62DEB24EEF435
06A495698C7BFF9FAE2B61B104B296F64386E283565B394CB232BBCF3E4A1453
1DCDD46B9BF908460A5BCB2B4BB954C664B7E1539B0DA5E294616DF435DF8515
DA06F529E3B69B8925A0C25EF78B6F2C46B77A7D53B3279DA33F642F5DEDDBA7
61F589EA1119ED592365CC0A48004644C0AFC6D3D8CA7A21BBD19A17DE87E763
07FAB282082DED26D9EC7D8E64D01390E9E92FB6FA21943BA9C3AA45E9583A8E
9C9216B45B933D0DE9BDFECD4A17063BEC1E0530495391EF6C45BE6D1FB3F56C
8F84A7A13CCCA4C9EF81AFCC44A5C176DDF5EFF2C02F57FE5DDAEF20AFEF492A
D9E84BDB168DBA8E27EB62834297D350448774748F9F5C446F178F60AC35DE1F
6C9E6961565B0BD39D33437B3B80EA23F583A2D151A81656B554A81E78DCD52C
B51E308FBD0694682E6073FA919FFB035784EC767C6F3684D7B3F1815D8C7E20
5EE4A3B56C900FB512CE2E2FB1CA1517AC153BEB00C19B57063E9E94D5342F88
652280BA43E017C1C7E2660E7261103A694665AB16EF73884869A3BB0D1D8675
D566F34A4E64D5034E24B015F3F7925899AD16E60485069FCAED9D7BE6D7CF26
877B4C9AB5A6411F9C6038F6D5C4CF25A8CEE1B8D99238E434D91B38DD6853EF
95535624326FD7BEB45C2047DEB00A172677778D6098DE4AF3803D3C5533CE7A
B0D081680DCA3CEE0BD1D4F132F1EC6ABACC4A783263D737F9A55C93C19EAE15
7142016B32B2A1D59FAF2CA96C13825257C11190161DEBFC0C13CFAE81082E12
7E02FD6F00FCCEC9AE784AE1BB5E3EB51D3CEDED7DB27F2AF86A099AB5187AE3
A0B25AE0A38C1576C9EE90FE56C4E3122097CC0DBB2D41E210178A37B62B1936
434D8FB6B33A096AE6C43208A01ACB15214D753B16495E03A66AD2997BE2191A
A4F61495D209E55E77D428B60BC26897B9AF5864B6DEBAD1B289DF0520EBA208
1C71E4FAFDADE04A804BD07E51BBF9B64C89ECDA3A07157E22FA2F5C55224122
BE37EC85504A1F03EC38F4A13BD411B94D2B6CCB867CE7EFA872368A0D54D99C
63CF43BFEE3D9329570A02F5FCDF3B31BB1F33E0535F04B7FD24DCD7F7B427BB
40F6E14EE716C76DF6DDF95F6F0428063739F54DDC9788E738CAD84465D8B831
6A5C40693882AF35F27640FCC0304B4C417FB3FC198B0CD612D83C97FE9F3A3D
BFAF0BB4195AA7484CF3BC60CCDB173223E665269362BF1999B6EB813333F087
9233A1578D7EBCEA793D19C85F2DE393CA48237D8533028ECC575EAB4F990B88
859A72C8866151FF6158B9590ADFA8A4C3EB72F4727046F0A80745FFA9F2BBBD
E4A980D0694CD0112B3624C6FA312F0D23D351D20FECB9EBF7848922A857C718
9DC4FF22B4FE3D1D90F99AE3E03CC1EAA572B3E80BE8694399ABA13C6DE8A64B
C2A96322608509574CAE73BC125319ACA5F8AF44E2EA08A9908BDB98FB873EDF
BFA82BB27DF05B03CB8751FF8CDCB00270DFDCC62B102B56776745F992644A79
28CF96BF99E23F157AFA64ACE6ADA2E2C8EF6549B3819594FE9957FBBAB26687
3D84744A459FB70219F050B1E8ACFFBD64DB90FBEDD644435758C482A8514909
9A124E5A69890997C8243CFEB822607209ED86072E01D1C34AFD538C11A96393
05A4816FA87DB44FEA0F9EDA83373F479A4CD731B0DED78331224260F3BD8309
53FEF044CA9A324B9A65C2CF10D9C75FE3F987F9520741B71565D72AA050D0C3
F47BA1DC24DAECEBCC07E5AE52B165BEDBAE752963E0A03B89C3D2608B34C872
211583C28D981AF9CEDDD551D0104355753AF0A32DD8DC9340FA93A1C2CF81FD
CF7FD1DB8CAF9126E374323846EA4CDE1852F99FF290E843868AAFA3ECCA02B0
8A28DFDBE2CC2DEBB90C27F875186E4012F92A613C0D745F09EB5D80772E9DC0
7241B23BC912D8E15928838882E1246CC5048CED837035D930C4D3EC330BB760
433D8A9E9BB02419DCA7EC80B84765AE41730756B5A1234F80EE3D2816D35EE5
F4C8F29E20A26B09F0DAF230A1115A8BA24F28DC3213D63EB90379898143DB39
06B8E5FBA46649557C2ABFC3754928F3BBB733BF0CB115FEDCC018E29C025EF3
C56F4B48651025037D21E282D6F7B6EEA3D2688632DF10E6D8F5F276A5CE1D3C
920A07971B92E78687252BFC06878E26FAD59769F084D59DCDAFEBC838ACA49F
AF8FE55D93DD44CD03472F5B73BAED3710BE122B8469A6224494435B44343082
428B4C7AAAE9B11BC90578818D2E40E0D4FCB7A883DF40B7332D8C53DAA64298
7AE94D89B23ABBDB36D7986D7C02A2E82E7067FB5B9565AC5C1F3DD7D581CD75
BAB4E582F92E21595F4A62DFA9969F3E23E09D362FE6C3206B35A101B8F3969B
D5E0D718C575E399EE848A3153AFB4BB60D3D8A9B6235A2A8E50F7B3187417A1
D814C8C0CE383D3FC81976D9E4A9C8F54DB5A53F81B855706C4BCC8FC189C4D1
F60E6C0DFAA4C1F8FCEB22588F35DE1E7B4EDC130DD739399E84953E70C41558
A9B17470D83216575C5A7FF3D5D7AFFD1879B5497DE725868398FF11ECAF5F43
67F29D07A60768D3F6DF1DE11517FF6E8D64860A46E9BAF297F859C51A360562
6B7034685836F3814943D0A815431B34980C0B162557CC4498CFD3218D58E527
E53E61F5E449805E7E79DBEE6E3F14D7C406D2FB1212754496805CE85D6C5EB1
E7258EAE8CF020C95AA78479D3E42F5060E39992DE38755E347D10B7AFFCA765
26DE50D3695353CED7FD13BBCD6A6C574ECD3FE4BE83083144EBC0B0448C4F37
6490F561BE7194315F8F29072E11ABB5C0A38C6B450665508258EB6C1B67DC9C
E5B912A91FE5CF766152BB9D99C881BFB0577208F5E579E2CCA5018A8559B728
C1562101BC677574BFD5AE90C7A7DC2A25C60165C1A41BE7082C6E81455EBF04
B70F6AD34DFE82C116F27AD64F6C48233BC9F41DB11957681C18B446CDE90E3A
C35FA1EB22160AAE219C8D7AEBB6D0AEBEA8F4548B89F691AF029C09D5A60FC6
A66611427E0CF66DB26F840D770619A02CD71064DB2A598B9D5C85E4E219EFBB
E5ECDF2818EAFC6606699B80F2B806BCFBF4DBD69EE774D0FD9FB6C24D8A8FFF
A8124CE3B7F04D0E808D7B85456E7D2FE5550A1DFF7469584C4D80502751D965
F7182A1BB01E9E74C7F3437B58346CBC3E0B5E038C90C73F6837717AB8CB1488
9DBBFFDE242C8E68732FBB5960615E8C4D8CFF5603B67E204D76BEC13126C231
AE9D56D36BE039A630C4D1A914C297746AD019DF5E9923C3A6B4A7B5F25B1440
FC8A66B0C3B142873C797C130A8D3F223B6B698D42CA32F45047850129183B56
E171C25804C38492F01B420B82695D8013683B45C306183BC98E42A110C293AB
45CB46D5DC4B7D94ADE0CF3AF4457AC4E73F1ED92EC989E928D40557DC2EE793
1675976C0AF7C8D718A86CCF2A3C15203577FA014C9E27B8AEA6DE54BE2696A2
9E9F4FF04AB84C2C9AEFD549B2BC209EC6F813D5D2448DEEAB759076F807F682
1252AF778AA409433B25978D8E5E0E93FB90A0B4EE9DFE6205FDFCED575696F9
21D1566CC8D6D498B0F1E53488EA7F4BA6750D6B48C097EEE1F0F3656AD3D1F6
4F507946F6B06B4C393369583996EAEB495DD41FAFA5C718A473B95600DC2838
11EC57FE1C0A94C92ED323618918A3C24F8CC7DBFC4BEE83C1F01CBA45D48499
4F8DEC084FB6CFF3D11528B900D04C4B996594428657E1B80807AFA7B3ABCE30
306EF96130C1E7D71B9611BEC3DA7F3AAD59AA07F62B08E4CCFDFFD834D565F2
D3ECC3FEE825B1DBCE083EFB9A76DB964AE225DC730B46A9F8D4562EA5C29BDA
C67E091ED46221492D38BCDB624FD5753A622E64697EA6B6C482C20AEBD043AA
F52E318DCD1C4ED5C8860A14B4B67E2ADB34D77BA4D3C7DF6D2B35A0A118E5D7
887D6271767B54EC529AB9F55BD91A041A3CDDAE7326B9DDA0275285DAF56074
1AD7845860E260A1378B73CBAC9CBB3B31F6C2DF8314D7B66F0C11FB74DABECA
88B5E0119C3B0BDA44656F981A80C7E267BE576FD355ACF798EB6086D99DCAFA
AF290DDA7AB4785FFDF98A2A72EDB6ACD10B8DB610F0A3CEFF1EE2941D2F768A
0778BC22525BFCE460A3306F8C1E33987D3317A45BA0FB6E67ED319B1246EF21
251F8F3EC695C65BBBDC6F8B59A69F760B156376E3CC83088EB3DD266DF13203
F9827084434B9CCECEBFB0B611309A9282D396FB33494FE6775FAF6A90C89DBD
7A3B37EB74BF228177164D701D972A25A2FD00ED3A38913F78B0CD35C72CFC4E
4F709F30F9755CE38D5B4CCB1F21BD5CBC13785A02B0CA8AA3A8CBE5222E6522
C33D0404D3FB7D11D7DA73DE565BBCBD374C41BCDF92010AE8ABB87D14BA9071
A413D4EE4C2319540791DFA2090C14EBAA766887C77CBCDB0D53F91FD3F088D1
7D3D937C0C3344C496FB2F82D772AFECF92AE01B5A9B996CCC25C5237B310CA8
27EE2CBAE91C52491E82EA3108F03466665302B25AC7A8CEE570BB09AB0C550D
E10F9A619585358DE6CA39AB81C63C23C48037FEE30AAC1792B986D5FFAF85F5
E30ED46718E545C3BA25DAAECB826B619D99A8AFFC53A56DADC283840519710A
3EBE723F8905274F8BF33E48FBB8CABC5D50A0529C1F17437003E5DD481055E6
475965EE8F298DA601010A0206FD7D6E25A4DEADAF48D0E4C515DEA27D1960A0
5B2C1C5528E1E27860AD0175E86B8D32B0CF2706CDA04B2787D3B9E5F7965D35
12D225AC185CFD28498EE98D53FB340D08E3E9AE4E8E3B52A0C3B5622F52C074
BE099773DB0E256D2D8B19A7B31E0485C54EDA1866C0919D6DB66002A922DB5D
341A101827CE08E691F10F3B29F30085353A7DAA4E3477C44990BD0A6D9AF5BF
D3F8C181FD1F20A17883A38B54762336676DB895431FAFFF9001BA5F5E240D0F
BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1200
%!FontType1-1.0: SFBX1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1200, tcbx1200, labx1200, lbbx1200, lcbx1200, rxbx1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-223 -316 1694 925}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76F8A3359BAB9
9CCDA63EAB4501FF88DF4CE0D9DC9F071B528726352196D1D889EDDDF3B8AD19
A05A98215C1A2AF1E98BA6D25E3EE92459564B169EE8915C4C3A77E21AD623DE
4B78A134EC9973C88752BA636665292269AE953747C9605B9769A15E719E8036
4E368E46C8FCE60112D1F5FABB556AD834401D6250529F3A1BBAA7679464B857
F4746C58E043D98AAFFB21E0368B3110A911F98D0C1B16A668D8B3CE65260AA7
E9A3FA32A95349AF8AADB1AE65C05D8C83A10ABB656256C77C42E4E4E7DE2DCD
F47BD54EABD080A844C8E3D14CC76E40490EAA3E94371067AE92388A8875BCDE
93EFD646F6FEAE17E4C52BEE62060D2107B620D9A948B3B3D8D3E06E63A714AE
B5932E76384D2E2B15A5A7827EA3A3C15EE807555607FFAA1AE58C5A95B6956F
A16D46AE1028B81C056BAEE21114AE2C87B3419663837BB87F79416D58E30833
1FF10EF0D5B2112E088F63D9E747D792CFF5B74F2F95DBF5C54245C517F937BA
90AFD6EAEBBEB6707C6C751315331053A0BEE3678476A7BCDA1F939D98923679
067F136F7824411A8D5148998105E3E823D55A18FAA99F4AC12EF14C4BCA4736
E465782FE9E81CE4F3BE271CE14CAC803470BF4D71CAA1DCB8F66E98C454EC3E
87EA1A0591FE3E17ABB7966756814704B4F0FBBE89F9371514F32DC7AD923596
435636EFB632B9404FCF033C8ECAEEF234C1E9B87293BC8A57320807D777F31B
66646D04D373CEB3AF5A8331F3615FBEC47F3C77361753B9E8A4E7899EB5840B
F02C6369E4E6250D89648E2B36D12C6CB7BB21621FB1C2E5E979EDF743F2C312
4F5766102F78FE466D87679CAE86D531372163C9574A45888E01A80065FE1D16
6ACBC8086E8824E5D70B187F85E206BB921C647FB0085BAC95E03F50F2640205
DE9C3DFA592B81F8CDE984D348B45976141532ED6E5B8E62CCBE00AE2BE985EE
91CAAF6EC1373ACFF3D3E91DBF5A68960CC47014C9E2F1889D1262F687DAAA15
BFFFC119C09A0CE284E11745CF43EB550198E8201C7B9AA0F2E50A08D832F3E8
A21C36E32F2D603D0263C5E14FD97207B43DA2F43C74E62BB9A525BD079E2B39
AFA58BB5EFA4673B3CBF12C770877B52C45EE8EE68D43EF383C6012C8B9AADA7
79D76D28DA0CB1414D438A2A99AF870BFE45BA81193A97E10B63AA4D893D3A44
BBEA710401C352C44CDE1FC15112897A849FC14D35F6BE66A366BBE0D304FAEB
A0FC243E5E369A51BA298494B0BCEE5A23257040F3D602DF08C37E26F463FD65
C13E8D75A11697B5771B7639B4216AC1EC4962FA0EACAEEC52E276781B0672E3
711C70005D3A54F04B4D344F2B8EDE6F125C9FFD1AC415793275FD355EA0AEC5
C750247168FBF2A1E338BEE383BCB2841C6E7C8DD4CA955AAE092C72C2E592D8
4F8803BCAE80EC59434C7F4C0B854F7FB0CAB8609B97E6B3DAA1159517D1805C
634FF161F38842E48181AA1745AED61C6A8C0DDB550C986370360F2593FFBF7B
E32428ACA10B8CE89B9300E01DB64974E216B3B8F14EF700A4683B9CBE917B01
DE67B3D3312638879F4A10EBF89944E4EEDF233C100307218B1558184CF236FB
D8BDE9CCFCE1A3065C314C27FF32A5D29034C7F7733B15FEFE23CA179322EC33
8B352F7AFF5E77F97626828281C82373D836A8553712A3A549E68CACDEFCAF9C
9CF25DDA437ED56129B03468B177C20197903ED291BA4343DA7F937721E58936
65689F8D2C52D6E0D4E472D5998FCA85D3D5F12167BBDFB439A175CC99BE1402
AFDE271478A9B94C4EF57B854F2A29221AE02E234EC5A7219FCBE9D15867DD6F
7F593D4F0D5C1D55910FC47281BA7C703DE69A32BC5D1335BD63F2697E59F6FD
50F86F148C43F65BF13D4F67EACD436E76DC72CB1A1E42D70694FB860925BE5B
BC132DFB52C54BCEC2599857EEF72F28263412FE894A0AFD918B766DD910B24E
A13CE1A5F66827122ABD9D7CE361FEA54F1BD1A47FD43A00CED8AFB9F5BA86B1
C836F67AB4D69EF408B1C5AD935B70106E2163C7FEE76DB2D5F0D2EBB749EA26
619613647E89F9BED2A2B2D15376AD8DF1DC47C464CAE16A2936DCABA132E134
3B5E06924D7C2BD63D85BF7B6D1F8D5E559E239DE13FB817746FFC0D94527E16
31A477450705F6DA27EC8A046F0723E745D8C964BC672573139F173E270185A7
73D155B8592307AEC932F59D55EA37970ACE079172515C1C9ECAAA931852071B
4C4B48F8C84B608B7826A5D0246C059DD0EB0D0D318C6A726DE5D8F2B1B799EE
8230B408492F64864469FD8D653F48A7E6FDB760EBC6C2AE53C97322A2DC38B7
76A6D42D96912B220C4BEEFA8FDA8DE21B8C07FE486F93E2E265838696FF7255
649C0011539930F4B0118E50A9DE8A56D808095053D33254DAC7DC9F7D2513BB
8BD9317583FA8268E3FCF67EA5E486ED939E56C4BFB07F9C15C6D1321FD2F360
45041615A7D147BCDD3D9879EA5F56979E467DC6547C99483E2AA1E3A0E7A16A
6FA98EE42D24FEA8665F15469E9941F01DAD62C29D7D74D06BC22D2A2EDA1D7E
DCAE821294A55AD95B6D4B76D2E017E684C7D589F29C9B5E0BB1C42C9A937A1A
5DECEC84D260AA0BA737E27EFD904B3D19C9D40FC304CAC934D15F5484349BAC
6E54D998B8E441F3161074E3B41946F23C351FCCD5A8463252DF90C3F0DC36C1
28150F13ED59B445CACCA0C7B32A82C3DECFE93A1ADCA16D9586C898A7B75209
AA41E2E5B2B9DAE5CE55388D4B561E74EE10A3E3D05A213CF4CCDDF342E184BC
C2401F958AECFB9BA08D6A7388E3464A38DE6CC1D120272E0D026B7E87234F09
C3F6D088359DAF9A8097526189641875C811376BC8C853EB92F2FBC003F71740
5C61B63EC2B4B337CAD11B818B9B0E66A129465FF30149E31B81233E5473E7FA
6FB068EC360688F5269CEAECEA0500A1E3771094C4DB7089851630278281AC54
B0CD0D42571CD51145D193695467D2177775292F7FD96029572E3F394927F976
28DEAB134466B34969CA9EA689F0F7E115C7A5DD4599BFA4BE5C1E048160160A
42EC535F88A88047521334651DB422E2CF30A8C83B4AAD95EE3BA71F996EB0F7
52199E39FC0F57CBD7FD8189056F7FD695DF3D182B25C341CF5FA8FC5E92A03F
CD23431F95520B005EB3C043C02FADB55E3EB70DC2C7E742C2E0BA1885821273
E3633356CF35E7C196F25448616EBFF6F4AA21468AF6C3D41953D73B192BF64B
04088C5EFF64D0B64A7AD558EEC532FCD0C2F61A648A32F75F1A2EA3FBCCA69B
9E1C90975F74DD80762D4AF4B993863702E1412C2BC6BC6BA4E04353A0ED1EC8
878EA229F71C9EF548BFB387F7605CB4338A6294FDFF0A4DF05BF44694572248
1A2BB0C0426BBE1EFE79053BB8D230B9FE7329ABD57C9B8F99CE6966EE72C574
38BCEC02A76A08AB6D73089973309F933EA1CDAF8BFDF2B34977C7CA8E2CFFB9
6167791BDEAC77BF82D1E5941E660266730625592C486F5EF213D4BAC952CA7E
C8F2FEAB08E1C81E13FB0E63790DCE125C0927CEE90A6F2BA1B705CC49DC2511
5962E1DC8EDFA151D3333F282E4770738E281712EEFD6A3EE8B992E936651BCD
254A17E0B70893CC4EF461739567058F386437E536989D42C994A57679032740
40ADAAA9435AA1ED8249B91D2C8DDE8808DC922FBED71551A0519C863CFCF41E
4BD4B1E3053CEEC50EF37A3FAB3C9B6FA0C248F98C0677B831DCE93061A34A70
C274C3CD492EE4DC9F3FEEE4E08695C3574E89F5B26FC8966A2959612B20E565
DE7F55704EBD3FBDE0CCE2809FC0CCA1E61B866072B0FC05B94A2511CC9D1224
1F2AFA3A9044DAD4334BAD9AC86EAAF2DE8D6CCFF824B8F4380B740721CE01D9
7451B4EA7019EC8E4EB69B4ADCA4805F3237E371CBD214054BA9FC6F3B6DA6CC
83D475D51E04C0350A6FCD1A9EDCD1767B24BF5DCBB68BC537FC3F1E7D04513F
08B4053D3FC6B2EC5F07219F9110AE5BCA227097790F99FCF18FF17C865DE3A7
3048672403A1FA35EB6EF89BC5CF74403C5DCEFC29AD5B3C722CFE24B902B56D
013353622A4DE5D83B5730CCBDDC3B75A9E1106658A7A787E0C6FE41B83C3D76
B8CE2A20F23C8AADEE61D744F4268D4C9B6DCE7D296F8B53A9915B59E95DB3DD
FA4372285885972113C3E7124467940A83B56BFCEFB91B78A7997C35C73FF8FD
B977A6A9BB2D9C19FB99AA0EE4AFF35CA1B3967EFA01C4A6A78E59C7C30135A6
1F76E0CE573A0BE83C5AB759D8EDB85F5D15667D04A4E55753145228592C41E5
B894934F72506B854A6A75B1C69B02408AB5C8930AC8B18A4A29777BB5680275
626D43088507A8A50F4CCDC4E776557BADFA33A517A2A5FEF902A5022F851AF5
57C8C830DCB4B04E59987BBE67D93B1A101D54E50499E3928A38DC5AD62C9764
00117529E1118510E4534C0F8004E3C4121A19F0FDA32E91921659E5EA8655B6
4375CEB76B0A1582CFF1473939C558CA60998B467A6F531253098B5DD721AF8D
D308208F6EFF8D547A81221C4A19FA7CC1FA84F0D42E7A93B341631BB0AF6789
B96FE48BF1A81BDE6D899ED541B9CD089176A2EE201807CB287B9DDAD84FAF7E
4A220B5BAAC63801F07FCCA0AE283D6B9BECE264D19009D10788A7AADBD963C9
3B3C6E14397AAC889178507E41DBE0EA348899D7652E9A512A4D6804B4B23917
BA17B7744F9720ACA0F900D11DA855B9CFC9A9B33189CED6D603E8942FB104B1
1411E5BEA4604CA5D57FE824C46B93419B9A6C8B7CD73DDA0D8DB58AB5E7ECE4
3FA2DA3CDD354F9E38FBE1ABAD591050BF6E2E0101603401C62AFDB7DA93149D
A75BB9DEAD6DFB5E8CD7B85F975DE7F85D686C7E96E334510BAF6268A273112D
C13C7BD0994D5B925199D7B015482F4D8C418E6FF03E9C4EFFDAF82D396707A9
400976633FD0288067E147F98DCB9DDA5B719EC05890EA64DE56AC234234F3D2
E7F334DFF69C6BACA4A3EC2870228149DD41804BF847D971FDDB944BA4C7EA20
764142C58ECB82DE98D51E984BA7431651C8B076C471ADC04B4790A1AEC7792F
69FA29BE10097E832F7DBE008CF0CF0607E2671EF952C1654CFC91C43DA89EB8
E9C510C58605E0FE5D0B4B587B2AA2F542AA80ECE9DED5CD729608CE8AAF3A48
C72C799BDEA6C8711685934690F9B8DA5DE01174BCF00320FC8AA99E777F5EA9
394332C69D2A4A1B17498A9C128B241FE92C6EB15163CCB834C09F0382E9B09F
C599792AD669E92DA377DC6DD1529E6E0C5CFD1917BB18A80569E4CAB1F6556A
F49420037A908ABDFB08C41DC67AEDA1F598DCA2BB9F3FD727E5CCCE8CE2F4B7
A45078D29F84A7C5DC8F1C9605252705C3547FD0B8F94F3315918F34C5D605BC
AED33392910EA7C09E607A199C6BAFA901628CC5654A8072E1250A760DBD0EBA
984DD0EE0788B84B142D132F62E9402874A40872A70EA09670BA6F90B8E9A252
279F501AE93DF5E9728585FC7A80EB4D1962878544E4C5A3CD975220E75C2CC6
59AE4DAFAF3467B08A9A716F7393D604FB738F0A1CA44CA48BABA0078A0AC1B8
AEF5E1B803A458D45040290A2620D8069D8039D90E8E2F4AF270ED5D8DBA6366
6244ADAC2CF74BB6CC9BB157D65DA15E9A5390AD5505C96DF8A91BB229AB36C7
0E647C09131AF157C880D4EFA1E89C81FCBFAEDB827957FD6707D6C2C2F13785
98CC70B46CD7200BA46FDDD6BB76BAB7392E8E711483348AAAACC94FF0E9DC5E
E9EFDF42911B660010CC6B3FC54EB0BFC19BAB7BAAC154243580FCB444888B71
005CB9C7BABD17277C289C8649049357CC97CD188F9332C0C0109861075F9ACE
DAC2C0755BB116253F728AB67AA3AF59F26C65FA0F2D3A688A700FE2858FBA0E
8CBB129E639189365E4CBE015BF312EAEFC2EBC8F60B2207EC06B6FA774B61B7
E033C5750A2A0818E658775E3023C23EFAC7D1D55E50D0226C556BB06CE21DC1
5165D0CE03207C6C0B6D71BF6B9721DDE2FA03948980F80481F12FD3CD91EB21
3A92541054C10D552536C5A5D8B2495AF6CAB1311AAA2F0AF77695E83C971935
BF0FB64D740B7B53091F596807F95839ECD72FE53D80C30B365365C8AE75FE8E
D2D7879C8C8004101CCE78489E280372A27B2FBA37304E3316ED1C9ADE0B4241
270814C693126EE873EC046397845FB0DA550DF4F3E5F22A007A5F489DB06BD2
DAA893E9C79476E8A489C3155C55C600C355FE14B475F24AB6974E13D88C6319
EAD523504300C5185C84DC2E6F451975A62C677760B57ABFD9C03B07B035520A
5AB16E8A359B672BDEC90507DC46D862F6CE18741961E581577187EBCAA8C7E2
A66F921F5F82DB6271A358CD2B0A603D6AD584EE16EC8EA600CB7D7122AF9FDA
5D89D8FDB5BC451AE174E4738A851E92CDAEEEC705F0C7440564D40960BFD7C1
2014D47A3637158006BA7BE16CC0093767DCD47C32A89F97B0CD8F5AAEFA8537
45BC9934704E462A4C94A6CF39B3A3215459CEA41AEB9427D4117085D7D821FE
51E67A59B6F30A79A86F6335D69C831715C3EF3C9E2E1C172810C3F477B8359F
2B3F7356ABE20056B3DD423BEAD055C2365E00CE5D57BDDA64417C84F849C339
FB426BE9E09ED63780F55316F9F40FA2FF7D6CFD5DA7A965D754C30476CF9BD3
0C8BAB7FF4AC4BE85F04A06D159862B0A8D9ECF60800EE89E406C932253AB322
365841DCE81F446C368A40FF89C0568476073C135C9CB7FC9AE91972F446B1AC
CC064A7C3525263C051519AE32FC392F46B6BB9402709C5DDDE68AE101E596B8
ED2230C42F4F41CC4712AD8FB67C5F76008514408528BF2BA08F79B5522C0493
AEEC2F8945783A3EB5DBFA63F8C18E68E6BCBE16E000486D0C96701EF8061AAE
3E1321A46049F1F4939E01781807AD83DFBC5571780A658A9CA19C5B772BC49F
8717AB23A1051BE31C3427B5C72ABDA5E25BDD795A3B485C4E8BA1B65C3F1932
7815C9FB90115FE81B245C81CE231D4EC01F4DF93CE793480C57235CEF0B9962
F0F3A1348D14AB9C733AB1179CB9B56A05B2F288208BA01EB2D2192FBDE6EB1E
0F53696C1ADE9373DEACEE2127D85E213A410EB9F89D384F524546C7FF6F9AD3
9C9FCFBCE380B110E15A84AE30E4846980EC5C15B03401FFC369478293955220
B4DABF379F8BB42B51A62F35F49FD0B4E7EDD8922C0E0CF3A7DFD7880AB829B8
B472A70259B3717A2D336876AB2133D97B079CD0F664D76AA9FD186A608E0366
513F3353B2FA4BD42F3CCE7296EE2FCCC3967CF4DB84FB19A69D0F5987237A05
4B74812BC536D0293C010505302930D08ECB7AA8A606D7E0721D9B2888B4F56D
F750F8D1FF8879D537D25FB79C4FB2A3F931210CCA673B8DFBEB5F020C866139
BAAAA332EEFD654E792BC98F10E2556ADFDA76880BF6DB5AD71040ABA21FC0FC
3DCAC76EC7AF358DE71D38D56A5142B2E6973E9AEC0CAFCE607D0B9158617B4F
AA88B676E65CEE681E9F3018037239B03D2D1530F4313E28B9835AD8D9B490FB
2039F35A3B12F11C2B17E8D5E1B958575498D6DD4C7D61032862913E62047B91
6974D336DA8E4807B9D0380EF02EAB85DFE5440B37DFEDC67A41683FD5C85EAF
FE33959A117F176FDC0FD1F82FAABEE416359896AC7760431291627F5D5F4525
E78A0A48B809A3F2D592817F20EB658FCC5384DDAC234B3A29D8ECDF368B6D55
735928F0BDFF46F1AB2C3BDFE418EBDB854D0657819F4A6D5799A8B95D1CAE88
0BE6932CFE350B52AFCDFDAC149F4EF638267FD6585E29FE5520B72534DFD0BC
96C3BF9850B1F5DF3173CE039A9B9DF5C36540D83E3C1EDD7925C6A36622D231
689C5AC23916BEB031A7CF17FE688D3C21C65A977DC861B13238EA1FB3E67F36
FDFAD2194528823B9D79AC9AB985A03517B4161BE235B7AAF23EB24FF3851E25
0DC3AC668EBE29381F0C67A977D0F5B8E17E5C4E55955EAEE6D31124D773E12B
A055773CA3C6D045800F417B99C6B4FBE719C9ED3F75A15B5B9AB4E6A764F340
BCEF621BA2F39AF2EE01E4C2B4A9252FB866F4EFEA77541646B6CDD24F719126
C7547D1BF3BDDC1DA61DECAE6A326AAE5197758559FA723C154C900C6F19A9A2
DEA357BA4A89929F29AE099FB23312A676592238ED62F9C64D4F7E587BA9CAAE
B3F0543813828CEB7BC0E850A95331EBA45A75EB6C1516AD2F07C61D42A9ED9A
29D02D6776FB11DDDB271F67E8743EC5C35E5FD5A89F1A7CDD5B097896A83F00
8B193673492FF2C6CDD5A9C73B029888C8905B16C26566C1CC39F5F46914C2D5
C101C313618D92ADB1A5A29E23B0315BF00773410C78A7A1DBAC57A0FD8C1AAD
0A95DE4DC41E333DB0DBAA6B05A74F80C64E87A97B8E8ED9C190F2357176F148
FF73817CA4D8715AC50EE4BE60813DB25DBE28220C6AE78DFBE7923B9311B635
53E3F02DABB3ED852A34F67D8630371B5179E0F787BD7DA81796DA835F45B439
36D7F734BB2A148A7B61C78BF7FB2277C79923AE50FC29623F205C797733F46E
88F0576999B68A3ACFAEEA98E29DE783BE36D36F82696BEF2A0BF600F291855F
B26CF97B7687E9066776A55D03E4FA6023B21C9DC1A81706BC406D628849FDB2
94A06760D9FEE5540DF6823E64712D7819DE24E40BAE0722872E1A8443BB49A0
FA7587A327ACB70D4C066378D2AF09153CFA2A5F14FEBE8D03AC9FB8383982FD
3EF264C5B1C17BE26324FFB85160322A1A996B839B0DE86E93B1E19813D25536
283365A1991925AC814CA46CB317B4829F356C96152ABFA8C30D90E32F045113
80430E168DF3B656410AF702D8D46537A910ED31359611F6D5EE1BA8F1BFA015
6E63AE071B3E67F00029F54AC44F5AEB94F502E03489694B76E3DEB0C4BBD947
325FB5367784C16E9209BB556DD715946E19DA29AA77D0A87BA7E3E320ED103D
ABE8863CE775FC948B9D58CCD2D78FC19E9856D580F63197B3BE494349BB1B58
69A234C5B8A7F16158B37CDA2831350A59321D5DBC2863345169C46F0A30F8C8
891C2ABE957D8CFEEC51A39470B895D1BF70FE5753C58854647DB379C597C72C
79287E82D35E257E2F0F346F762582EE3C1F0AE8CF59C63C52431A65E478F46A
EE52D70775F39CF127B912A2419CB007543961C697C9D191C38137E2ED884CAF
D26610EBBBD33AB0C871AB44177E4F68BA76AED74D8CCA6B5D4ACC0D938DCCC0
3323FF7004C9631405AEE22A5B412F11BCA28312514101A8F350AF82AC7C975B
168B9B471A2A6E7A0E18A7938C769EC75620FCF9193F31C027F0CF366B212814
0D603839C6627D2A2319D35075347CD8A92A6C344721DD1E4C3C7DEAB0EA7860
DBD52AC86C119CB44204B01524502FB0AA5E643FA3B4FD3498C4BB6CD904E5D0
081D1BF0FBBF0E0D753680EC051E875CCB175714113F17918D16D0581D5ABE02
C8858B5102CE82C4C64146C1166AA2768218B82F4632E1A3616A5B8EF13F5695
B573BAC93A9F5C33A05151977F1C6D1E065483004850A4E3729212204C2A9793
082241A1F66808CBA62A6E4589E4B6EB69128E5DD533B5F28995B7EF9F615EDC
C9947F32A2A9C9FE8F3F350FC8ED47A84B487004DD8F092C992D429D5C3ECA7D
7279D14DB113EB8FDF2696973197C599ADB9E7EF915300585A94BD2A847A5A09
E747FF356959DB61E76E3F9AED8D56214814808CA607EB12F343B0E67CC0EA72
143F4F9C52D39AA1BCFDDC7AB281B5BEE30ADB2D54A26F1750A2379F16D5FBF1
2FF7E74D4FA547046F7E559C2FCBF43605808EDEF57A0221FED4D966B2FC777D
ED494313E3F6652E2F4C5B8314ED4F8E715F33F5A80361682F6D838CEB488F15
7EFA9DF5E66E8CA74ABCFB9F4A745A14F7EB8C4803C2BA33A438CA1A996D29B4
A70E861CD035F7969DDAF35765327871EA80F1DAF7E2B6666DD882A17BFC5ADA
5E404F1057132032B61260DEF86CD8DA9FCD60022CC2D468F8C4D4FB38CBF7A0
C8B84EC3EC49D94E6CE2FCD5C3DDC5ACEEDFB123E19F5D4A9457595073504C59
FD29BC23FBFA90823BB001800F68F87B1092E38FEC08FD4764D82C2AD04B1FB5
F8C9F89BA1AACD47D5706D9F0A6B06613C6896C6D0643D9A98D0A2B019B3CE6D
636C185A0AD426259126F62704F47A9721709B376D0326054B8F539D607B30F8
A01D05C1EF6A04D49707E0BA12A16D57BD72E8512C2716DD51EC48235BC664A1
0D5F236B9E03EEA129222BE57F8FEA5231FC9E429B6899B94253BD694EBD2FC3
104E28F1BE75BC1C6F0EBFDC63445CC494D6189EA604B286B65B27C17969691E
A65773E679768DCB8E720F40175250C697B65CA94487CF3FAD0C1901F1F059AF
A9C01E0051FEB5FAD58C121FADEDD31D44C3E22344CEB209E5B1F4698D0A844F
92097E76380223526EA72CD437129BB809B87090B5C6A673DD4E102A6544F0BB
CFCFD622812019CDAB0510ED140A3CA38F03D1A6086DFCD41D1CF11934400FA6
772068553948AE116073CC456F281CDC0FE75A76892DDB52972F028E73F3EF18
B9078F058791F536EA72D7560AD5C0AB3C622123907B4E9050E513A9FAFE2DA1
823E55A93AA34EE1222DB38552091831D91CF7C793E55F2B423B99B07C8DDB7B
B494A5F67CA9323AF83F41AE01BD3AEF1A6D7DF2CF39A48EEE3D67BE71EA4BE5
B1AD35F7634080A4CAD8C11880CD1049EE3C47633284CD7B5EBBCC343FA3D848
5EFB8BB6FF8B258A619BDB21EBFED1A48D45A42874E4CCB04ECEC89629D6B5C2
3F04B4F0E7A67A3861604BF1AC0AFCE0F11B9EA528756E9A92D4C50C8B4DFCA3
7DC1550D3EBD5AA5F0F2591FA11D4774BA6AB0F43F3E4557648CA76FCB181862
19301BF6767BAB89F25CBC0F2088E2822CAA0F1C5275ECDC7B06F08C2A7F0236
D0498B8D3264DF633BCC00C27985A81224519340C30F6EC6119B56EEEA390D2D
E1C39A2F11B6493FE38E02DBF7C0A48BF0C1044ECA0ABEF3903DE3445BC82D6F
EEB1F8D584F4345DFABAC4C21224B4DDF55F0712FEFDB965955A3AC5F7C136E4
100F76E02BF55173A43A7B825C2C61B079F0F9FB94D4CB4C56B642917B94466B
946B6219BCFA296AB82953060686ECEAAFAC88ADB5B39B81D75463E5B38A080F
6147437953FCD0CCDD07F5B132B3476551DCEECF1FCFDAAA6FC993115D73984D
EA53961E8A9886F16E00DC0454841956E4938C6DFA0BF3CB6DC1BCFF81CF033F
3A8A826BEFAD5246E0BBB5C70BF03267938588E301FED086B050D98DF7507908
38FDF8C1055665585F9473C867F0962E39D1BEEB24625547D3EC704227DA8754
203EF2E5313898784108EAB03F6DD049F1C3C391460CACA7DC1614D49B838F42
13DC5E405E8E76F0A1DE4CA5FB97C19A9FBC6756155D710772DA9B71D65E3FE6
6F936A9C36F64B9F60BDC5FD874774A9AB79C1A85595A6DB2D62CC8BDB0FF195
71098325E268681BF3334AEC2207446F6D9AF135009981D99D81F9CA41BAF982
AA547889D161B9C12A49D3777D170AAA239BF40CEAFB42C4D3C5093E0886CDF5
154EC9ADA180F6312093F1A693C457CB98BD6EBEB6529451E29875F2898237ED
7F32F9EF2DB733A43DA135E97C2E465AD8C50485E429139AB230562BF8E484E3
4187D3B13107F8360B28C6F23ADD5B53D9995C1146244614EC18912D0628DF1D
A369A01BE8EFD7EFA3F6906CE6A3ED0DD48DF684D93C46A22AA53280153619EF
C6FE9D0AA4992EAF2F4CF9B7FA9B5BD67242055AE2E445088619B043BFC174D3
95D3C18F2E20E04A03A942FEA75FE1E9E278FD046D63A4ED6DE0C7258CFF5186
EC4B731BCF31E97CF7F973288F012D11D50FF06B140EA2BA5ED1F4A1494AB803
90E2A67D5E1DA1421297B981B5CD5FAACB58218CFA0191FD2EA9DB1A674DA959
D8A87E287F6268355682868F402AD7824881097544C70A57AE3B8CDAB4FF27E0
07E9399B9476EF2221C470C5107BD3703BA3421066335357F58D8CB4383119AB
3704F849C2316F95BE42F08BE5FA54F1D17E880B3856C0E035BB6FFA5624E4B1
C467CDE5B7D1E2FFB85160322A1D25A6D5687182CF50E6206C182F35ECB41CF9
5D6BF925F44B1D1952E4A562E91B485F4F7CE1C383A70CE578E4960CD7D2227F
5FFAC190E966930B9CF95633C51AEC6B7D401588DEC33142ABAEBEC4363DDA29
DB81DE9A952900990A1F03633FD3F9453F98FF18D595EB8537D9C2B60FE62416
D0D3A21CF17ABF255D9D8DD8C81D960E5723A96091CEE919B829D13B338C94C7
EF33CBF22FD745E1083D21BD1A37394770EEE4394A3AC5C7A40F55C86A1D460E
37D63AF1865D70D499D144C232408E57ED15194C1FCB877808AE4201B64E615A
B605CD2D298519B9518CDB8188CFE38D941375408E29138F8509044C50EF98C8
3494F3A0E10E977F1E1D37BD7D38A9E24821DD80520BC109FEFB3EDC0C458048
BA316A13C6D2D95F6DB544181E89C0FC730B071E90B8C7D98700440656D5AD35
7D6A22B22DC2EFF49CB821AB914D54F868724A96ABBE84ADA84BBE7C97F8F785
F40FA9B3657FB1D87354FBB41990B8FB28D578FAD4737F187E327F89107E11A4
4FF02F597C8D4B0A39E64A5DFDE1239479CB408285E4B468DE0C8B0138032946
EDD761F5EFEF43C4933FD459C71F3BF6043D308AD89E7C5BFEBE19E88DC83E84
864CAF98B45C6EA676E3B3268C7393BE05736CA382BEA56E3EF92C74349133BE
C9C15DA4162F15F0627CB8D85DD911FD052A58BFC5E35E868CA2C3FBDB433529
4CC3FF072F5A914A92FD2ADEC865F1167F03400221C12A9D8EA7A2B57540F4BD
87312190BCD058875B34AA23432618538763AE53B2A28BF07670D0F9FC62DEA2
677D4342FF84A0A1C31B8CFDA9568B3B836A94728FE44995E00470DA9441C5E6
8A21B04543BC17B94FB47DB4A34741728D4C935DCF3207EFAD17C64A2DD1F4A5
AD7B263AAEBF6688B297ED53060686ECEAAFABD963461013D44296D65C1817A0
86A95E596626CCB1E9BA40F38FC8562EEA9586F0A763D045AA57E55892BD2FAD
4C3DB496005B735882CC81A7F60049B0E061522120D49598FC343EB0BF663EE4
8155D2F911F5D9CD29D020C458C7F66BD4C3AFFA162C9AE1FC4FF99C29C798D4
3F38C90E9AB2531C2398C57CF4FA509B30F6FF7507B2A86810E5324AEA8A940B
85D735AA706325806A3956DBAF779D3937CFC4DE10C50CA51CBF49527488D684
992F37043A82F22CC9B63AA8291D791A8B29CCFE9A7B5268F974E0D944768461
998B930B82765BB9F4DEAC5B9C552E019DC7D79DC601325C04F05FA04671219C
EE833271DD9D078DF6B72130624BA5851D6C6E6B1D1D19023F970CD692800CA7
E042CBF2D8DA4E014B8F573544EECDB68A5C80CE31C9E4C214326117F588AC44
ED204930E1F62DED1E0A30EF4CCECCB8D1BE1FD008DB69CC77126DF2DFE2C10A
3434316C38983BE32BBE8A4A77DF8834BB6400E5B35221E4454E88BE4550161E
624E92ECACF64E79F0ACC2E5A57DA123FDC95B1EEC7F73101AB7E7084ABA99F0
913F859CAE3C9AF19B0F693F10544D37A2FD1D88E93D902AE0956A837ECDA6A7
1040D5DC570C9D75B2A9331FCE0CC9B4CCB50367F41F3826F0B6EB66002C29FF
4DAC4CD3CB62D4FB6767F603D9B65A77BAFCDBCF8D889D05418881328CF59810
22360E3FF3BA875E736531968BCCFAC48299B8AB580A32EB30BDE3A9C615E650
BB57F97CC107D1161D391E60C849870DAB18D341DDB41F182B7A47EE9CA10FF4
3D73028BEDB6AFC73AE7072D80C54B43991D4E81FA79D1A719B2DFDC18ED319F
E9D6AF5AF7F4AAD451781E12C156A0C13989BE1A14917C2C318FA190A7E5BC5F
6C4024341A90F3F012E6D6E4C5D95853BA4CAD978D87B93E37946BB22914C7CF
66CC072296003E2138BABDAB6D75A3AFC7C565DB6223EBD319689752FA5ABEF3
D89D05CB6C80699C235AC9352DD9F61BE868AEA585F253C8818A33DB1DCF42DD
E7631DD942CB866F64C8618B045FD9C7FCF123E6A46F32F540956798145761A6
882631B790BD466FA06CF5C663E7E843F87F5478398FBAC0E9C886E5D8147B55
76D44D6AB2312133D266C758E8074F031FB463F79913511F14D67F0590F0F79B
D0823A62FE7353F4B064091A4E7D82F31D224945090C990FC3E268E658269C34
F5DC730BB5D0697ABE1DB3408DFEDE7E47B59B4EAC37833F130D98D4D59D121E
D3DCBDA27C514DF769F3988D9DB92DB728508FC16D615942AEA6AA9A42F7F248
1ED84B42268A92EF609797F4BAFF8789D06DC54D4DA63BC9115CA4E90BB7800A
A67E4B079722CBE83F0612DDDE671C74B2ABA2C7DE428DF3CE4116AECDA1050F
B8E9908F408CDAB038F632A38C8F8D361932A00E1B206B8860FD448407E0F75C
D117C67D3669ED4ABD8BC364FFAFCD44AAB590C2F64A4BF3C3CD452F95EA3CD3
7DBDC7AA32113B1F2544F5624664095640AA61143037A40D1DE98E45814682C9
2ACC4A280753C81A290316170878E2F2E86AE9CCD1A6DB6C399F729AED038C15
EE9238D334B0522F4A0B26C3730FB9AE3013AFFD4E606ACB9C1EB2C703EC87E2
848A164F21F594B7F6153EEF88A7DE8552F937CFAEF89CCFC4AFAF373FC069A8
B7E3D538E862395D0A3B8092940B6A34091EEC77D0B6056F210C96CAF964EBBF
B48DBC3F665528428FBC2A04542DD48859B687E787837D7B0A85BA771F4855BC
0CCC55F7DE7C489DA837DC5B61C808A5953213A467FA6B3E3D29EB9EAF5CAF19
9BDBA34724019045BD1FBC6AE682DD096DEFA3D8BD6EDF3E3E3AA69A83C857FE
2E1CF750A291121FBCA2ACF82907492CFA49FFAE7E55E6E27D1EEA962ADF3D65
73A20597C98CE19B3E32C4526399A5380CFB8FED8FBF34B7F39EE2E1D8CF749F
CA1774A902446EF93CB67BE7528C01B877524185340E59AE78646EAA37A4D65C
9C00A257D5786AA93FD005013BF41A502EB16220A3B0FD29E55586547949C86D
0FDB89D427A343A9332E4DA4506C56819862E77931063064855EA1E0251CC170
5A5B9937DAD346C81F230415A04F0B7F46C3E2E096E4BBA986850F823D0566FD
89D05F7D1AAEE5D5EE487D2F105B62664809D07DEA3BFA2783762C002CAA28B7
7B8E7804CDFDE3E454A1E47DD3C43B4C766F6B3C0F183AAD03F332B0B6FAE6C8
9E27BCF125CD5C497339245D7C8712FF8484E0259ADD68830B125480A5C920B8
6F6543B98DD1DD94F45773F228A0AA817AAC895FDA3B6C9B8F64ED9FD1A33557
82C0D738BD1C8B4E73EC1701926BF9C75A40B1C614EF77ABB6C40CE796531ADC
C7D8A513466393CB72B6D14521ADD9EC82887EF477DA1C636735DF9A4CCCB636
437C63AA32BCD68B34661637A899C0E9F85E3B62CFA86DEFFAAC4B04AD0EEE0F
24B439D9561DADDD7272E560DE7F92AB38682230E29BC6EE053E8D4F3509ED09
D25FA099FF807A9845C89C6D945977E80CCBAABF9C69167C7ACF3FC5409AD7BB
AEF04E6BD982599F917C928CCA9A0CD8AFB096C2A5DC4E272A9B36FB52345CF6
23B4BDDC1824C79F08FF0410183E2AD584E1CC5DA353ED444FE3B24018451B5A
8F4DD24441AC005BB15CF406FD6771C18D1E35018CC8ABA346683F372CFE4840
05E845FEB5F86621021D7AA7F5C208072692BE13ED2A2232DC3678AB7A8A4FAE
26C7249092746C7ED39512B5F0916912D4C8032EBB88B9116FAA5BC823B9C478
0D8C553485BFF97A5EC54FC64E6C319DA504DC9B8F8B7FE209535A396D7ED744
B4E8FD0B550FF51C5FE34C9D10DCC58ABE062CBBAC371AA257D391586AC97776
60849CF873428BB8E09B2CABD8D8D7389984C44A6127205B69AFB4538FB0F658
F92CBF4FC8F0961F325116AA97E729EEA22156536864740E61059362307B0F31
A30F3FF19FC15E8C0C182E011CDBD6D094FC5ED01509766C2AEEDEED90A5D7DD
2887D2D648FAC046B542CB90EAB5F7C026A4B7A3691E93D62B01E183B6848A8D
8FD9DE909EFD15B7E2F1EE154765F71A7ADEFA4A22DBA1E2F740AE1712D22235
BACE3CBAD00FBBC088D31FF611F8A4DA058E215CE06CE417AFF09E6BFA3DFCB2
07AA7F84D341C2B8DE3B825BAFE0C6EE49C07423DFB6C002F87B2F2090FB3901
B14FB2B5046F7ACEBD4DF700F3F7994D04C705E40200B3EEF2DEE8D2E9DAF2A7
F495E648855922AB8AFE850ADFEAFC9287F08DED3BE32C085599F64E68535F38
531929F930D556AA3E8B295463FF20557DBC7A5A4E09C575F4F8CFEBE63E6371
A6F0CC9707BAC8632D98433F3AB4D8F963AF20DB3780B822CC67554FB05FECE4
B439BE078024846FB99B9A3942CBC550A5DDB5ADFDA4AC5C357AE9EAEC8DF5F7
32F65AAB846A5C16A007AAC33C0524CB979A71B4562B0AF3ED1A06D361AF4E99
5AA64A841AB276E50E60790F43D37FE8AA7907E351A3DF125885BA7231A11C8B
105E7A97381123C17B01948BD88F2BA4A61616017287779143056F76F183CFCA
DD49BC2A2FA3E1D3C5A066CDB4A323D80794C69D58C8FD786510407CFF38D60D
465D4A83675DABCF87F19321A5F632CE73D6CA0853E1516C780A83E59627EC51
083931B329536B6D113A401DCD98B28FBBFB62B90F75BCEB53607B8C7534A992
75A25E66D4A695B8BE828F94CB5AC242F6438DD6C2B2E5A91DF9CF8BF99289E3
72B37BF5A2B374900386B469B43EA11C503AFB60D95155EC850B4FEE02EB5A91
D78D62D3E6EAD6E2C0D80DF77483B9B5A8AD14AEFB20ED37918004A7C67CA053
51B4331213AD819DD47CC7288308614620FE7E61AB33B1B981F18E6C369F9E33
C18C605A729CAE0FC1F0267CAC85EFE7EB75D1261016211ECAE31881CAF8486A
F939B69E9DBEE8CFDBEAE985AFAE22621199EBC75AB6A980618AAA0BFD30BA7A
F610A3DDA8C6D29A19BF9F82878B8ECC76D5543A40E0E27B83AF1998851198AA
A8E79F10DD7161253A759FC3E33CCE741E1BFB37AAE563DFB9B86359D664CEE2
D9C212BC3170716798713030B3119F2B22A1F068377A8E0E178FF08DB8EB5FAD
9AB848CE520DE5F4802659C8209CFD283C5A79D0F998D2D4C40957CE84D0B133
5CA66DC1261B928414FA693A09B1509339E134F9391653006CCD3FE8EB7F6EE1
31EDF14B4CB7E9D21AE7C54C8712422C9ED959D320982C8937A546E5842DB149
7C64D7DD97335C71A38AB8EE1BF1670B0C5FB8AB33B7E441F71ECF58A993E270
883FA7F8A859D61892B27737BFF6C27E0133D01C4A315E1D28F066BD57527183
B29D05C143223CC8D209EEAE0EAD62F31E287F2C0EF8151A65172F284C451965
AE82062F47E7B9FE806ECE43B69D7C4D86D87E62704126F299565F983FFFB49B
03D24D96218488E2F7A2AB0CCE9F215E5704CB7075AB3D8708623202407F9948
6D96A6468F90860B030B6723447292FAE1C87699010401785039DA51F38AFDBF
36D657A51AB6DC62F85778FDD9ABD310ADD99EB2AD2DE11DCFB6D303C94EC45E
34CCA3D91444DEEFE857EB9878646713921626B9784AF5533C61A19A9F58A5E7
DD85BEFBAEACB1382BB8C48805052ED8F5FA2156DD13BAEA16323B206BF1F6C7
DA90AD17B24317B136E0665A181720798D8DAB5291181AE0B213DE240AA78C3C
55752E04EB00D90FBF9A5400DFDF7A828D9B6955F4A28FD378AA5C276CBA60A0
29D92DCD2AB5EE5246FCDD07CC8AFD09B24CF02CB5975124262E4B28020837D1
B33A1E7ADF12E461B6B61F0459EC8C6528EA8046F25F8A45C96DC41433C35E9C
B9CB6CF7A9D5FB89487F89146946DB14B0995DCA9EA3313EB545E7084C8F54F3
1D28C8C531521BFA71736DC2C95FB957B2CC5647D38257B115CF14622567CD66
8AF5100FB97AD3B588E6F880B90205BDCF50AFBE0A60EAA0DB319AE314C72EC7
BB3C06994464019EC1F6592614B71868F99D95F81E27900800CE9FBDA8E3194E
362B37D87E8D6F4D3EF816B4C6489DA15F4801CC2F2DECA4EE91FEA23BAC110D
26720F41CB820AE90367A4CEE9F63789659B083968A07E9CEF9AB363ADC4490E
521205875413793AB2E1A448C26245B9DA6AFBD7D7C53742DC63473B99210536
7E2DCA8DB38C09C1E9CA825171A088091F6DF4AA2E3BCF33A276981AC8841311
07F38F339B450B0190DB04B735EB8FE850C4F44B2AACAE6004CA425ADB24C72E
B63D617AABF281ED90D07D45D8FCD6DAFFEFE05D7D08FB67494077889C6F0B00
284CEAAE5E446C55B001ED374A428003D7E6B6DE5E1B13AB329F136D54E8077F
16281315AF5CAB1A2985035AC3D5E1A08CAE5BF3843FC80C2FAA7986F911AB78
38D3E750C59A10E5B0D157BDF5C59C088AF354D07E5CC215144F0C87983A25CA
BCF677606B8C8F47097799B9EA07ED4680EF908835EF423CD698A5D68EAEB3F0
96FB4220DE552D7A9AF33B046D0ABC1B6A39C5B3CF94A77608939EB6264BFA43
FAF11EF6F828FE4C1E36D02F347B631F2955F15C274179354187FD13BEB70E42
4AFD7088007E105C9C28388F28F63022F474852213E3F4BD1FA9C633AE49B392
47844992305014E17E3D1CD96C8D410349F4B3B37572CB3BB07DA01CB7278C3D
4D6EF715041B988A91D7276EC43E2B556A1AC30717AA968CA9A65AEE2A99AD3F
A9814215CDEA9BBD6C3FAA1BF84920684B65AEA1CF9A5C39C9B27DA4A929AEF4
80C001D4B0B8D1E707F77E19234CEEF9A9E43E0A2AD1025A9CF0E18BFE72C821
4DC8B87272144E7ACCA19DB5E876A4A166AF643FD617729FE3AA1AA0D2BD8317
38D08593B1C2C4CAC06699423FDD265AD161A7DC1C02B909EF8E28909DB440A6
B18B1C68316AB402A18A638FC402ADF05EE3020F38F275957A1C6A607529C41B
1AC65A9E8ABE8A54425161B0DAEC448DF26F958E328382DDEFCD3D25DC610F41
9E3206A45B4595829FBC3404B6EF1660C94F81059434CD8F7116AEFE59A430B5
501514E8E656634B0A7090405C37EDA911EEEDF0F3171A282B698311BC5A6B2B
7EE529A59C139DFACDEB997A68A0B8E68B6F430B9B7B02020231C6CA3DD60F92
DAEAEBA8C0A39C2838A78BBE3E8EB9B3C0897FD28BCCD0A16B85DE7DD52D52A2
B1C5121785A5CD4E2984BC3C019499C890493253AD3FD584A452EB1C1AB8E1B3
4D477E5A0A497BF25BE3C74F5567B5CB4CEDF73471F180B064B0716D911EF9B5
A1EF84547A768EDFB7431A7F7599D5CB6B9E32EE654B51E71FEFC688C9AD3C78
16925AEB889817118570F28A4BC811494B33D3495D7C6730703DD530382F5F63
C7AFE96C0B43AA467FD91B556B2131C337B2787B982B4986A70D1B739D366603
B9408E71495E15309B3E66D9315DC32988F34E0D9B5464B129A4CD2D521DBDDE
1DB2DE18BC144B57DA583416729EEFA98DA3052D32B1EBB367BB6A58C58AA31D
0FC2DDDFFCF540506D37826709C8A7FB6F746369F304D5A0DF3A9438A284AFE6
A173141B46A09E4CDDCDCC12A67D66187307B383EB286FF7D42BBCD878AC438B
162B003CAB1F6222ADF7B3B3436451A984411385C469097CF7FEC35C3587CC20
864F2F28016C7E9F0508A6B685DAB34FF158CD835D5FCAD3E3402E5D47A226EB
045EC69EA281AAD6D94CECF31887A216453291124C828E56D6697C19F62F6FBF
98FFE7EF4DBB46BD1097CB91E805BC840F7B6BA5E8C6EDC08AD6D8C6F5A76937
B06DB20B27A8D9242350D0335CADEDCFB32E590036B3EE13E0BF330BD415A96A
1D08214BC62D6F7C8B85FDF89D35492C321A824DBF68E42543A30AAFE2AADDD0
6977F1CD6ED8089237F284E4E1B353A069F3D01E2A1847BDF53D5F65F47E7081
F93A4708322C4DE64C2D2A6F40A23C1A28E2BED548EDE37781D954E4B159561F
665ADDC17B3F40445D400C76AAB1CE5D7E9EC6F50C55F29A2741B39183A904A4
5B0696FED4C5ACC6F39A7D09507E928A64AE6B9322C46031CC7936D8BBFDC205
FE33C3B8C88CB7BE5B49214A098B9CC6F672ED537729F5186080C3F546DDDB5D
88B4E0925A8E2B1F5446574A9E1B86989819DB4788D21B8E109E440B1F0DAFE2
CBBFCD5B2419C7376C1438B291382DEEECFC86163C82B10292260D8C1E3E3C7E
EB1AED795599788A2AFB2CCC08D919EF68C0F194A7C308BA93F13D3B5F51B1EF
0851040D3DC2CC81AA1DB4CE8405EB129D3BF052D56D31C5EFB1DBDFAB5ABBE7
3F9AD14C74B84B46C08DBAC513C3BDFB468EADEA6A6D5F12C127B31732710BDA
C0FFE615B682A638BD39F89C3058D34645BB1DF17D6DEF4061E4A99DCAB54143
0195EAE16D1B11E24B1DBC7E749EF2D3CD0DFDC6F164969C1C4176696F40BEF2
1E159D539C275948FDC722595BCCE5A9CA41C4394B610F13B286990BF8997431
5769C8234FA7DB0CCAF46F7D5C4B27B0B0C1CC60E07567FF52009B84FD883EF6
214DAF6BE383506020B69BDDB101F573D1DB697D3076F6F91A017CB4BDE4B686
8C64AC77FAB589FB2741884146C6BCF0D4D4011A07C98C3218403037AB1B0C79
8A3295447811FAA67A8ABE7213B35D58F3781E088B27E72D3BD3220D900FAE80
618EFE93FE0AE4FA254AA6933466B5F69BC39517CF9BC54FDC84DF69ABC77DE3
E47E75441E425A4D169CD52C20025C6652BA451B1D03DBEC8564497BCF52F33D
4D58A49B8107B868B203268033C9CD26EF597EE9D56F81CBAFCE84FEE09724B8
2B83392BDAD901F5F9DDB20FE6A01E578AE4B762800A4E87BF071CFE2BC41F4E
4C4C9E196DEF13124A52F032D5063FEBB42427669384CDAF5EF957BB155207D0
254D52E3B2D1370D204DE9C42EA06DB38E1ABB2322173CC4F1159E2347BEF757
82550B50F1E1DC93437712742C557FC06A5378A3C1854F07BC757AFFFEDAD24A
90A5F3B72DCEA9CBC5BB17EC190C0BFAD081C74F9996C66B001153C01BE9EE1E
87719537097839B91E00DFB77C87448CA07A0DA347AA09144962DC56AC052BB3
2ADDA98E3D3E8AE162AA3E295BB71904FF1F7D2F4351973FB76DEF020324C63B
3538B27CE6CC6BE2801A3669976E74F7C63A2AFD83C8547CC9DA7BBAC033CE57
521EE6E44878493D6D718748660BA483AAFB92586E6D617C262289EC34348470
547CC1EF82C4F3F2301B87D02680DA1BB6DED7BADABFBBA97B9B7AE9487877B7
4310D83B5B603C856EFF1DADC7279AAFA8F0E0FE1086783202A4CA61248F5BA3
379311E2C4FBD7456641935467CF53DECF8B62F9B5A25384921BBAC25EA7D1C4
D7AB51D54909F3A172365872F2FC49619E15D1D90E77CC8C742E01FE32E29569
AA57ECFFC90CC8D6DAE452A762DFA4EAA6EF88BEE225825632D3CEEA69C7B112
FA30A46A3E01EAD0639C518045A444AC3B16DB7B392EECFFA42C528BC5A3E61F
103B00A26AC8AB3897274E613D5F2D98855D8C4D173C9DBC429EF6A7E15B57B9
E4171E7C46E85ECCF860C6BAB04CFD8DDB871ECA5E8A82E8415F7412223A1803
838861C34E3F103A35636A19CA7683A607D1E256348422A6F8BF0B2C171B589A
F02291F3EAE7ECC3B5350FD2C86E6165EDBF6B5910B90F25F51DD75D4CAE8EB4
554CAFA78BADA91245C97587972D6A1AAED043447D567552ED79E4C6DDDD92A0
0CBBBF841CC6210527BC9557EDEA1C2C497A8863BEEF75973D495AD84644F167
8DF1A39874E386DF0921B93EBEE7B7B41903A8B47870AEC1A8727455317E7AEF
D7E81B176815AED5CB5722AA5C0CE897C4642F49EF83E9C1096006E7974B7C31
B76321DD9E86640C979EC0FA3308313DF2784278072F6BD2EDD4E715CF7AD9CD
866EA69F7659EC612CC28187D528A13BEA41330F14AA82082FCBDFF6A5C2E54C
FCF74C0366F8966175944E325B347A395AC792E98E55DDB8FD6DFD3EEDA72873
4C633CBE1BCD5C041704412BB9AA65A3C049854D8C670C5A9511833FA858B208
1F2D7BEA95D136C6975A895B38D03821A14A79CEC1B7BF91CD9CBEDCF36A3693
03572F9EB49E20F2769509DEE8C068C936C10A3C1502A98783E4F793867F4DF5
05EAECE99339965773D9B4D90F8C207F26FEF44B349D7E32C5F824DF13EDC75F
37521BCFEDEC9154A75EA905C65271F5B733D21F6421BEEAF5F7982F4DA430CA
D420070B615AF28BCD4ECCB6E938B78CDBCE85046A4DB482696DBB88C8044629
18C7013162224B2BA38119D525AA13EB86AB43A73AEC67944A26D41FFA0D56B7
95673F4DFED7AAD5D91A7CBDD900C9843A14E9EDF4FC31C58F4DC53435343FBD
4B1B755FCE0FC87EE07AE462870BCFE5AA80B8A5042A6F59820F0463997A45A5
15A1353C0F393F19DDBB3C49DD759C2973594E78CF544AF8DCC77C933CFB4E67
2009BC7F1C66F2791AC7E4873A6145A8DD359C4616D0DC565A4695D5F509906F
0FC37DED983DDC6134C66626F6B7EE9F3408E26F5B0D1A5B9367E3950A076860
EEE2BAB1D6976582F3808C469AA0D84FA44A301285A76EDA0A9A95B72FBC5835
CAD3E4A086444CA15BE2DBAF15239B1DB295BF581357542831A1A8A73929FD0B
DECC0DFBC2263DBAFEB73DA2B227112C159F5508D4C052E165AE345F98BB7ABD
D92FFD995480EE0E03ACA7086CA06958DAF791C454A5FE989D955840F851DD67
BC374D10EC1292898DA7EDEE1D8C8570842BA3AADA153AFE8179AFBCC12D00CC
389B2A83CFFC91C1A95B9DEA5CAEA3B1B30CA440F0A426A161BA95F30BDB645E
6614EBDC8F257183EF53EE144250327818211E3721B3985FD5F5A32828BC7B31
432165933DE21FA4299B608D8F61C94906347F9909B800ED5E8394E8A10ACCB9
E96B3162D2EE3D876574A51486706BFF57909E773CED7BA38E82A4432FA70A80
D73DD8F82791C4B30F2257E0924F2ABF48BF20BD74284D7B566A9058E2BD64BB
B769E2DBD7D66C1D762EEACE582BCA1BF1194D4672CD0487F3F424F271B850D9
4878127491E10A917C91B579E98CDE20E3FF9B1AA7034826549B23066BF5C2E5
35CA24030252AE263CC1390493D8C7F435F42570C479AF096A7859BD3A1EF285
ECE5BC1FF7A6EAA7751157AAC3C0C32970F919A2AA1A90244B5E5E2C5DFBF0BE
D06874BB8F69DE7BB583559E432E2DEA46A2771727E2B53E1EFE9B18B1F6A0B7
BA0B564B61F4BC52538549F163AFE3DB69494BDB93F2AD06458A81068E9FD9F5
A82EBB7466972683FCBDD64016F21F410BE0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTI1000
%!FontType1-1.0: SFTI1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecti1000, tcti1000, lati1000, lbti1000, lcti1000, rxti1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFTI1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-95 -321 1415 932}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F159DB0CEB42017533BBB306E6672F8DDDEE8A3B
6B9B323FB49A7ADEE78446D461D84AE14D25E874C4C6E2F7E5E414E33B0ED6AC
0D50F9DE6403F4F07ACC25F73FD6CF8E8559149283213ADD971C6291D253EE57
FE797DC5B048D77F8A6C67F6E1BC8D444F21352F8B40F8FCB04ADDEF61553ABF
CAC7218544A040752E1D2986BFA83E6657CDD90F0CFAE380B190912E11F1DAA5
6096AABD25AC2B2BC4C55FA614150C4000AA534AB54407AF21CF9A585E5EFB83
75B1260FF4E2C4B60381F0928586EE907BB5B429C77F26C2F465D9A446F37812
979C16CC88722B2987C591425AFD9F8FEA9C58721871A6E7EC6BE3F18FDF86D3
0B8AF67B4F85462B2FD36D2597E0FE6B51FB815C60EBAC4EE74FF39D2ED1AC54
D8BF48EF8880B3287DABEC5B42A4CD6871D7B6113093D2537534232EDB905BD0
5B8CC6AE3BFEDD03F66E1BFD36EA084928AFFF5E581E5242AF3A53F074CD73CF
E69205EB4A9DE53E47B8FA10A72196E929AA846F30EB340889302C5E1C22431B
224AFFC5BE98FFB8FD189565808D376E5EDB684FC5BB9457782371D2AB1A5E76
88ED3D1E0FAA8AD34EC1FDBB1C0B2F7605609E8013C3690F488F6A4CAA3AA124
1138F4B84F810945C8631658C04BFAF05B6C63FCF69FE937267F86087C411546
10875BB42FF45E8B9B582137E76B198694416AE7BFFF25F3DD9EAFDDF799DA5C
0C592E6418EDB1AF962CBEC101E65A398788AEE6F0B71D071CD28C92B4FDA5DC
07993FFD58E0F746526BC57B7C369946C5B054729C1E3CC89CF705834D9D6A34
28BA1A19C4DDAFB83D7428CB5E0C5A48D35A4022570276B4A369D76C3BBB4535
62228E7AAEF4E5DDF39DBBFED63C8DD3499DD1707C35AB601FEC1A6E5C4E9D7F
9B4AFF1FCCB3AE6BBF82CF61AA4BD373C4658D5063CCA4D5C10FF60AC950E87B
26F5AF801E90D758318A822022777600FDAAA477924D5DB46409382B0819B2F8
FE3C85EF365EC1AFF8BA4BA990A693B79DA7471032F2A6AA1A5A254AE0B94DFD
C8D2396448CFA9078C14E432D5BAECC8E55495FB8EDDECA86A8FF756B55B6146
2795D6FDD49D3784B500E4051EFBD948427FF67A9EB8C19BDF47AEDD61F124CB
AE9832EEE8043CFCA142C91859D995A5D18853370082199F40F05448AEB2937A
DE20F8DF8A521CC8A0156D87ED472286FC177244C85FD8F5517AC6EA0D8AF60B
505174A1DBF0640F63672BFBD4D51BFC92F398E0CD32097F4926128532B9CE64
52FC984F749187B5D3D20143AF9B121FA612B45ABE27C39EBDE137F15AC4957F
58F654975AB4296179333942409B0C66BC259484EB5970FC637BCF98250CE576
14EFCABC7A8D7BED583B1F8FC12C4F3B4CB98AB09A944A7FE24707CB1E82E216
94223DF436883B8F3E1B7FD8D21090480C82F2BB97AD4ADAE728A404E7AE9546
9839226D16C5A14E3C0BA25435E1E46DBAF38F0CF2EE8B28304D089766888A52
54BD7D6FAE110EF40898D7E239E8350312E626006CE56AE4C363C341F1F04C99
F38773F7D167E59AE280B7851190EF3BBC0BBCD816005976CF0513A582235B8A
2AB1B879147A022585E100F9B6B473BBAD86DE9CD07668530477A5CF4BA7D353
8B5ED2083AC3CE9C9B1D003CA68A7BCA5F06C8945703F491CDC9B18BCB322491
729B3427CA8C273213A4056CE56D7A295DA0B1794F43C05966166B0C0BA4C762
262751C085ECE42E3B2998699D33E3C7C77416A5B5D7B542AD4099C81A3D08DF
54D34CD241612764D8E27354230BD298EB33D9DBB64AC7BB86FF89E51D3F3D75
1551E44ADCFE3DD42659632E7E366803BB59298358BEF7B30F957D0CA5038436
02DCE3AEE7A2F3F1716F05FCA1CD2CE148077DAE347C60D739BAFE40815F6866
4950625E9BDC2046ED2685C45B0AE2887F9FA070451A2E1F1DA0E40E78DDAB0D
4645AE2319A3C54C8049D22C664C7A6777F03F68D10E5455263040268722EF4D
1102CA1BD0DC101A75E7B55F34AAB89FE4BB84741A73E538EB6D4F48B113C0CE
23DD0880FDE5B7A92A72DC9A379962BE6C8DE6348D17A70872F222601313AD77
16A55203243116A6DBBEB0C9784A4348C7A8ADBC32A2B5C7189C9C1B6FCA7003
A22251C2B9A87AC704FBECDC5B63BF8BEE6DB3D394C1C8EA20A85F9D5784D0B6
6AA0C3A41FCEE0280BD06FEB5FF08A013BEBF5867C5C55E0CD6D56B44A71BFF1
DB3688119D5B54AC89A06067B37516886C28EF3F308229BDC85FECBCBD66B29D
CECEA53CFBF0DF307B0947E7F4C640816B2D8390410289B7ACB44FF74149D1CD
E37647068010BFF01F3A260675D3BE6C83D561EEB7407B24BB45C466BE5C1BA0
3B7B042827E0560C25532C4F4213B3E8BE62FBE566685F8CB942B711576139C6
883419954E4F14E05EA522FA3330040298C4B93E1DB6D67AE8B863082FDC6648
6CB43C11EC408F65B6C550E264416C1C3C83FC0F1618B36A29E28F5EBAD95ECD
B46CFD33D2A467F05E48EC19D506A32CA53FD08D69DCA9CEB146DC8ED4A28147
C584351D3B85F6E063326FD73A33A357D106325563C1D31764B442F0E40D94FC
1EA50096940B6DBCCBA1E77C5FC561F61D00903633B52423947041F7240D5214
5DF460317581F7B1C7BA5B3BE1A3923AE34B82BF09F5A91D094AA8CD467E9E59
FD7FBD009183F226681393B97AD5E9E77B6982EB5B5539494B42176BBAC6D007
8BFFD5C5083F70482597F92C1E61C861F9E8D0EBB3AF7AB51D2EC0D2308C7DDD
622086A491D89933A0B74C8C9D7DE44D6777D90A3D18FA8F74E9E873AA62A2DE
E42F844BF8245D2B8AC53C60CD071C47F6E34CB39D478CCE2F1B25AC5D35F735
AF88148CB569771FB9C362E00FA60BDE73DFB8C859D2A8E127EB160E02EFFDB2
18240685BFCEDE663827A5F25BA96256A535618CB5D7E70919B19CBDE39765CF
8A58DE861C6C4726516B03B6867286EED3003DF20705ACADE1E4039D242E7434
E22EC93EAB81BCB5B6FDE9638AC75B7798D02A7564F687DAAA15BFFFC119C09A
0CE284E9A091FEB579BA6B27F01737DEB70C29F21E57E233C21AB044B32D92BF
326C93E5074B9B348AC84A12C5FA99DAF44C46EC5D8721039F96DA5329C01795
111596A4A6FAF371E7538C2BE176FC46819057E135E4ED3B50CEF20DC89052FD
1EA5F3DC38226831E87C6287E8616EE990097E9B476A00496EC4BA74B755FA56
D641701E87388071F414DE4EC19E61E38A7B907488BBADD04EAA05F38D70069F
7013E01F86DCCB431E96F7A501F1BD7A6187694D9C845B328B49213E023E56A8
E4CA3919DB51BE2980B08CDB7B28D517F3760EDAF90D7BF2CD8CE4AF4C5E1073
712129F18F0ECC9D117B85A993DDFD706BC832BA3D991C336B6E3C1FFB193F4D
27EF370F3F71E5D2CD6B6D75983A6C3B383A6FB3025DA828E44EBA8573D662A7
F38091028DBA6CDEA87E93A6086E74D33E8E726ECB9FE90A905504729B433044
CDE2689ECBDF01ED106305D6EC72DFD554E4686CA77F47567A9AA1CD0E5B772D
4B750D3807662AE5F13EC903E8852B1B1FBA1C70D3416279A14940F93FA5BD3E
04CFA830F39EEAAD614EF2470B36B6D8EFC1AD71487B4B93F9E9E6FDE07B162D
1E7C9E0DBEBE0014309A50469078502B3AE313E578D0D952C1204D23A4632FC3
A74FA41F6CE7D1CF504B90869296FC49BF23964E56071558484DCA95E7F49D51
AB8BC9BE6A4B808EF47D448D48E7F7B1CAA92EB4CA8DC2A87F914EE846484A49
45CE4A2EF25E3EF5CF2FC5BB00EF4C3AA5D733BF2A21F6CA83A98C863702E141
2C2BC6BC6BA640B4499748041CA19A126045D9566516CB2C84A5A92982A084E9
C434944393DCB247955784EF523168F3341881946696B68F9CE53FA3363F7721
796E0283A957BF76FCA4DDC70B699BF5A409CF4496A866D0CA99CEB47FB3749E
05028F7EC1F9C11CF693D262C57216723618BBD0D2209C9A8B82F0CA160B7755
5453B75EAFAC1862AACF55DB14D5999DF9B3466A37E23312757847EC43EE268F
A73135290323E03C0D11AFF3A838D148ABABB6A93E0905F1CD792F396E9D17C0
1C390C32E842DEE1C83895DFF1F78C1C1B356784C74164DB120EA1BBAD0F5810
EE2CAECAFB1B59FDCEEB82C9EC075D437B9E09AC1B1D3E11315D0D6501C48C77
F097091DCE9472A43B5FD6AE51F6CDD32CDD6947AC890EBF62F55D2EE095EACB
0FE8C4740329E1BB998E32D38AA3EDCAC5495DBB0B7984053567E33C7E37B2DB
7CD494C19A2D66E18FE29270B941530493AE74AFB1BA22E733B3ED82108FE391
030C574FD2BB3177037AF0B0020ACB81E231E7B98B8C436A754751D77B78C50C
C6E9E86B18FC8AF83BE094DC8881F0A0AA6F483C4A086687F6E7537CE93A8B52
B17D602DBC212AF17826FD8571CF8A62057B35810768798A38B1EE31464B4380
1A35FBCB962C4EA67DD923D769A399622A6EE0F4AED058C502121017B0723C63
BE265DFD1A3C384BBCDAA0C357716CA0EE1933384D556A03BA85152F25EEF6BD
F65E4CA34B00B0429087212E70F4A3D6F4704C489F0CD3E72D803879CDCFDF91
AC518CC7FCE39DB3CA9C1496A8BEA5F49D2E8A1D077FD3AB1E981CDC6B38C064
2616D02CF31590E31E2BD482939677CA099CB21516BF3340484D32D0D91536C2
8C77F80A68A9876462B912255072CADAD1F946C6DADBC6AE1B3727C5F3FC38E9
B3417510A0607AD36D5DF5818344B2426DC402F737EC89B361A9FD262DF82DD5
E521CFEE52B8316EAAFD48E2568377D3C386CAF73D66E3C83CD03865CD49DD86
CCB8C42F1DCF922578C6E80B0DB72245BB14916D7EAD3951063F0B22FDC00322
8E7EDE89D58E6E1F1A99784E96C1DE490362FAF9F6F9D542924E47FE01EC85C2
8BF523D5911BA98AADE3BEBA99AF060848BEBA0FE32D73F1A4ABA95172DBEF05
3374D01E8E6D964A6B2735D894AA31D1CDD2227D4F469F0C05D09C214FD2D226
D2B89E41EAD591C03DE559CDB7A45A9F1DBD6E5D046D230FE0F68EFB25FBFCA9
844E5486C4BF4AB6BF1D70B2D44F9BDFAF6CDB3557FC81B2084563AABA0045D4
22907825191810D79BADFCCB04D28D8BFD350651BABCCF3CEEF89D949C234A8F
1D6928EDE065F99327E11F4488D13D4217AD82C65D7B8B285109A2CFA6C92B41
DCEFF0D6228E233F2CB24D42FE33605E3C8345BCAE8E07258E77A8B9BB1D32B7
2C3DF51DAA107AA69A926FA86E4865A4B8DEE708E8CFE7B54D9EDAD12251C876
71F1852B2C59CA885F1629998F846CE1566707F3B35EA38D641E848C586F136D
0AED4115C6773CE44DF9CFDB423B77A67E7B99F3A6371C0DE623A02F50BB95C5
CB291AAB646EAC834805AA3FCB115CB96DA51F8AA52843BFEEC37CD5524B1427
3B0FC68DCB97A2230E0033A8755F4156FA9869AE5C0A6C9F3ECB4B6D91910586
6849D33991981226D36E6B1D1D19023A9F9A3AD8957DFEEC037B43F9C72B59AB
FD1584804BA708B25C2C392C58434E3250B1EAAD330AE35D5DED75DF5927642B
9FD33D51A012779EAA0F5B38CC6224CB5A408CFE404438844FBCF3A56D06FBC2
115666ABF52892283705C07395F8E359A52E88B2246C1842FBA31E592ACF1335
D15C8042ABAE0FE58ADD3E252B1F7869DB3ED1B6827637A800D8573B768BEB3F
2A33A63F5AA84626BFE60B113697B341D04A4052704CB324B0007B73B6FEDF4D
37BD09C7A9010D2AB4D8007023BE7CE7DC5954D296971E82F7FC211E145B0B31
BAFC4A4496995A94BC75FDDD194306F956752E4992D71A342C0C2618C9D9A92A
A4B4FEC6FB5DA8D443CB9879988DE3A52211676DBAD2835462C11996C1DD35C9
7D24ED95FDB2C93C0C768F27FA75B7362DD80966AD1D2423A6ECA338AB0E8A4A
9ABFC6D78107DFB9C648B21EF459095D0FA32898E098DC953DEFC2266B839AF9
F1260D278053E8B99C850C4A7B89CF57F2D24161F46B58763BFDCC677892BD54
6B594ADF0FA37688A4FF913D3F49FCA1804A3AE1AAD75B7C47E33369457D849F
C481D4A79CCB9CD3951660A613A35EAE2EFFB3FF6A5EDFB01484AF7EA09BAB0A
ABD3161276F5D4DDBDE65E84C51724F312EAEFC39DBD284D514ADD1B28456B4F
B0FA31ACFE0A64990A10A7E773AA17DE186465B7952CBF7A90A9ED738FD89A09
82FB3C27E569985EDD233E59A16A311EBC798F41EFF7A865C9E411DCF6BC72F2
4B4F7CDFE9D0D56A913BBC2DA1E76200C1AF32C5B6F1D2EA634FFAAC55EDC72D
B4EC77ED22535135C38A43EEAC604E5B316611391D8C36EDCF276E5F9D341213
A66DE15825D8D9BD1607C6C9EE629850DD11C600E830E1A79CAB9A3F3B4B4CBD
2E6AAE08682593015AEC21A85C9EDD20E7A5CDA4EA23EDE71DBEEF29DE494B30
6B1534CDE85261C5066CF24CA8194AD7E5041381DECB128DAF4182AA06E71C5B
B02CFE5B58AF99DF6CF3677AE0B7091443BCA512BED90F03DC4316C410B3FF37
20902A7E5644848A57346228A13B9C83F17049826D9B40302ED11A53852DBE3C
7F610A57748B42B3DE731DCB114ECDF2A0198BF8908EC806BC05C1415B4811FF
C2A59D859BAF4854C5CB185148CA67271539BBE6E5B3E13AC645ABA67E9FA375
989840652AB59C12EFDC4D7182F953CD07A639CA48E61952D1BEAC0D384E9F0E
84B5F49F376071CF2A93C77CF3B9B6A5732CD54204B6A9FF5104CE94A693DCD7
FCA7EA73E1EBB80A1CD84A3A3ADF88149D2F66F5579AD1B1BA748347467AAC9B
3AF9336173B743345F96A890BB1935C4C3431DA2410F8CED6CC6136490129462
27CEE29ECE62D3E940616DA8FDEFB9466A4066E81C54781C05A71AB5684CFD56
68912C805088E9FF01B22C0BA971C2926734DF4BD142E097AE4CE80AD0D56398
4982BB6BFDBD8479215B89E13E8EF2D25C1BCBDBF2B1709ED65D9F39626DEF53
C75819116591E6FE5E55793F696540BBAE81C892FAB1A20F4FD7DA3D965F07FF
04C7D60858A58EF0C740E12F765DA7C3CE850C44ECC17EC3CDDDBF40CA0A9B9D
DE4CEF2AB20C54AE6DF8FB4FCF9E05EBC0924B13721B0F438EBA0FEC0443E553
7EB153BEFED9B536FD1773A23DC42D806677B77D44A4022CA7C472928B812CEB
ED9AE61AFC1AF1B664E9BBAB13ED3A162658ED018742B634DA916152F9389C65
F2E152F97339DECA6F7E2CAC73CD72AF4F5216FAD045775C2F5CB79045691E77
088FC63D9556204DDE1AA36C3093ACEAAAC234FF56C5BD5BA75A8CABB6FFF748
1299F1787ECC2F3BF58BE6A5293EBD47B0721856474C03AE17956D786382DE80
0279979A7D84ED67A459476943E00696C2BB18C50CA51CBF49527488D684992F
370250081EFFBB6AABFD81B1F6C3E5BADFAB9330603C9865BCD81F1D0D7E8214
F30327ABB001A06E36390288289F643CF6D2EC9387CCC544B48FDD245F46CEA3
F2CE1C8897D1E6FB65C694BC0C532891D2007CDC6DD09804F8C6D54C7FDCA915
F637FCC5AD4B2EDB4393B96A4230D90CD8C2B61F6DF42411B53DC56643BCDD30
8685ADB766EA4D2CAFA5AC1222CA25C441D2FFD4DAEE43CFD08C963B05D3627F
462489F20E18CC4DDB0863CECE699763034716220E340B39006E78E1E4863C68
32B4D71A1BC7C2AF7EFEF9B902496B2735D12FF05741EBF99A1CC07CBE503141
56B1FB84A24A297990D84901AA672AF4C05EDBBDAAFC00983FCBFD9BA0526D38
D2B949323E275431B651C756F92F4E8524E3489795A2324A3AE672290E29A1B1
EED0B0F2D3A3D7EFA6330617982479AA6AA248B85F9E23AB0236098AA5EE70B3
0F061D1C959E907127BF301D1F805FBBC2B0A3D093805B9527994F1B1100CA7B
AA107AF158F4FC579376DFC6B634B92086ED9CD83DE07CB4797A7E638F006C05
2C76630B40A69C00999B2F2871B3604ABEA3970BCBFC6A61A486FC42ABD5D84F
0B692670F2ACCA99724FC57FB1AA13E3384BDB6709BC632656DFBED14A604492
4C1E8E4372C91A9E3A9337EFC9111FA5EAC7876006E6C71C1F5FE888E5049C87
A4719B2A623EC9FCFE5B319DE250756CB370C632A5CB74684948671E5A5F3E48
7C42141C0D4BB21577336271C5DB81E42D7BD21E684B9F7850DF1FC021452229
867BEAEDA1643925A919CDBEE9E91C51725CCA70591BBA1ECF0CA7631FD8CCF1
7D84AB399FC3F033C9B98636EF5DCBFFE8F2DB95A73AE6CAAE26F2C9B2B78672
D323718C7294AF8CDB92BC63E7BC48D292A4CBC1B060F12EF89E4EE60AC3E2C3
8EE6FACB1880D07BD2E814CC6DAD4D69CF8E96F6A0834A8A32F7887087525295
A1AABF37E3C1B6D3DA1C850FAD98E2E3A19E222F2F4C9561291B005D29EAF297
0FE16B3D48337861B12877C2244F171AD4EF68CC5B3C2C095688B66DF34FC027
4056FFA072F4528C9345A08FB3D3ED38078D22F6C1056BAD17D86F381ED2C71B
80282E0F6CF621B41C6DE0AD92E4D5C849F8C55D7476DA23F631BC19FBBB4501
D3613F807258DB1902402B30A79590B14D35D7C45087084FF5BCE286A4FC4001
E690808BAD1E0D5BC544AFFFA6A435B64AB5BD2CF3CC3CD559C3C51782A7A7D5
94AFF8C59D3F86BDF52FF56B69D74B51FC8DF26DA8FD26CDC15E7A6185B329C8
F686D75A9D8F3D4DECCF12416F2ECCE78AEE68E5C4E64CBB06B3EE31464B4380
1A35FBCB962C4EA67FBA7CA2DFDA6B00149092F09A63C681536BA71276455B8A
F8819E8DC4A5D8254A3EEB80D30BF5B30EC9DC1727B44E0A07EE094607794A0A
F7E514CFBDF2C2EBF42BA0BED5DA1B7C85B8C0CB5381E259D6C088333D59C3D2
FC1AA09EA7D3C5E553AB897E1D4B399582330BC33E551987556417071CADB863
B462E7EE2E587DA7B7689D74E0965F73E2469D530FE1BB6705F9661760CA5A4D
28C7EE1707F9BE15F3262D019CBBA26006FD4B6A9AF160524D615733744220BA
D2C45E5597633BDF0910A04F5F90E3593CD86F510752D43783D87F5FBAB8F1D9
1E5FE8366CFF6EC9E3805AD723E66ABAC687845150CCDF1D4AA96A27BDCB21D8
A1820F4E426160B8634796C1E049001979E21A2503CB2528CEE7B8A26A2C45A0
F05379B059DCE0D9FAD415603FCA2BF6165FAC87AAEE5D21DBD34CD90B93A0FC
4E93B51158441BA9970D09F3470354EFE9C7F907F3AB1CA99F4009138D755DAE
E9B1DA9006F075E27DC133ACE8E34127787FE5831EFC1FE1A5127BD552B9E6AE
FEA7DFD7880AB829B8B472A70259B3704D048216264B602A6D1F8F20A1071176
B200FD98DAEB522214C891F6C64590A3E6AC30888C6F8CC631E5B5216A9B9236
AAB349BEFE674D6A259A56E4DADC1E5ABE8CB478C77DA5BE33A846D2FDD25DAF
9B5A747EB528C878A6897BDF07BBAC1D017979602FDC9E0B8B2BEFB7C31EB88C
28C7541E7517827544976A3AFFCA701E28496CAE0CA0780B2441844BA58D991C
C9B3B1267AA80875112B58034887368138328FB60C988A9F02D33EEA03C02CB5
8BC77F4C05B07E6D9B4EB74DE12F04511380430E168DF3B656410AF704BBE793
E2FE0E4359B41B3257AF837DF07AB8DB71151A5223DAA130D0F3EDD3C554C2A1
B8D8B01ADDCCDF489CC6FCBE00A4EA344854C9EC681F0854829DAFF653300EE8
B3C291C2E68FA939FA3C50CF5FA0C948B2B945811D5C7133354B74DE079EE97E
AD794E4437043E043A79D6658B2B3406153234C77C16339C45BB9F516A847395
A3D68620086F5A0553E97C147AB4625EB10375B52714FB0607132B66A80659D1
E8011A2C6F1A20CEC5188842C659250EA019C153EA76C10285A0B49439200EFA
546414214267A09B032A28C1A77C92F2C2F55DE686B96B4D486F2C1CD0D3A0BB
041ACB65B9E6E655AFE40F6985ED76735DE0D9B5D5AA9F42C13309736B985C52
34C45D53C144EBDF1EFABE4E1DABF01F31011ADF8CD0A8CDA735B701534F6D40
DBF79E2D6EB4269195B89FEE748B75099C44EC4393D41EB64C32426D3A136C54
AF218AB7AD80EF8EC1339765E539AFB850C81B3FBE79BDB97D80CF1EF32324EF
6B3FE7BC238F596D899ABF906ED76DBCB40AA920099311B0587A9AA97686E8C2
7F8FF022199E7E43A3301702D774DE3F53F1CEA1833F67DA6D5ED6274227EEDE
49274D4F86F685F130C37820BAB43D4BFF0291CEBBDF51BDCE732F2DE4A09B4F
6303D038DAFC2D87AAF534BB79BE229103559EC5765A12BF0300EEB81921A8ED
E115B2DD67A699A0A612B911A4E013B89CE27C2A36F06F3DF2CEF09EABC17D3F
A9B84E93E6AA36A4B7742FE8CE04F0D5204A11D4FF587253FB5D2AE269BC7A90
A9ED738FD89A0982FB3C27E568ED6082BE38879C175062032E133A03DB0BC55A
66C05375DB009435761AFBA562AA94C65B3567246C5BA745478E78F747692872
99AE6662058C3D006BB070F413E94659865AEEB62DDBEFBEEFCC6D6706337662
B9490499EB25654D7609EDF4C2991AA96DDF4E73A7A0FEA464ED04E8C7CF7643
E89D5BE1902C02C264A3E84DBD8EF6C55E103B4551DA86AA053C88A17B2E392E
8330F91062E41C5DAD8C80046381AFB3B4C38B81681124F3615AB9D646F40DC2
692279AEA3845BB2A1A917EEAC363FEFE6514DE45F4DE72FF74E13257C677B49
0F837A80639B076F9522A3603C6896C6D0643D9A98D0A2B019B3CE624C3EA700
CAFCE5A676DB280E0041D12D30CE020D56E982500EC026511BF3BF9322D0A478
F6D608E63DFB6E9806F3DDB54D8434A95E9ACB78754120C767307CCE056DC98D
D810AA94330D7F6BDDC249097FB80FF85CF3C88AAEC1A55A459D3F57504048C0
F21E055988AC44FEF4946A1C8EA440CD6712D607761213D738E18967C256260D
0D7AC59A24E50CEF2C847FEC4004F906E8DB9E45DFA083248D170CDDA5C1CE6E
9161790F04FB141C0BD80AAC1E57C22DA4E77553F9C26F21765DF2999A90603F
1C2834506D470D9A0471CA3BE72B042DF848E1FDE8190F939FBE61E12219149E
A507DB1A1A704B01E9A376CFC395D0D0BD0CD16B5BE2721C721003274643720D
3A7EE90502081339CDBD4551C6CB5E26ADB5ABB29BAB52EB8E57C50A065BECF1
93451B048ABD6CFA4E5913528E319FB63AF43BEBB437E8E5843DA6DD24835E92
A26EE7A019738ADC24D7AB7F99ADD776683402C988B1196DBE0E5EFEA39202B7
251AD2BA0469DB3509107C082B956F1452E54046D2ADCA3134984B6823FD2C0C
1AFF877DC71602C0F777E462C8929FFC1FEA0F338B5D79A5BDEE7B07BA3E87D0
5609F98E2E518E2F1CBC8B19908F90B5DFC3257B9A2E8F7720FA95A0B84A8940
16987D62B6EED164758CB4BCC6C08230A2987C451BBA3FEBC65BE1E083CF5051
A1AF582FD986BC201BF8EA3015510B717C25CB76403F967AF21043CD4DF5D19F
BDCD9EF6209123B6E2B2E20A7CF2CB732ED3104918890C67B2C91384667F59E2
4F15194DE1E3A7D35816E58381B4E460E8610B1FE94F320F96024C27EDA2A2E5
2972728C60CF6EF94D0EAF70FE2DD39E8C3294101DD61CB20F18DE152D2F8ED2
5F79B067492DA642C1EF81D9CD3C676268F61F8FB0F98823AD20D45E3E44D28B
0D26D7C76B8D7AAFD08B7CFACAB3BCD6697A9C66483FDFF90F5EE0CC44868890
B42D946CDBF3A6A58B192E57F19E2AB9AA3345800E21813B2288A937B2AD5569
A92EB33FF3FE34819D78FD90E2F0142AD2229CC525B45C7FEEBF8D4893660E5D
C7FA016CF35B379FF92FB7D05438BCC522EDB685275504110F249F805C5234B3
53CA64927852E3D983F17646E195655FCD1EC772F2D81C2284226E697AC0ECBA
84B089174857EFC5B4DF8F93FDBDFF2BE50B480D918A8C8A18DB8D5FA420DD78
FD3ABF42F521ACD3E8F45B565D6004B154B5A9EF3841C00B2EAE7BF294228C67
0C9C7CA1640700BA8A77CAFDA9B34F852ADDCBA9AF58733EB7338E013966502A
F257E255086311090CE3CAFE1505687BC6DBEAEE232B1F2D551B141D9CCFC489
CCB37A28ACBA25469832351BAC9DF7903F6844B593088B5D6A6385747AE505FC
9C5EC7454ED726CC1A8EAC9437EB44DCD3E59302B7F397412F05BE0ED67AF834
5F37A0B20E87BD03C96293B1020FA985DDB2E479949567CDA4978C22F60CAC4B
ED5FC979D11C11BB05799B859CB3D3ED5CBD8B9CB8484AE4B3A8443532A4757D
EE6DEF71DE6E44FDA01600710985AA18C7F69E4E1A609A235501E60915EC94E1
9876CDE6080192581F94F9BD953D72326003802893F44209BCB6C2DF9A9E026D
BD708EA65CF99CCD9C17F6D8445F4BCDBA0E8427A3921F8C0B68AC82C7B98DA2
A50B7E1096D8819193D5524B14273B0AC3764166C8DD6B727B5F77F1414AA87E
1199CF5A2723464F560CAD8B31A931CCA7A451231ACAE4E12B03013D7B9BFE30
5B9AA721B0FC8B92B37E736BBFA3E8112B67C5D78A1E70B13B8CE9C2702D5063
750404EC5BA0BCF000DA9CB220AAE72FD4653F41FCC7D5480178B1EF3C9A85B9
CD255583782E132AF05CBB0B8C8C8B4BA45E4B27AFEB868737E6BEA8DC2B7058
2C3CDF63EE87449911161078CA5C6796FBA7C1C8223F9E340C60F875C1043092
9400B6D6627FAA68EBE49DBC6266A7F1D75E9B19BA47122586EA66659EED81CB
441C72316DCDB0326172364A0994947E2464DB2B18FAF3EB7CBFE7BED6E0AA1A
FE4CD94D8EE405956E3B9D418C44050338367E06923C9C3889A0E5BB275660A1
86C56AB2030338F12F340771773A22CA4CB05D40722B6E265CA0ECF561E43791
F5FBE92F5EB6CD0BD9FAF21F130EE896ADE39F279DD01C30EE9B0711D94D7EDB
931969D40B55842CF7EEA76E2F1D7F46D85AE9C70B677315D25C6F701533C985
B5737450A518557957B8E31E149E1087E757CD1B89EFD0625C219B656EB774D7
E9EDF70FA8326B8778F2DDB768507DA2CF9AB31CFF42FE6B496384209628E94D
932F2FD86DD6D8E3EE9E6A58ECF01242F27DB8432FB415168A1FFE7140437126
43D1A48FDC2A1223CA6D67708CDE009CDF9C014B7E2F1B6809B55EA3655C6790
7A6B3FB59E36D639D56AA2AD3847288137952E2B1ABA1511176AB680AE19B726
AE7FE5E3D3BD02D6A519AF0D965A0FD9280047A3EB273F554D5D5BFD6D0977E8
068488D64DA337648A509E793C5D6ED62F14B94F1F90A29F713C5B0EA71791D9
42396723AAE2426361931E18D1C293A75860E50BA2A8A04CF4BE2151B9CF1801
78D6574F69F5929FA5578FBCB494B1A26121744435A3BFDC2A542F4A34F85BE3
6617063BEC1E084A18688B13072B68051F4DD428AC3349456B44937D21D9C9BD
6D9FFFBE976D4963BA1996E24CD27CC0A4EB60A8D6B82C973F1B91C6F9D3A954
0ECF1EC68E467174529C5E1444CA1DB554AC725F8AD1FE1C0AF9FB791BFFD4AC
4898091CF2B13213AC51E85310BB863DCC2C49845DE5781CB3FA192A1138F3EC
19A1B580D389622F0C6EFFD9CDC61E9D100F43CCD791D1E9D4911E68F19A45BC
C2905987C2650C76CD606A0C137F14F9DBD135F73FCF408F1199E124CB8A7B33
2A3F1001D0D6072CA4B5D7338A987B23197184911869F859DD5D76F545786231
BE18C3EF1BA0E042BE11FAF9E0D2ECB4CC53DBED3A875068A09D144E9B78FA5A
7DF06AE64261E544F91AF3322FE62B0384F9CA769F4334C4E56401F247DDB570
70601A13632B905472D9B85FE5339CFBD0B23C1D1214F9C9BE672D5E887B1537
6D90BA20341E97392EA9C46F887FDE0013AC5E8C97D467748E8635437549A943
D248CD123E24A653A6CC58E599F5422BAD83C62B6A88BD1BF97437E7C0B29DD4
B37A767048B6086DCD65FE4D8452ADEB43EE32F4B213F4A4E1F2BF554790C6FC
92D815820869815377244D98341A6063BA0E864A73FA19856345A9C72F6A2471
B5FC5B9BE436D81C5D103CA1E71F459361CFB07A6E8DA7A1A94773BC1AA79632
1CB91B69CD4A10C37D5EABF66B268EFC6D7A727DA6AFDF0DC109E63E154A5950
66552EABA0523994401EADBA2A880F479D2A5F11EEFE4E9368562D5B736717DE
D0E881D27AF2CC54EF9A7846FA66409A0F2B86340D9838722E7BAAE0B7E22541
3ADC7FEA84B9DFCCAB9AB2DCDD2E11B61E3186ECA1A988610166AC7D111534B5
B76DCB93A228DBB6F56DF750F8D1FF8879D537D25FB79B99A729E2662248D95D
131D9DA302AA75A497172403E278DA27B2C434B8A26187F677C06BAD2373E1A6
C054A7BE1BC4B6837321D3560C6B36493C692BA5F4EDED8B840CB952F0ED7E2C
90C8E23708F3A1F90C1F4FF072A8A5C6007A3338EBE018F3F8539D22D9839758
F408930E780839E1949DC6E4C612DE06D5B8BE530257835483CEDBDBD9C2F6CE
073E19D1008017A80DD1655A7B950BA76277555D272C605B2CA03B00F892C767
8948C97A0C60DF120FBB76BBE1881A720DDB9BAA85EAB8CD5999ADA73FBFFE91
36A0B36961968234929CA4CA2FB4E7F735C47B2ED990A673CBFDB2865D1742B6
04DEEF210D0BF5C8DA5D5EAE6221DC97A222026D270FACF8A06A836354A55329
7B624CF811072D03EC16172C6715E6D51FCA26F90D6928DC7525ACB4DE668F0E
D0B3B89E320305C366319F2BA010ED31959BF559D2B997EF9F95B8BF5EBD8A35
C72A1C95BF08284082A317A38953CC537F7030D8A0AEA215FF96908DA88113F2
A9135365ACD7E6E3A5C6C44DF265B5C9574CDA1F04D80108A5DA089B21544180
AAC084EA30FE32E4FD82A99A140CAC1BB12E4022CBF7AC99DC13BA686A1A038A
6D38763047D0180064377806914B8A05F108EC17C1F70B090C5C9AFBB027BFA2
C53B4BC420EC7D90299390CF3393756046DD8DBF84801237D4BD7C5A99F4A320
5A194646FAFABFD516F8AD9BE812383106117C43EF02AB330A60B7B993DA081D
C87254C3A46CAFBB77243277ED8B54D4DE7D6C9CD4A075E7A85E60FE1D91A600
E115E70EB5023BBAA8B6AAA751ABFE802349FAAB0EF0FC965469CF60C5FBAE2E
0EE2840E81EDE0FF5C0655D4D6FC707E24F5CE10B99E18F01726872CF11DF36A
65F8751FD1E0EFF2DFA0F178E8B3708872720FAF77116B70ED6B0D916F7B7628
2662C52E7023944DD1FC7E93EF117B8DFFDD0C41E45F7F61CC55FB58B813F9DC
35C339CC467E4D22C358B735D6F84369BFA4C613C694F674A59A2E8C0CC1768D
C9AAB261C46DFAAB577C1A3423FE10A37E8DE2F7F84387F87A069B3B0B53EBA7
A7BC95C46645ECA91797E6B0FF051C61CFADC226724D1B575A000CFC63A71799
01C389F19E00C26DF2955F172225EE93EE476B2E04F6C843D401476BC6CEC645
4D27EC4383BFCB45605FBD58F065A6A210BFDE7F2CFEDBCD2FBA1FCE95A66825
C40ED537AD18CC959B0C5EDB08A29C32C4D432C913E829FCFADC240E4F7C0F29
D16F70989D63435A53C3435AA0E0DE20E6C111559EE4868D9F1FDB2A35A3FEA7
C98B379F161DCA2421F2B99D6933E8D59133310184304ED2773DD3DFEA537171
46AFF935B383188D680E42AC31B00ED8FB35518C4DD8D34E56D7F9F8B04DEE93
9D4D4AD7157613047EAB4365220100BACC4C774CE88D446E608FFD38593AA6CF
7296EE2FCCC3967CF4DB84FB19A69AF6E1D07029ED4A394AF00AA7304A9A97B2
4A95F3B8C931D2FA8D2B7542D407798169B73293B3548560082FF8490D834DA1
75A3CA03947FA513293C407CB9D6E4CAABF8476FD852700EF72E3B95C7E8E874
F5F49505C56F0658A3230D245348785C7C06D6F28BB1AC68B488CCFB9168AD15
912E288DC3912B283D89BA0FEB1FB283C288175E4814153B104BC187B9F30B4B
8B0F102FD5476521BAE30781EFE6C2C6913DF9E020790534D271D6076AC6450B
D88E64605F95054EB0CEFB48C594E901374DC11480BDE1C823F1E8C5AE7D6159
42D4005A7DA61E982E521140985CE95FA40A28D7DEB27B069A47979A1FDB55AB
B8EF345623DF51BC89E953E1E2F342C6C066E2972451E89059C57F4AAF4D3D19
1A8FFB894BD68AD0BB35BF36A9CBBBD86D1905DE74ADEE20EF53751328E391BA
0EDE265B090F6466602C7D51901589C5318504557886BEF364CD415E8F9D2C5D
50CA51B785330BB50E1ABF29B38C451922BC2200173FFCA1E1704B427217AD08
584C65DACE6C49C234D919C7F7BA623F3ECE53E795BC89576DACD0FDB2247722
6FBADD57DA59063CB64FFCD31970F8CAD34EEB68EA6DB1574E67A667EF2788E4
0547FA61ABF9A72CA7C77EA7F5378DBF06A7CC457BDAE94C19D3364423F8A94F
8C4051434D32977200E0E1E522BA44AEA6A196E6B2B199AD85EB5ECCDAE5AE38
446677399F29A063E1FBFA88BB7AC68A2664398248E3CB947F083768C7254FC0
19CBDC1B27F142BFBDE5EFDA52A192C87FF22463120C8216264B602A6D1F8F20
A1071176B70AD9C8F24F11BA62B2822936F140D86E13DC5A8EFC8EC3B4CFD299
2998F6B9230D2E4A7B2D183ACF1EB5E2DE213FAF4B7CBF485C5EBF5CF49FDBF8
981CDD52912F3D15D208470EA2A0E24226993D8434BB8A6908F112ED5778AF27
361D838B9931BEC0C41A66621D2BC0FE8B98BB53352DBA807E1891A5AAB07842
8E0041AE01BD3AEF1A6D78F062F04301B0B5B180667FA6D82701E2F43E3CBE95
C2391383A88000FFB4D4FBE796A0297EBF0F21096E0E0B5A1F4B31AE2143557E
BBF182734505818CD484D14BFED98C0BEAEBF2962B8CEB673749C86A6AFC2A77
869EED796DB49E4192E8771E3EB16DD6DCBB214C821CECB8B338B3E8634AEA50
366CBDA7BEEACF0F20ABC78AA0E4A039F76725121D1C0860C3347FA4A215E507
7C139E382DF63D75793105D24F7BD29E13B8BC0F4DC76E2F396AA1706D329D49
0A767F2497924C14C69B1D50DFAB58560EFB0CAAB9C88CED7F5EA8667CFEECD0
232F9124DBBF37CD48E5ED9519299A8BBD4A45A9FE17DAF3C334A5C179BFAA7E
FBB2206AA9E162167D30093219F07A3F757E691CF83CA1DF701E3C5D4D89EB54
58B9DD32FD0FC10B2911BE79350202B6F3127BB0A820B6D21E4C29664A425E48
CADB3F11463A57972F6510ED7B65C507C3C3E9C6AB966BB08C04DFC00F6E192B
9FA4293338E680D589AA23E546C4F575601AD96A89A650690EC1802D41AC83BD
F39420FA19AA6EE29875F2898237ED7F32F9EF2F16538F0BE22F7A4FB3160C47
3D6FAEBE75D0EE55B966DB2921B90432E775E06E20F0247CCEE75CC9934D7DAC
DFEDF479FDEDA45EF2DAD5E4EF7FF59FD007C2D901074A784FCA1123C070925E
3F5BEE5AF00720396EBBCB9D12241F2AFA3A9044DAD4334BAD9D505773AA3712
7B66AF46AFB94AD6ED17D22A7E42C5EE69E20BD50EE623F2A8D5D0D8EF802752
3343D7706D4D916C8E70EAE09EA4C25A14907D20223A68D2368A9E6D98EE58E9
6A3AE3F55E4CF016528A13979E564E74826C9734B7B487C174EA47204962BC68
AE3A6DFFC839B92507CF6672633D5573BADB49A5319A3E8EB67B33BBC7FF58AE
1CD0F61740C31012CDF2078E772217A856F22CFADE19FA3EDAD13504C2BC7227
C23C75A180E870691F1D78ACBEFD0C53CA06FB321500DF52CC69057C03A063B1
A8A9127874891270D3073BF79AE5148B59550027B87A0F000D01ED2FD203999F
54A45F57557C23BD6367D940FA336F406CC91C048711EF040EDCA3BE72EDA6E9
F9CE27ED31EA60A722A9477024A162955AC3A1EC1F28EC7B1CB257EC472E8066
B36AD6C9F9229FCBF7E30259F3EA9C1AF60044438D241F24AC95E03060AEA7BA
6433EA9C1CCB31C56C8370F7D6BB3957EF63C434D8545C980F24B2E1FB320AA4
EFC633A55C878BF188C9D051BB1F250CEE38F35F55FEB8C1F7733B150340FCEA
F04F51EDF1C80CBB6EEF7FB2AA117BB17440C5087062A4C8A21105E062FF908E
E22E6F3A99EF2B57FDE800527F67DB1AEB0F12913291B1B0504932D227E75213
E3B78C6D150F265D43DFFEF0892B36DF918582708250CAF21BF2BE60E48FB865
9DBD711D2EFF5EF1A81309AB56487228CAB4D605DDD9DADA43BFB4719E62B8A8
7DFD9E23CD34F079516A08D0F4185E5454AEF7E68A305BB0AA7EDB49B3AA4F3E
837C05838BA55AF415E18247454872E8D78172F598461A2C7B4D97C352E21DB6
3C1313C408E1CF90ABAEC64D7D2A4AF62540B826C53021E9EE5197ECEB0B630D
6815D87CCBDADC93EB66B6D595DB32130C3D860D1CA580EBE454E4DBC0CA81ED
1DCF60C28995DEF66B69FE6A83CEA33128D8DF37DF82C7C6622A8F4B89A4F193
D6CB6FECC10B131501BCA8BCFB42859C820AFA1B2ABA420D70EC30D128B5C6F5
63D1FB7AEE2820D9BA594E7E4E6A920AB0E70D626497244272F43A7EF69A9B5C
248A8147B8515251D398B15D0A11538274C0D8C990211592D6E921D7932ADBEF
6C767667251BE71BE45DA38569682B8E28F6B25297844C1A663BBF1A28D8D0A8
E25EAB1EE1935AE395D789B19B974E6F1FCC641E9CC3DF6FB8D35C1AF0489601
67AA9D9FB7F35B34A4C960053AD6CB293B9534B898DBB37065AAC962D26847BF
34BFDFCF64C1BDE8D1A6ADC0AFC088A13A5D8CCB33823A798B40B16130735E62
DDACCA098374DA24E163B47A7A3BFF48BE11C94EA934AA8D3D190AC9A6022EA2
E47BAE833CF203D9B65A77BAFCDBCF8D889D05418B13121CBEDAF83E6B7E79F8
8105C7E99E2C738E03080B401FB4870B2AC2A5A8BC4E15D1509BDC7B77F584D4
963DC04A1B428D8CBAAF03B08FB80F6D9D71B420F487242B77C5720350560CAB
2F498CC12151A4DB12812D071D5BEA85AA2D3665B95C2F0BA28FB2F2A30AA8B4
50E9EFCE8DF1D9A6328692A4A9E2FE2C55D95453A1FA4D707DF93F4296DFF774
44F752EA9759D337AE7B370051B1E1E9631A82643ABD4A0380277BB0CE71ABF8
B8BE20838DCFAFCDD853C69A2A21D55383E094052C8648A5470915C187CF0A82
F0C9C806C474584A42B0FD920AE87AE62BA8302BCA6FAB98C2BE49CDD569DFA7
061835C6618E1F8E80EB28FC471CAE802C44064C48FF601C8B26472B8DC7C588
F23994ADB04187EE6185E9D5B18E333F9692ED2A3BF2BF517A3575756B7D4F16
4FFDEBB3E0A4A20654789178C2F02F41ADB05FE2BFD79CD32E34D4C369E24404
5225E9DF1C22D1E4EB09C8BA583DD9A279FB94D21D943D332D0C7EA6C8848C67
F2F620C9428EC243C025875ACF9408254D3E3089F5BC891653DA6295CFEE4943
DC71A99594087A0AF3051EEFAD19D51A1A293F59097005B997BE4194781FACF5
5514AF1C63E8BE31F1F410B1B4B92B480F82A0AA4328BDFB2EC71A920C9DCC0A
16953F351C8451997F0083D2DE423A58704B6B12A850C0B88086C8B2BDB0B3CE
8654ADB3F0543813828CEB7BC0E850A953352619A51D5560024696A05E49EAA0
0EC8632E6723E26AE6945D412049B3AA4F3E837D385D26FE7A9137CFBA6BAAB5
078DB3DE971255B97133901E18246096765099A86BD443A02D7266A33A0B2C72
1F8EDA5099B4C5ECB5D4044ACFAE79499B1D1719E11D1FCE20645D49BBFCF53A
299D9ECD0995541EF37CF7DB7CC705C67E3B9B2DF1EA184A04072B8819FFAAE7
D4C10A21BBFD4827339B2A6982F71E95BFCF8AF7A9E2DD20A6C61BAC7CFE4BF7
CAB2D455D382E3648342B10487BE7BB826A0226FD9CB24E75EA8BE8D6F9A9AAC
2294A0AFAF1E5D275677600523645FD6092EBDBC51F9F83328139A57ADB00E65
79EA014F3A2B5DE11C0996072AA799670A500A091A4940FC2BF59ADA43F80D78
7DDAC214B8A9408FA4D85B5F94B43EC34BBCB03C276325F56E49E32C8D6BB371
95648EEB3ED482B98C80682C41480C65AB3A3E54F171EFAEFFFEB0832845E5E9
D1AE10088261E75BBD7983F5794FAB41423D6BF9D915173475C0175E2608D9A2
024087EDC41337978D22A8A46589A2A5C5568AA7A229297354C5F6AC82F6350E
C2023A6CC36AFD201323DADB1CFEF02A7B2708F7E4B97F889DBCF242E493742F
FF3522E06FE9C667CDE88F79F782AA43ACBCCD4D44F26CA5E69A78C258453B42
26505C69745649A5E7D5E6992D97B08A184E49FC330D40CA6ABECAA986FE974A
CBC65B7463D29DDE0115CCD135C603D814F0B877017383ACFC55E71857114BA2
8096F555FF8943B468D7EAB884C276413253644059DBBA793F5C4D69FA423F1E
BFF7E5927719D3284025E18B4E87BCF6340354D8583D07EA04F1E14A91C99EF0
5974595BE3998926677191985572381EF6C6F5416183A05D96CD1FD29A7069ED
F1B66E375165E7B8582B8CF43DD97E9B0EBE6BFDA2FFB8A001A56B86C23336E3
B86294206F491F813DC703DDA5CB3F05B1CB9C1670DA75FC71AA75324F8EC7F1
BB0209D0F3214383300A6822E372154C746F3479B9E5B3A2EB2E3EFCA509B42D
1DCF114E9CABB07A6D2E6C99F62097B5C577A260334B1FAA67DE46E0B9E5B195
9A4A23E664142276AE1D2B3BC90FC2DEA77F4D19ABE2D5069359A3132CC55A82
8CC7916128E93113CBC48F5D03EC1DF9F1E5584503D7CFEFB2E97EFB984C4D7B
EA21656D28980E9ACEDBC9215B7CD2335F7EF07A792DFCAD292DF22077454E29
C1207D5E61A84D8FCEFA83C6C5647F9F0B968F6362CCFF3DE12C266274C7EE09
DA05FC15FAAA1E465451B0A2B32DF381D7C90598CBBF98D0A630853CE0F1E002
A2E1BF71DA5E92F9246C05D7D5308D2A388AF5E9F5BFCA111DD0C7633F95642D
1D6EA958FAACE8BAB07111A4C404408E74DD3DA0CE18B0F07A44ECFDB23B782F
21EE2B68A96A9985A6ED5D7340A69F48CEAFF33397FE52CD1FFA0DF963E47C30
70DAD38EB9166DDA58DA3C8BDE488CDDB4AE547B00574449DB987708130033DE
974BFE7363A084EE6EFAD785B4FB470AF6E10B492B05EDE5F2E27807C95987E7
74962CFD38DE0F6959C1E5E6771891A1DACC618B078E21AC12E21FA402F67EEF
734C8C82659E45731136A852364D815969D959FA94DC110DEB0A0A8A0A69619A
0D2CD4B7D447391B110046CD59559BFBE915F7DDF6D590E495E1C23E25409750
06750535098E042C45BEA1717DF30214B7FA8AA06D01898E012F0E06DFBE6F13
64264F0408C7FE49467B6903B2B1C3E38425E32A4B321FA2B6EB6F8DD8D2DF05
CA9FBB42773E6225B1C30D6D1A9B3EB240CC4F589C01503F995DF9B513312F4D
8D47B645A9EFA2431B22DDC520FE3CAE0A7C99D7D438BF00040B28CDF802C9E4
CB5DF30D09E1099757EADDC067760A127132C0E4ED10633CEC36E2069DC364B1
B7495E95F47BA101A39D63CB2AA390DCD375BA0C08A6E7588FEC8D9148533E99
D8E5B22F97923D4F4A8EF632F9AF8F8341F6F3FC526069AF9E4D2332B88EFF94
0B1C1ED3D8E2201628D89EC78DD9A55177CAC47FA66790E8FEBA4B4FA00E4656
F2CB3EBE890720CB9A3E85CA351A4E816879B4A0CA52CC9D72EAA6C41A01A06F
C1BF9F562DBA40390A270E53B253D5DECB1527CAE1C558BDE3AEE13381EF386A
488838E79612AC8895C4E9BF5ECF89E32726A48CF12C77358380BD3DBB0B49F4
9EAEEDCF98A4ECD9EEFA578F2EC3298D37F2DAE81ED4A63F22C8416A8C70F52F
418DE5448355D381F97A108E18FB3F41CD8569483B3936C9B91DFC2E225D96BB
2C03084E00621BEA2046EF5C570E4403D6969CA8ECC55DBD9198740B30A3F3FB
844F2940B195113847FCFBE529A14B181CB5CE9E72B687BFB0576FFEEF421491
7045B2FB23307DA04E280694E96D2B95EDC2DA41188C360864D58CF33B189E51
FA2034AE642F7271FCAD6FC8B1B97DD70EAF4D5F40C845D0EBF9A8DF95B633B6
B278D4B0DF20286E23170F8ED460D981D89E5BE24EBC80940B49C391890AD361
22ADE5100A3D5FB8E4056725F7E4CB83AD360C2E161B2BC0223F157B6B3F9CF1
1418743D28E749728860A257D965B341E1FAE3CB3B4B95E6DB8BFC20AD500C73
B6110C556DCF57AF69490D2B4650B6EC32CB64288F86C463BD67AA89740963CB
4709512F19B9676F9DD818381C9E99B6342562D97A4B3AC18EAA50692952182A
41B36E07DE8C18D18BBCD5814DBB7A5AC68A5EC9A53E57BF51E3BC0E823FC184
60B9AF67782709012C6ACB480DD26F05F9A77D120766F3CC1DC05F3DD611026D
3156FE549115A4DCA135E62983F21FEE07FC5D2634BD492B25E3EE8DECE56899
5D77983B00ED3A975C829EC40228742D743B6A20E19944FEF0FC26FC6CA6968B
E70010514E14792A992BA91C9D90DBC98A8C5DC10D336BA2740D45923444E0F1
B163B0FE755EB038F87FA62B34AF0C305553D7EAD1B94BEAE7F904E228DAAC20
48F823A5F8F8C520C0FB722950823FA77461FB73A7C86E4238635E2165863102
B429E70FB11D0758C0CB63E2C5EA3D08BE6AD1C393155DBECF47EE395FA149AD
0AA7C49CA166E67780C08F1C1004466248A14684A6FDE2652BB9703D80320D9D
3CD5833F23899C2FFFE78E10784C619A01100C320EA3A1E60905917FF2618CF1
886E824EA46CF524AF0421D26E354557F5C39D4CBB0A77A8C378D2132560EFD9
606FB8C268C6E13CC10D5CEB32FA3928D40A50F82B7E856510D540E8613B163F
3C0105A46B984152EEF4460F6B95C9E5164FBC824F0AA1B078438CD063D1FADD
1AD060C11E1102FE36F21F72B5CE259C00735D5F5070142F66B7FDA81297D8B3
0052AACB685BFCA44A5A5A8FB30350CC9ABF10763DE5154C79A08B38FFA2A37C
83FB667EB39BF1F8B6CB0603437F3C24D54A48C2D2B8FBE5868FFF457EFE9778
1B71C114B1F66DBA6024F6718297E04D8F55F98176930F8892058EBDDC6AC65D
3DCB5BDBE68B11D31BB7A5DA6E1DA0ECC59FC38B6E626CAF0D05266B72B661AF
D421E1789BA775DF7752A7D1FD0FD1829BFD2DB931DE5F44B47D065C48613569
A51B934CF6E4498BB5A1C76EFAE18EC511BB79141C0D0755B1832B71FD394694
D8B2EE3C95C9EF09B6B424910718514EF3F5D93692A14FDFA27DB71B2FCB9E99
86764340BE5EAB25AF5573D04797DF2DD8ADEABB335A7F142FBC5A9FB66BA35E
DF2B10B58C31E2CBB17E3903CFD5F9A01CD5F31B8926CA28E39DBBBB02F376AC
2AF12C3DF24097FE2EAC28F05BBB750455F5F53509437DFE7DF8BF2B73337928
2C09152B9E6911E37E3466826B8B54BFA18EEE29C66B9B1015B286A04C997F13
4D9A3AD07EDBC6FC8A29B809ACF1CC9802AA2DD8F135EB6CDDAAD33BEFBBC5C6
25E7A3C8FBB469CC1343907F4D0F9359E83005F209B4EFC4DCF2923E5B09129C
2A66F30C2E69903B70BC33CFFE8EA45B941F27F830D6AC6170B6BCFB084710D4
FFFC545EE1B505845D2D19262C6F530755DD064842D6F9CA0A27CED0EF3E380B
D0064BA122AC8A687C1690F6948CF44F075E7E76D9664B8AB49B1B64807A0ABB
B5216485B6B1A1D969F8DBD9E8CF872DFC3CF5E5B85309FD39DDAAE0A9748AA6
91C3272246C41BBD3478FCD08BDD0F49E1036236730328B72AA903FF4F03E495
48527169869DC67D493CADC56D73108C1483C6058472A054820B65380A1B518D
565921F532B2EDD013B71ED27B02DABA7AFA098D6605BB8E6A2968094D770B77
B2A635F632346D4CA44F91A2B6178B93C4E3865AF8DFE9B8DD70B2CC2C98337C
E9E7C0863388DA04FE67D9195FD30074304F3D180694465CF6B35BEEE16ACBCA
4348F84A6C806707B4B55A9B60B75AC74F375AFC6521FCA22F474951ECF357FB
AC6345A6C5BB903E7C8BAF564A098D6FAD9B4EEB12EABB34F35B5EE350571F02
467B7487626D373F22F937E09779E89ED5E93CA98A57DE21D23A7B3F9FDB998A
C970EE72898646572BFBA4A07049577F05E69F824EB4BBF0981B32B6DFFACEB3
CE26ABD4B5CEB4D7BBFFC44232CFF709B04D3C6FD95B3A685C7201DC494FBCD3
608CF3AC31DEC26B75691B5FE9D5902CCFDC4AE1BC307980E8A62C812DDCA52D
73EB6FA66A8E1FDDF7F6A74EAA82666E9C19FF718C490F46BDCC46546BA9E30C
A7C9545C99E3DFF9964E9186CDD821734EFADB716E6E3BCFD3A79D87942E1C91
9A6116A51FB98C4EB32E7FD1BBB8796C2ACC844DD51B13C490E704F19426BCEA
B1A7ECF8163D32805260DA702113CF87C6E660166F2BBB434CC23ECC6196439A
B231918848A3BBCD7F745070EB478101E77F0F66A01BBE67EE3F22D825927DCA
FCF5591FDF3CEEEB8C71D46C15AC3AD9231CF0309CF56F936BE66B807CFD2071
3FF04BAE2B65930444BDC1A99A2E7FD72FEEE4DC53C4A6F7013004A23F505A72
7FC05444174556D07689479C24C19EFE925E9BDB873E410F2167A566AB8575A7
42EC9A639E6587E9315634E24D0123B6E4871ED90D052661604A6383DB333ECE
E8592BCE52503C8B289928CDF05807D011D124515658DA76BF830636BFF31C90
D02475838736E0B5588271407EA57E445E93F7B50E0CCE4C7AD2CC67182DE208
1E24D0EFE9C351BDCBD71A44C4E633173C1BF10279837A49217FCD7DDC386FE7
46025F64CFC59E8ABD4237B4F11EEF575714D6AD9A7D212A200E75F8A28C77EC
652997B6E33BF6A2B0A91FAFD40B8D17CCA0E33EDAADAF7F8764D714C6256752
03AD5E7D1B04E7F41614AFA53AF79E195ABE813FF2DD366A07D65DE3659BB211
8BCA967313F40C7F0A56101ECF1FB48A74FD7D9AB804F6ED7DE9D28C553B5285
0435A3549C52C4C83EF36C4223076042F9BAEEAD3C3C5EBC103183BFA8EE78BF
C83DE495F98642B397D9D4BB3FB970EFF5710870BD7B9786F79EC59343BF6862
EBA959EE7774F1FAE7CE8C4C1B510FC3F595A1387A92EEC76B0AEBF77B4469C3
E1F404517E2500766C853FAEA205D2A8EA06E95CF6CDA504ED234540224C11A9
50A15843FD62A23F063BBFB9C9E73A6606C2D37EF93F570BCDAA93483DF9FE29
40B9625AC59E48759963B47EE7892F5ACFD95273AAB3E79AF6E1602EB4CDA3C2
25F92B84A9E151AA24B42763D4B4CA4426A06D0B712BA740FCD7AE239807F19B
ED0552B0D8FC17EC390CC9F095D29BB4BCF57E8BFCBD7F62E5D1592751CCC0C9
C63B1B7E519715E79F7080FD4EB9CE645CDBF71B0689B665D8ED577DBE85AC6A
F64151EDDAEE0595128561FD74DF64A4164944755D2051CCA7AE5D4CD54D6A05
1304F290083B3E6223E7DF6CCD686637F75FFB363E12AF3B1602EB86C99DFBE9
080EBE33A8E262455FD4BC92A1C9A1BBDB784304D8F2D171C4C9EB8735058E23
A85E8D364D12F9C8C8543810875E1B2B4CAB983903C9B9B332FED17E8E5523D7
A0FF9A04EBEB5EC542F55C364F39C67D8F5F60D73DDA33A7C88BFBB9EC401412
1591809060A3316E04A6B969BAF9A69A98D92FFFF093D1DFC39895C6109D9167
8E9630FB1C5F00C7AC5104155074F33D4C5A86F968046A9A6661B50DD270DA57
8D80C966C276E1E4E8EFC61D7B7FFB85BBC01CA290EE961CC1A4DAEF1ED0AEF8
59C569952928C631618DD38C411869D3FBFCA960EBA610F61C51A8465417E054
46B664F209E7786921737D2385DBAFE7D4825CAC947B522DB8554B1818D159B3
D23785C36C3F89FFC723234DC4A02C61ED0BD41F183CBFBE520073DE31D2B356
0B6419D1CBEFD7F6330915218AC1267C68031A6A9A3587D66DADAB4E1B8B746A
55359A8C63DB4DF69D2F4841A619664F5BBAC64894E992B83F0A8A50F6911139
B99494B5E176C37C4FC7D32CED22C1D4D33C6127A3EDF4E065459F42433D8B93
EB1E569B4D976ADA7708461E2842737ED5A9033CC3391B0C3BDB492974A88AEA
97F9F05DF68E1EC003FCC256C8D076BCF837DF4D6CC8AD092FF386332D31C251
119FF1E1C9B10504CBA64BAB4F69C0C34F472E852D37F657E04DE49F2558731A
46EA69437155396EE611BD48BCCFE237127F46BD45A9B2A1DCE101EB03ACC17F
82AD169D9EE80516C3BB36C190BB31AE19D1C74D74053C47A3A550B78A5B3531
1EB3A56EC3444DEEA49C92371A78A11FBEEEFB6166E3645CF00734F801C2F4C0
0E35B0A99C802DAC26EDAC9B74AB9F79DE3A16CC6F924417332C9B45EAB6DE4D
D93ADED976AA386F2CEA100394699D21A61CA5A85BA780A1F6D0988DF8C5DCA8
2A07E2DC580D00706F469617D35ADC69E2EDB26687D4D4847D41873A4E4A7953
C577DF48B98556B683225E2A9D2FD315295F1974428624653925A91931C8024E
B25DD365FD24AD21D84D9DAF48B65348E404D39B3F1A25AC7B8258200D5C69D3
83C040CA96397294D0B4E5960E042B5206AA02A1974EB0A488BFBEA443285858
6E0922182F2D869D317232B25EC6CDD568DA21E109AF4D249C384DF69FA3829A
1F77FE55A31630E4DEB9D3AB5C7789A1905F76C9F93D4D1F4B468EA2750B86F2
BEF75C41327792B316634A0E4D3060C46420A6E285E474D24C862C805367E844
B225A763DE778F1DF42C2F4858221AB42B224AB19DA946706E5ADC7A2A434F13
355C382E3B2322B31620E9F123FBDCB23EA6F155D1EC035B5C9DBE7B06BBE59E
4B3C1D8498CCE04CCEAB7844B7F181D507820E60D9E2E66BB9CBB73E9BCA753A
3582F6C3C0D130E04BEBD70BCA2382DA2AFD3E8B8904B18DE429C55DA47D60CC
D34911FB33F71F86997ADA8C558F64DE93CE095A3093DB83D72DB41D64DC811A
7122F5EE957E48C07A7FAC71D8A286D1EB20D542396F60507ECA2A3F74D71201
923606DCE0D4BBC5D2B98870CDC6CC4086F9C38B50F3B148A126266AA8CF4A79
82838ACE80E9CDB659235514B245AB9900A70AB8FB7C037CB050D5BC4F1CD690
A89057CAA3D1F9C23D0A603B96E6642D462D0B707C8122BC10D8D2279F6A9A9C
2B3364C650BB15309EDEEA7A67031EE3E11944D6891B371E042BCEFC531BBEC0
859A0736576E226B792985E7673FAF05A52E263F926371704BC136AB8AB099D1
31E95022BDC84B852DA9CD2A2B5850E677D963F9CF6D75A4C4259473E4C62C9E
6408C431AF8B11B88611A2D225B554F9DA750E33675197612C7915AD58D223B9
A10CCF14D6FACC890C4B1C5E053765ECBD90BD299F4416EB2460709665DFDFCD
E484459A6B484ABB39A46B00957F7E06A3D6B9547636C90AAB27EDB5F3F03475
2F76087215B98083D8C5805B836212954F03C0CC55CFF8ED46D01E4F061F8BBD
EA1DB0CAA729C5F45D52C748773EA3F30F35DDF775F32D4EFEED500C5C28E5AE
FAF37B77C873C46490D7F9B90347D899EF1D59F578653F7997A57FDB52318C4C
F16C4F070AD22B3EC32DED5B900EC4F3029C9EE30FB04E085CFC4C38AC54F6C0
D93158F00F81D905A2E1B88899F719A771561E46523B870723BEE4A1445E3BBA
5AD8E9A6D8BFE94DC38B22643E7DEB3C2468947A1E85E2225458775EA6754184
8D31314C5E10B4DC8B822C55023414497F7605C6B455DED1C37D539E77A25461
A553C4507059D1A6EF03EB25478F3C45A183F5C3AC37B1972B61C4FC41C6E984
2D80699434660D349B6B11FF78D578DFC4F0482377A9522AF346FF0D674D3717
5163020D5B92AD19570497914126E8FBF39E5B89B21477D2BB60EF918A0DDD7E
0C2E33AD944E07BBE7EAFD216BFC94CAED786CCB4DB51D8160279D6CF2836D28
2979354359A8CB475437D402E429C28C5FC117136ACFC85F81DC205520C898A3
7BFE234AB1EC4E61857CBAAF21CB7AA81E217E194453A2A7D850FA4E78C1E397
ED54FEF1475C9F0BECB7831F1656FA40F04CCF4310F115257E6720B5D1A20464
134782D9F1B5C5CB3189E1EA5683CB98E9F6CD6C5E38DA3082346CBE0EDF9C1C
68E00F3453B9F416241BEA4D5034CD53294EB1EFC797F0D5EE7F618A2099090D
994809A425498DEAB7C5CAAD20C4A45E69C8C430423302079D93E99D710615A0
B18CA4895473B3DCA4FF40C2EF11A158EAADA10AB05D9F13E3074BE1241BD9E1
977185C749CF7043D6BA5DB6B5B1F7CB2F657B5E51DCB3928B825E46573071CE
662E9CD790C346ED909B1722CA3661E500AC08268B6C6D58D18EDEDF785F8A06
D6E9C3686BF6161E798A7DC1E8E8BFBA142E65D4EC6AAC382EA04499E5CFEB43
DB231018D6F198D4BD0B650288797C005038F358B92834B2E4FA7C0BCF2ACCCE
899F1A669AA5780ADDE9FF8CD2B96FE1C0ACB156A43B799A4AB54399D65F3056
90657FB469C8EE637BA9FECDEB08C84E7846C433006382C227CC9BF483B478AF
73914C057C66528F2490D831BC5D606D8176EE538BC297DC126EC3A78603EA36
751E8BE74E5372ABEB8E9428478D0F95F3585F904EC647ABFB4C3912F706DC90
08940E7B54D3E7039DE4748C93013354A433FEA6A12E9AF1FC08FDB415D09617
89BD9801A4E11A9EA0E2BD03F6E5C53662CF5A84A0D6FA90DCCF7E4C1D434DA0
F797F011A800055B67769D5B0EBCD082F8240C78B809CF5DBEFF514E0C7265FA
7C79860A8025D812C5CA0E8A45AAFB58083AEE67F73B9D4B4EF4C6AA853BC01C
1F09B14C9810A02A9108306835C6F8DFEEF805FC4CD10D0E205852C05F014FE7
41D12E70511EB72FA538068D36082922D28720F53EF2C199B71214E09CA06BD6
9100AF46E63328E4ABB46EC7FA618931872514EFF499BAC66F39B22DDC78B6A1
E6130CFC0B8658BDABE1AA2131C5BE05A660F5717D2B7B25A66F117EF8B44BC9
FDAE0051DC0E970C89C80A546CE7A5D22A79AF7E27014CACE41C32CE4E91F62D
762B26AFEAB1CB8421C02D4604DB6FE50390F7E35E068600F4A9D8D0511E5B68
EB9468ED8009B8E966E278E9721DD9C45C133DDF56D8D4EC3C21F533A8C815EC
CFBD2FC7119877750A66FA59CB9E23A7847D012E692A000D9C644F8FABEC568F
3399A68FB3FAE5D08BD39E3EF92B296CFCD0FBBA63181EB8CAF47421BE3B304A
B3129848252B77BDAA8EF1405984BDB777BB6FBC6B8701EB63FCAF71CC11657E
D20ADA6634ABDA68E1507EF2ADCE2DCECD0CA0D98A311C4717C38556C97BC2C4
F6EDA90EE4CC292D6C9D966DF43BDB4EC7931091AC140F28E0255F20615B75DA
CAC3E21645EA63EF07404A1F3CEB5033F013FE0896A4E981188B0D5C8E0901A9
C609E8274F1A748DFAA87994936D6E320FB7C16037C2666BB026DBFB8677BEAC
8AB3B47603E1C059E3415265386BF7386BB36691680383A6AE3274B9CEDFEB7C
0E7E96C8783F1FB7F3D7F4F16479ED21874387300A4403EF61CBCB57347227D4
A4BDD8A1FC4703F5E5A894CFB9922ECBCB71418D1E8EDA3BE3F637D4EEFEC9E9
4FD1A57E83538D3C5DE1C9693543417F5EE7369C0B07FB0986B6076BA0D71910
716E2112D26788AB3AA0C93E4128D0781EF620ABF315F07C758322B9447B04DE
A387839CAA033D976EDD564119E2DA1AF73BE5CD7ADEB1B45FA34FCBDD31611C
5620B9AB5197653E9646805BA3F71B8BFB94A7BC87D38E305D1EECA958DE8B88
51BBAC9B70295A3AD7929A926BE4C14DCC000AEB55D815222DB3794FD80DA184
806E94C1181AD99EBD0D56385C0ACE8A9F9AEA8E6F317228B7B9F7704B3190A6
B2809D71D7A27E5E7D5F2B5E0A57CF42057486B0BFF25794961772C90C8AFDF7
BE64B16E88249DF8D9EE7FDABD2F24709E014905A61F3CA74D61ED5680B3E625
12A83DAF3103A386D205252A68538D81E16BCD8E1941CA41417A5CB78599F8A7
5FF894FA364F275D28DFDFD8BC0FBA51CE15EAFAEFEB54AFEE1AAA6949D2BEC4
EB06E72856DA3730BC777799382820EFF2AE812BF8923F106155667A75C0F5DD
B5E2080FF24B865F35E7713C55272B9E3084801B92705A2F81074CCF56C2D59E
B1BBC191F9CDCC2F453EEBEA50326823645AE96ED52121194AD200A15650363F
C62630BA7BA569F0376793A97556852D77607251511291E5A34C5EF831FD5AF4
1A663872BAE91ED133D09879B67F0CC5B4683E017EE6238DC6B7308A8C37FA33
17C6B1BBDF261CBF7DC282B863CEB35C4514FA45F42245864B836EF857F5F583
77D823FBF4CF300B48E1089A637773DAC9E412A6480B71C69CFD512D6CBC278B
21380456A0BA49F0B89052186F5D244707399A779BA4E44A5C23EF1A65ACA8C8
DAAB015678F6E20F878E14B767F4768407602E435C4A93044B355ADCA3AF7A4B
CF5B3F064B253BF3BFD0548A50904019913328F969396763211213510A54228B
DA77B16B1E8DC521C6AB09035B3FE506FE13B9F2562962335BF41A51F2530695
650B0D8A76CE9AF71979BFD22E111A23AE702D2EA12ED3DDEA0DDB60FCE09A51
537663631156F6099F1D694AD757B9CCD1CE842431D36A0FBA8A8C2A4B6D06FC
4FC256518EAFC37E96BCD78EFA74BDA8FF4DD6B8776B22A4A99415CC1CA5E2B4
4742B2874EE39893B1F094546661D3F41C548D97A881B1437FC98574C3B467DB
5C75E22BBC1A8EBEC05A2072ED9614E77BD322B3B2A065E7BB7E153B804219F9
75D6A42EDDAE36C6C4EF593CB814DA00FFDD11B2873A6A58D0E359259747A48C
088E2F490FA23F5B24B9FF88701CE912AFDBB384DF09AE25032AE188CEC3CD1A
BB33045CF51090E357C750A2071876ECA22FE05775D40F4705700F22E029E3E4
BE0A4FAABC97BB6A1FCEF6DDC042F825CE926D2B66F423CA883D954D31EE47CC
30C02172A44CAD3AAAA9007359B60E27F7165CA7FCCA79DAB75CB0018AA9B1C9
D76AE7DBE93B2CEC2B17CE427B22F68B239EF40250CCBCD0EB0E47169F239E93
FB5C23CF021CEF2AD0CCCC7B626DE8A9051983CFEE8E973A4F4D0680F99557B4
BD874A65232257FAB9365446BC657AF6908AA4795F3744F5FCB7CC3B7F8AAF64
093F67EF14C5174243E192CD14EBAA5A4D202692D0D361F1072B9E7BAEA3E742
8136CD39709CE26B50EA680B0A16B810C70AA95A3F60F2304FE4B136560D6171
ACC1C69E46FCFD42DBCE0645262C20D239D7F81CD6EC493162E4DE37AA0FFEBC
F9FCFC3E6D1B784731C890AF07029389866C2E7E7C02D5FAAB0FC746025325DD
1F98CA0A449E93D0D09515147B9C9BDF95CF9BF60443B23516B7D379D4DEAAD9
582E76AF18DD7A2C203CA630E8DE3EFB3AB6A68DC6FA3D86C1DFEA82D5D3EBFC
CFE7A4D9DAB1F315C21C3EBB6AA5C8774F27BED27AEBE03F2A1428503DE2E6F0
0D1EC62D26BE61979BEEA50D5D19498DF258EA707DD7EAB232F15C562E8B6FFB
99538D84C2504E8E9E22A129F1201C1AD1488F52E879E3CF42726907992F85E5
6CF6F54A89CA860F1031F5DEEDFBC4F1BD81EE38F4B0D5F96835A7BC641536E9
C90B6E62465E8389E1F5D665A90991FC2D1155AF974B01C6F82D46115E03BE6A
19AB1B8209911BCB9D9A5D82DFF96C91F6A8D236B715A5DDD4DE3D0E96AF4450
1D800E6E59B2A274AD44E143906E8938445F0CAEDCC2AD0D61DBAC2A3DA4C7AC
C6438F8197F45BF9ED1A9588D6F7BF2396AD96DA14A1D9F691BB10F00AF5DC60
46084371AA59840229381DCDE8973D0527A1F8DC6247740354AFC260780BD775
9AD248CDD766363DAB7EFD681D993EF8C18EB5B8974BD831960FD5449AA58A03
C6B05EFA3CE409A19644D47C4F1FA3322696E2F3DC8C932BDD95CA09E36D2BB7
347380B24BF18CA131CF61C1396E83F9490A2070D528F83440A71FBB436911FD
9B1663131EAFFB949E317CA1D0046D68779CBC3D45AA91AAF7E5C54538415EF6
03CB3A99702CE9BC8DA35D578D6A91BBA4DD1D12B176C7768ED2BC8B6D1015E9
B5B6739DD6D3CA1012D11B2FABDEFBA315A2DF2F1C37C4D9EC0C75C2ED9E75CF
89883B833239C7736E67EA622D53B4802A67779313420C72F9F41A69009A356E
F3DC75ED508B8D986B7D30262B73804DF1A2700F843E7A7141247750B382FD45
804565925D409F010FCABD3A002358229AF426C0CF38E37985B0C939E89DA7A2
7D4ADA48681095499E22984793A1037A03094704F90FFBC533932B5CA20425C9
2F404314BB06452FFA7EDA4DEC92DC6C79FBFE653C80074D6E6FBA9509578089
386E1B42EC6567DA79152975F678E39A2E0C44462517570B5B7B56E9209BAEEB
1D11562EBF02BE34A0366249E3A1E04DC336C5E5FA3E7BE5D80393F3FFFC5DFC
BABFF9E1335CA94EED9225F349BE7250FAFFF8CD46F90B5BD92016A354D7A814
729C8779B32B85B5B9A6BAA70485AE2DB46E10F906256B67278F13E94C98FB25
35CC0471E00AC7AB1B61C2DB4C8116E8A1F0D88594D1BF3070164D9DD3F1E935
E77E31BFB5B6AF12271E6EC7D9CD7157AAC56856309D1C29DAC0DA415FA0385A
56819661C71C84735BD14B45D8CC27ACD03FD97FB80F2D066E7544E22785BC2A
1E32F3F8BE8A17EFE0A630523810A9B9BAF06B18F7EF4AE18E3ECE035E314BFE
830A2B0BFC8C260D50FCC8003845E7B905272B8693CDD6A4DC8BCB0828CD6719
2942B19F61757A8092BED92A3BFB802A40941B4E474D4652F024232D035519F4
07EA0A030306C0CE642C145AA36F7A3E680816BE6AE51F34293D82A56D7D67C7
8792832DB6CE5AB43D99BDF57EBF58DEE10642059C3E38B258A89D8CBD131085
E25DC0C4EFC5CC2226AF68F43552CFB9056F327FDBFF7C5D763607139254552F
61B0978B8AC1BDD58DCF7973D08B253E93677FE1CF198236116BDAC6FF4B4684
4222EED9B87F19D2988CB168624287D6290B078A68C9D829567D3214402A9ED5
59C537B461FE6B6C8B479A99592E640972F1C6B767EEC3D979FFE6A6FB1CDB2D
A8E7967369A441115F5A10D2E225768A9DEF15BFB26BB2D3B11DC5D6306D29F4
4D89F33FF5CFBA10A8C2AA6325A22F0F6A2BA8723A85D9A7EFF2207CF334DAB4
B5EACC83EC105360F37CBA32B81DF8D5DAE089E300B15934C2EDD9E543D0F13F
48F2B5AB0879D61C939D4552699323D1BFB886409FACCF23897D248660991BC5
FBC0B56ED91B1F67EAE2AF662CFA51425C1C965A5F96453E8E31B6D419AD7C9B
6F2E9D714226FD669E7B7A33E418438DADA5A0BF9AF7725B64E5C54C54F7E855
0EF1FDE96CFFD5B14842B50D7AC27F6624E93DDE1F47BEA23CCD644C3EB7E724
BF419CC8CDF1B7AE77DD0D599B488B39735F6B0AACB0B5168C998950C4A6BB18
805A5F72633F5239CFA5591054884D6C43C8818B689736AF1F3D7D53F371A23B
E6994BE70EDA48F41A42D4BB4846CF90B17208E5DD07C6D3EBDC52343CF49DF7
A3E4A7CB69A6061C665F17507333C91A3D580C634E8ADE86F0640741D05F6431
E72E56DEEF2E1CAE56CF93BD79EF759A28B4C72D667907A3FA98A8525DB20B8B
367E34F8B161F54B6D031A3AF74B76F750F32E9C6F6C049B31D4FBB3FC396054
BC93C53B72AC98BCB41170F6E7C8AF77885659DEE7E595764F6CF9470A38BDC7
9ACB413A71BBC0BCFF40C605D49E5149093A6121EDEB69500ED13D61DFCFA6B9
F31CFDEBEDD16091B5E5074CC772A5BD0492817B6FEC622982E19FF79AE7CE88
6ED8BADC45CFA657431C3A4AA4E857DC0DD8DE2BEBDF259C277AE88DF3BCAB62
A5A43319063EC433423EE5A3E524DF835CB7F9389D2BC932DEB2820812E17B78
2112EBD7B276B83E07060820B71F954F45F7D24687DDD620A30D2BC4A812A1EC
12E5D927AC916240095D116B0BE09AE78B4B265A6B88E658E4E9FCABFA926336
BFADD63D69C38FD588A26BB4BBCA32F22F3067695A3FF689D45AF7122F963684
64BC32794869E201D119FA9083252AAC5C60B3AB86F4044BA4CE6820642A9BB5
18E9431FAD7BE543E11FAC4D9E1A2EB29F709BB41FC9F5F260F206E8D1AF1D60
C8401C378164F76EBEEA4FDE5F454C181DED39D12860F6967C2B02800CE7FBC4
61A05F35F3DE17F501A3D2C3E11C07255A66712CA0D456249151C5C7452FF073
C086BDDD30686D2C2710BB0CC34DC762E9D1761549A4C21CA8C3E163A85FB497
32CB0C30622A028C63ACB4DB81964EC831EC5C72EBF3F36E19B4A23C3AF32BEF
C488A6D796BE40690B5FAED53E910BE4B496AD1295191CDCF747B00C6148E4CC
50B39896F76E39FD31848697290A9AE24A3B739200C971309C39CCEC29713378
9A1F7E43CFF7E0FF3C9063FC44953739D98FE63E8F42956AD4532590FE783F42
9D91395C0A0A4396097D66E32C10B6534BCFF0F1657E4DCCF63C3DCD7B286529
D00D702DA4A1C43DB65F3B051FDB327ED23E51C758A55DFCAEED7E0AEEA53184
8034EC253049FC2F61094BDFB8B83CACABA29DCA6B1C258488B018841E024D46
0ED9FD3D74339A6A6B93E843ACD2C7E0FB615802F783430D6FE4390DB0E93D5F
631527D0350623CC98B5288D1A71091206B140E448C2D33E3A2F1A0F6F3FE924
F0D2186AEE7C02CCC3DBD24ED5979D9BB60AAA5AF86788DEBA19D1EDFEE7A049
0A8C025E29CC0003B224562E83A364B9DAB78327A3DF4C760AE1CD5C078E38E3
93500D15B0A87516AD39E58C929C71E2252131DA693053239F4FF42C2D856B54
ECDBD26CB4E7AF2171D3FE48B07213F42E7F585FF7A331B7599CF02656E305F3
960528DC0D4D009D3493A84654EA01A30AD348DEFAB7023C9B1F995A42328949
B911ED3F31AA71268ECCC86CE8A2733159EEDE5FF495DAE79428A5C2FAB63BB3
AE1C227DE005AEE09A62FAE5B7E187B39411EC4A80B6E1C1B8088FBC5DD39BC8
556C4AE221B54DFCFBF065E76D4435F79621F370F5CF2CA5AB0BD223C96057DD
43831BE4178599592C8B4747FBA5ADA6856FC448BF5AD60A1E60DCE4637FA897
B5B285F3738CA779A5DF373E3C725C655E1AF0F873EB2043E83015CB0F513735
8259A22AEDBA7C0F662EC383D88B4391B66F26306609139841705C3F4B4BBCFD
A163CE0DE4BBCA4E795BA6E34D8C28DFB05E7BF3D6C850CD85328AB43EF53653
B4C2BCBD16DFCBA9AB31F2046346A9F81323F4DDAE31DB40478CC4B1A5CE8180
F44BBF6F32C76D9D4CA2E3BC838010C5A57F985CD368A1CC28B8E5462A68E92A
E33CEF7455F6D316F7595964CAFFB026170E4C7556FFD9B2DBE9C20568817DA7
F94F7D70B5FA0B75306638835661326BD6A1E0DE09169383DD66E0367061E8D9
3BEC3C106ED509A5A556568F9981FC28B803D0AB14AF91BD691F51F8A7A6A488
1F318499097DC3AB46D676BCBF554EE8814C21F58F999649F1FCD39206ACFCA6
586B2F07433D632CAD286FF71A58A06C80C4AE596412A4A22CDE503EE39BEBCB
43FA51902EF97C9A2C52669DB4963A9F4DA65DFE73AD914B2923370FAE09F2A4
D42F78F3AFACE0B2FCC805F00F96E2A42B72E22FCB9E8545288C73259B3A4B95
81D0D6A77253B29461F43625C70975819447455ACF4C7543524F007ED56C1CCE
25EA5BA3427AE61EBDAA57AB1AD6A330BBC80A6C40C37C17BBB4FB57BE0214E7
B40C617A2ED72094857ADA437158A5A3C1A6E837792A433E7BE87EC4D7B8BB4C
836C212C971C343A129CA2CB582FF2BCB81EA20147AB1D3FDB2ADEBF08F67577
D74DDF2E53E0BE9FAD76BEB758DD945196F5142A018F838CB2D2932B4726D186
E9C430547E856D97F72A4A76F2FFD9EB2B6E05A05D903A2EEADC0EE1891858D4
66B5327DAAC116DA02947E38C63D12D2025DF3072D03B8F9C614D9EE790F4D46
FD0392D4D16FE07AAEE7CD0FC8EC4E2B7048643BD99AB43CC32557D4DCCBC149
8792C0490181D2810115AA28FF534B10264E0B715ECA580003D64538486EC348
8AEC6F03705154A3915683030F78BFD260D5674710FF7D18E8213954CC06CA43
95E067E0D0A7BED9F3C523B2B6128A1FFA6E70D2BCA16F89C52BE5D7C5CB6935
28DD4072A210293FD205CE9DB272934C06C46B05D632D2CACA0D5985B5044099
34F9FCBEB95224D9BE68FA2B9EC6B78CD19AF76105E7000A7006D00A52561748
3E290C79A86A25A598FCDF0BA4444E823783198AFD0DB6FFCC7DD17CE8EACAAD
EC9C587D6857D150CFEFB43658D0A3604594923E23A0E6C237BC09FCEEB764DD
EA7C40E7F1AF6D7E2F5326A987BF3B313A82E92399FE0EBF7E5D524673788860
C74D047D8AEDB72C6D4DDB7A40BF1CC676611AEF0D2C102752A63CEDC91D8282
2FACCBA6AC7E6E23C8D992BD12127E16A918B46A50EBB67F53A85F556E29DE45
CD11E7AFD5F4388E8FF570988381EB34DB685A7A75BF6EB0A9B5639C26874A3C
D1A4F0A69EAF69568231B018795D42EB13F545EDA40DBFFD75412DAA906969DA
CE2CE0F9E3C209BED1B6BA0CC62D3E3E6CCE275350B0F43CC53C2AF0919A98E6
69A4EE8071A4ADE851BDC5F720BBFE7325EE92F66D97D22C866074F1F273B0F0
9E15138B84A79A2E950EB0CDB148D3A41929581CB9332C0FF6EBD1FD4EB3E68E
076BC55C7CF722B73D75ED3AA7395881ACC79F2ABACD7564091E231CEBE2571A
2E9CF6AB7D9413594A5CCDC4084600AC5BB5DC7FCDEE589E4E31B78628C8CB5C
C083823C35A6DF96DDC328C65A2C29B7505833DE50DC66CF61F33463B235C426
20279B9CAEAF74EDADFB6078C486362482D13F103CBF8811D5728017436AAB93
6F4CCCC8DEE7512400DC2339B6E70488BFBAD04CBF959FA864A4D25DA1061AAE
574FE59948A21562E41CE7B585D251ABE120ACFDB2D5DD3B7A645175752C41F6
C0656836C737B4C932139DC388E511D36EF44BE9A2C90E9399DB5FCB0BCD50F6
A81DC79FEC879C1BD613633457F79338F6BD074507D6BF721FB5FBF42BC03AB1
6E39F1FA643D4D2728943C3C339A0DBE2257ABA32A1634861305AD3E1CFC63FF
FA5804448642E1589993855636387273BBEB6E4F8F98F202E17E2522E5D4D0B2
6E50F5456F347468947911BEAAB1ED48B85CD5EDF2DC07707721306AD5AE0F77
6C14E5CC8B31067F56053AB7CC59F1B8103C1C88B2E1F6181FDF2EB80F5B9E1E
018F7C3D8FF6C3B5253674F321ECDC64DC905BC6D86A129CE12428123F5D4240
6AF3A6276389BB97AECA62D8677790839EA35C251C96F9471F9EB8D35CE8984D
3D3452618C91DE95F1AF76B9248DA8944C100D019652FD83D1E5EE8D279088B0
44B3D92FC722B1736619AE01BF61516328ADCE5C3BE2FEC52F4633B2C62509A6
57EAF2D639094AE8EB9A08DA4D5F2F19C3721F01CDEF2F95885084966CA3CBAD
D48D7B940A0576AD026DFE0136F002C4DC13D9234C355DDC976ECF0BAC40B2A5
A370AFF144D3460EBE87CEC6D9FF9561A088EFCE7C3CA98E39B1548A2AEE4571
D92269FA15FF922E139A6304502D3B7AF1924A03BC833BD49824572EF5C109C2
D3F4DFE4C7E929D7A93E9EFD8B254B9E7812A5455871481D0DC7AA980B5E2C91
8CE7735059F87B57C69FEDF95126A488F041A680A7C50B5896B30DA38529F0A7
6A1C96648C8F3D3ACDBD9167426E6D6EF0D9F259D524E1EB6A56E641D1B0E69E
EB958E482ECF18F1BFFD282D37537771F69F7888EA7B40EBF34F24E62A2B59AB
1A8E333B6742AB697BD00DB353B07DB6BB687505740FBA6F1996BF3E3F0FE958
BD8980B8DFF2F11126E22A497B3630840D5E35206D9FF34D6577821FD824B01C
D768D796BEAEA23E1DE9D5D95CC01288FE8E75B137C70E448DD4F4638F143356
647E544FC0D16BE432AF2A87EA46D4F4791CBC11DE740F0FF6A60583C630F3EB
447E5C3EFED8095D5A26F5DAB9688ADF5DB0820FCEE2F7B6C48BA2F4C2BF62A6
7AB23FC8EA3B9958FFBD415E6E72E6E85E2C9190E92229671B22E358CEA2BF29
57FB7A866BF87CA5B891D8BC56631ED36B1164D1B7319DB91D5E92F08B182D5B
9877EA91C70F12DF1020DD758CD385D53266D774C53AC27CDE596CAAE8319806
95B2796A76A74306FAF2B12CEE8CBE34B1C46D3111B5291C127C9BDBF9AEFC6D
483AFF18B42C4D2858748597ED305EA94AD57A8847386475EDAE01881FDB4B19
5E6E11C3F0BDAB4C22D2AC5C69F453543384C51166B5804787AFC5EA506F0E86
30FC13EE4DD00B7F4CECB3B4DEDE2AAEBD07E2C05EC9EFDDED72BFB761255F7E
A167BB360A216375F50770E630B37518EAC7C47C96E44CBBEFDC585F93A71391
5FBB3766D4CE9E789543AF510A62976F6C7BF142E5767DDFE1953F8016BEE99B
0510C02F5FD9239D3837E5AFA48F740562C7F57B10BBB00F671995711E0EF063
DD7F0AC87671AC73938FAE5B4E68270B3D8D081874F5B420CAB589A9C81E38A8
077A0500ACA246B6DBA145449179E14B530A28FFBB15F7A3C1A3B80ADF4759B9
7DC15F10FFFE7AE99EC192056AEB6AC542324DAABCB41A6894821C4781691566
744466AB71459AC28F0ACC374FFA7EF2F82BC1EEF7A7EAB77BAE0152634240A3
87ED87DC0FFA60B1896A058D6D4F189CE8F53D5D6138FEE7C1C8785DA848B854
FD725A7723DC031645A7D42DAE3B384E8C7BA4E0B8AECE404D3D49713BD770B9
242631E3AC5439F56D2CA1CBC7F6A0B52F8844577C7E9FE9FFE28BD517BC0603
3A8003CBB5FFE63EFFD14422879455E142D41C705AADA5253167BE037739523E
AE1F9389F70FC2CDC98885A416AE977DA3551438EC9E2897018AE0AF6539C850
7CDC9B9D61C22278D1E3513C5E5088F39A577BE5C1A7BC35EC4DD3904A55DCEF
18DFA3738F99547D5DE4521CA22C2B52597F6460D3589D751851FB7980B78F8D
74441E25CBA3962928DD67BA391101334EEE712785275A6BECD2106CA7312816
C8495C42093175F71EEFB321AC0409086B0C941C29664FEF180C78C62636DA3C
A2830E8652BC951E2181E70DD279155E9F64DFC57C90846C62B195943497C785
819C53D6D83281E6142171DEA14D981FAAD8B695507933EAF5BE6E4B0D17F8C7
4FED21887E5C165C70E437C90C1866C56F08B61BB8F931DF562942473518350A
CD33822BE61BFA1CF900BCB507307E7D76303CAA3FFE0FC89E66F4B3E55CA1A3
8D4B69E0FAC5F421C8AB80782C1DA70A478334F4D260FD7293A9774AC4E177A3
0CE82709D4E9A5BA918143A58838EE1568FD010394ACE62CF0E3605C0CBD3747
8E693362A6F1D87F426A10D6CC2CD16F4626FC7BB844F0CFDF6A30EF477F29D7
AF907AE95A15598D453454DD9A0052C10E9B095CB5F364C446CE725136E375CA
CECDB6AEC514DDB189B5DFA0B3AE019894B6B74BB28A4C4309577CF0D7F0DFA7
F16D76A964C073EA87CB238A58DC95B86377798CCBCC4719B370CEB99E1A161A
2A8E610AAF78FB53C060035F39419D07E3C8B9951EC9875D2668BDD1448E1ECA
96DF660E5E6D4C67C23E151D13F5FEBA5B794D759924F477856119AA499847F6
83D49C603E3A0C6FD8DA18EDD7ADE5E55A666C4C81E8EAB2874EA8DD3F25759E
E74F10E3DD5D5AE34C1F954D87A1DD83AEAA2E9C8F1F334F0890B9633BFAA441
490E17BEEB90ABB0B9BB6B9509A163C9DF5177596B421A18EBB12989211FE25A
14094D72A72E2879C724AB35F8326B36524F29138CCBD12A03D94ECE5B626F7C
D509243BD1EE476DF27D06003E83ACBA3AD01765BB952A619FD7ED343BA430F6
64083DA2C269F6F17273E36C383314DB1B6E41EBF1B3610DC5E158F1B25E4EF5
41BE4CD395B5A22AD929762ACCA256752E5E8E3685A2C071EF74C3F6D7FD52CC
7CCEEC951442661060A07276ADA4E599CFB7D081783A4EE160DA1F89E316135C
9B734FE57E65A23D3A6B8545AC300D46FCDE187F98E63267B1B07666D933E88A
DEDE5E1082763A47BED408FCDA9C9420746E999329655D0145E0684A85ED0CE7
8C8379ADC94101C924EA760E65B96E5E40E475189FEA09E49293761291816844
48B757595408D58BE245144B8000E634988A44025A098106C8F3D3998C618393
E3F7E2B2D6A6753035841C21B6AAE5F47D8703BD82B4949B5CC15A66BA05A992
37813613B417E160F50B019CADB6F4884274BEC3860836CF148D67E57F3A3061
12CB1D78300B791504C896702EE426
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFBX1440
%!FontType1-1.0: SFBX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1440, tcbx1440, labx1440, lbbx1440, lcbx1440, rxbx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-218 -316 1652 915}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76EFC613FE56C
378A7118B0589B3EE5425457AE310AFB3829876138A59F58D965843B709A0F4F
D1AD54875BBADFC803A755669491D9E98262991B9634084E8E2BE46EF805B219
D18DE35ADE9A8DBAB7AB761864BFB6A27E5B421C32CEE4569624D9308A32B426
FCFA5CEB883444393CD7A58F9CD522BA73E17492DDABB7E00B2F6BE47F585EB7
FDDBFF33F1B5E5465287717D1580105BF3929C09EC621CEE9606EC49D7051A00
11935EE728A2FD47BFCCF00C93EE54910F77C1CB8622B9CA129D466746BFE1B0
594A9F0C785F6CA67161EA1480AD4EC6781B9CAE9536F5D3AC6D447F16821F77
AE2705279CF3DF4E1E9AED81A0CBEFBD61808E2D59AD970264A5B66D1F399DA2
55BA0AAC8EF1A1E16FD8240D577F5E00E0040EEBCC193F074FEC48DF30882551
E23D64EF84283F9640AC5F60EB1F26CDB79078AB0C0D97D1D6297D092380D4B6
6A2099F06A513A78A3C3B82A6DBD985A0DCED7150B19FA42991A3D408FF95978
15D309AACEA8C5C0AE812F50330CCBF47B4759C550D49173127DECF05D783DB0
978A366ABD3CA7D9BBB6652459A5E19F9630CE75C2BC7BDFBFE0EA3D8098CBB1
98CBE02F196C0A0C5E976DECE72778358CF8D0A79A8B5629A6322716CBFBDEE4
934E8782E716185235712845BBD03896BAA8126E2E114F06AA9A0B2DEBEF4281
1D4D63D49BC7C89CBC8170C17B5CE694EA3048E3B2431BFCC49BE06BC16267B3
3547F30851E3F7441B4DF4A7A4A0341CDB439F8D4CB53BBBCBF09500FBE703D9
617BF4ADE275EDBFE0C8692AFBFE06D320227474097847EC062917CF1B3F675B
C31AD512EEECFEC5D1E4B54ABC07FE1B9315946BEA6E4224FE51C7D95DE4A9C2
44845DAE8BEF77E829EB5FFFBDE155F7118DABA2710058926158DFB7A533AFD6
90A5EA2C36FC3CD9E2FF4118D9CE49F33AFA3CA306FEC9AFB59E5236204EC76F
7A3C6349DCDDFD47AA3C9CD34C706AC27CFDE15D9E907FECF478F490F54800DB
2C646DDA53FD1F267F5875A9AC8DEC3DF640D3C4C0A748426DBE619DA65C070D
9E7087C2755D41C6192EBBCEC15F12A4F8D9BE40B40335D2279A457822302488
31757D9168908F0B8E1952D8097633836D649941EAF86B33F38B8126ABF30287
322376ADB39E56E5A0FD3316D513A048F34512336F94DAF510498B635624B631
DD11B651016B20B867FEECF3A82AB3B967D549895AD2EAD722B6A3BBE8999D9F
A5A6C956FB2938A9F76ADD0BF43207DE7DE70802B98B9C81A16CEB19B23657D3
4685F351CC0D93D513E044CF3484D2F55A8DBBF434C5356276597C5EA62F5A4B
49DE2FAB14BD90C887E7FF33A06D9F312602B8711E6F7285D52F30DF1555B26F
62DB50DB237D0E6DFD301833855FE2427336FBA63171D385F2B42487CB337993
CCC0FA8B58D6237E52C61F0A22DE454F58801D5D00F150F6E6E69CA0E60E2698
82099301160C3450D2ECB2A8DA999047EDD7D4E25ECA50FE1EA1FE7C727B7E6D
D384F6035F04FDB35F1847A262C2D2385181E3F22BE45C2D6F1BA1D5C8038529
CB897DDD5B686826B5E89D7F005D597DA8D33C583E9784E90BCE05BC014C9573
6F44FAB37523E4941D0FFCB7BCC8D0C7369D870BB9976CC89743D9892CF379FD
8E3F1F9C639D860F9B4153AD3E106366D0B0064EFB9F8B01DC9608D9734D002B
66FD97AA86AEAB1BF32AAD0BCC80BB64F34C4D4BB7ECF5DFE249B29422A367E4
6B329F10813DA0CE1F394EF8AEDA1D0EF54BC676F41C5E45B3DB5FEE796C5083
512B168BCF1ED1E1CA061D66E7D2EB22BCFE8F1C5CEF74EC07C6D9EEF1911CAB
F3F0AE82682B251DF566D1EA35510029E1F6D3966CD6DB3BEC3E2D09ACAA06E5
907F8C9B1450BDEAC4AA2C54E46C2CAF59888C8509D8BD1E3C562DA6A71D08C9
DCA5C2B21B9A97FEF3E40F90713D4646CB913A984107090BF34CFE75D986E626
7088DC760225ED905D995DDBBB7205AA2A41A3CE4A3F375E7C5079B9D8FCF57A
797B5A4FD89A01934A2E2463B895CD19385C95BE2E86F99352A6DBB5512C3566
10B624CB772482920515BDA8A8D227D42050A292E989037E08EE4B66AA9EE009
B340F669190010DE80FB0750139C33AE368BE204681EF627A2AFDB8DEB5F1873
58FC661B65E3AE472317EFEFEE9C9F6587E3A5B415FDD84D10576881134EC879
F04C4C9A4BE74D8F17D5F7E537F7F8E665BD074842782131324FDA33265AA828
27A6B65957CD2CEE8EB451078273E8405E14009AFBA50C02BBC09D2A621E9C2D
DB308B966FB71C6F65A5E6E28BE8DD1139DF083B57903DF8C414D751106C0012
0DF1AA7A65AD4B5FA847723B615354A320CEE50E97470E9D7D74C7A2BBC093F3
EC14D78ACDBE28B91D33DA27C403C0214E1229EA3F7CD5E601BF64480CC16340
D8F1ECDB1E80135AC89B41DBCF26A7614F00F3428FCE6C7D2E3451EF0E7BB811
759209CD94333068BFF43C8B73F56BC1A0CF27D6184238E19570DED42DAADFB7
A27B364F8E151CFFD75466F1B50AEAE90E961CFB5A8305778D06A527BA8A4400
03E8B8BFAA8A9C9653D2EC56876CC3F5186DCFB0F99BC4EBDB585D05EDEFB5B3
84F7DF3CEC44703E7F512CD94B412FB3D70A87FBD1FA98896C39CDAB0AC7B49F
1E16D5C2661FFD874109CD47BC0B87CB324F84974889A6B9F86BECEB1AB9E4E2
D598D9319F3BFD7DAE4850C6FDDC54E1784DF6429141E1E1223548188455F970
52D34876059CA1F3D815CE484864F04B017C4920D64C02CDBF0B7E35DEFC41AB
06A910FFBC855E99D1CC3385D9B1BD2F79E86F5D9395ED6043E7F10258CEED29
BEF79EC5245D3676F2337D3155C6C3296B7439BDB7A0EF3F53EA27A63DB2BF87
BA44FFC625852507843E37CFC9C34714E5677F893E2EA3A50A3520295064D8EE
F14FB9ABE3EC3977A0BA6A227416527FEC24F662221378426488C60CE8DFADD2
D12A509A89B92FC1DBDCD8EAC078DCDF044BA8612C7C6EB6DEE9D130B5591F74
FAEBDEA9A4C42E70F0A05D53F1CDB6E5A2ECA3B819C688577A9B225AB3830B82
A22191BBE5C1638CFA5B1303F481CA83B43BB3AE1CDEDC650432EF0053023D36
B3BE4F56DE5110B174BF827DCBDC8B5855C95731C66313E665750CD39AC23464
AAFF53942063C0A66F4AE09DE0EB684D4C4B59B8B450C76D03AA5C4D93E94596
735BAC9C78E22F19B959F16FD06E23FF8368CC9597D922CD70E5E0F55242EBD3
4EB3481FC4EE2502ADD087225216835C7F6607DAFC48AD3D01B3DFAB38DFE99F
8441B5B6FE993BC45667546B88A0E87A5FF0767894474A79B6C0BB6CC55A89C2
529A4F261AD82C4EA17E70D61E78B3D6C8D6FFCB26ED9010DE312964C35A4BE4
7172FCCD9302078128ECC7242D56D62EEF6079504A5809102BA7108E63806675
414213A80258EE674510EF32596531A51EA218C8811C7A73FE4972A469650129
5073CCBEA51C346638B2A861EC7F71CBAE6812B2D41150B384D5922C9E5A87B6
C2ED51EBD6D957E70FA5EF377C78487B8383FCF72132C6912EFD701E3E022AE5
69F2360E2C8A6504CA313BA1DF05BF42F1EA83DF79661A3A49E21EA63D1089F1
67B79481196ECDF5F8A07070FA058CA1902F49184DF49E1F98200692FE9A56D5
62D87BB5F29B08D50986BE365036C01F0D2310D88D5CF4227F9F04D49FBF4013
C5AA326C57BC14E107BDDC6863AA50AAB280D18F70784AFE497D7B334EF6F60F
14C1BBE3AA3E9EF0935C8D933B7BB83FD9F48F7008C85264A5B09BBA27C56309
4E1F9233ABC452421EC8767EAC8322098E0ABA72D6C88AAD6DA7B174937E8B45
D3EDA25DB5B926F9399BCF9027F0D7CFB058491EE39A86D02D5A568F8A72174F
5F219F490174186824FF78EC89C3C5BDF72394A24F81135C9D9063C0F4441BFD
56C5C54F8CC23B96C529908BC0FF14DFA9ACC7AC4753CF4EA7A6C87319D1606B
A7859EFA318A60EB09C54E5C70F81CF5256D72CCA8EDA14553BCC08E1B92C2E2
464A453666B5ABDCCE4DEF92F7EBB72D912D007545489208383EEAF0BADBC510
37DDD271CA81544C3E7280D32632B2B0B608259CC88561A7C94B719486F71911
7362E24C324335A60B08F9CE7D435F733D362AD9789127D2DD7471010D57CDD7
D036990BB524171AAFC5FE04A5B6BB0144D958639151D67648F05F07538362B7
4F7483FACFAD90281BA5F0ABF060C561DFA18FD3FC507042053282E1FD0EDDD2
10FB51C9517F1E01E50AD85973E4A3206B333362EF77B648AB99E2505AC7F18C
1DF11AF4E17CC1054D05B35CA24FEA1894835DA8B323B01BB50ED46CF009FC10
1B4F7520188FE7F54CC51ED4CB9221317C8F72CC600167B0076E0A4F2F631141
554C3A8AF1052CDDD583BA27C5EA6D314A9A4AFB756B83947E38189E15B73ADD
187BC906ED1A83C94C8455D111E0F5AA4EAF9537010B0A7F80CAC388628E189C
1B968A02FCA01322BDFA020BF3E1C1E65DCE4E73ADC58A46C335A9ECEEEE52A7
167973D48046DC78E16F72302A4EBB29FEC54D709C50864C105347700FC7FE97
6CD624F4593F6AE969F722DCBC681BA215ABA14D088EB223E95401B7CB769E66
2C95909AC36E4A979C9357FA3ECC867E42030D4826D85D884AA3747B7A485094
019F97E74BC130CCEB740F766D9195D9108C4BC529B7C62F3F399B6C371950D4
467DDCC1FB46FD98C9293DFB3389DD94496D2061650E1EF805AA5A8605DEC5A6
7729B3F0EE5BE6E225C55598BF343A1ADD11CA2FD9A55DC35DAB60D79EA274B0
C86C0D3A65B72DD4BC9491A7BA5AE34F43A855888F689FF7751D731A7C3F583C
5EEE9257AC07665AA294899E426D213012DDF7277EE291EC094E7DB8E23B9239
EBF092F358DFDD1A013E19D51209F745D54EB054F8335F55CC31D7F762787194
DE48E6BACD02A7FBF89A25C2A3A222556396616E6E55456DEAD954515C7ADFB6
0B533130DEC2FF5F93E3AD11D8F77E49C52836CD711A0D13791C051AE16C65F4
1E60A21E04FAE8FCCB20DC0EA6880E3B13C30077651229E66C594784DBA4A4BE
2E4F8095BC13EA9339B6DC8E984DBD7AC98188738612F5C7FF69C0DDCDED8E9B
ADC94DBE126D1E476752720C0CEDC0AAE2EE2997420907FF68DAB0F212110E0C
DDFD06AF002BABA22921CFE0497494A35168628CBFDE796A89B6F0A72A9F6664
30A70EC98C2A6ED8EE3FADAD3C9F2BCC49A0640C3F9C8AB80F815C52E90D2DF3
730368768AEEF863B210FA2136C33749BDDE2C4DA4143A4E03DE8C5D6858C24F
96C0FA9C3A91607ED5DC6D3AE1BEB4D5BE2F25D40991D1786708D24E1F90A29F
713C5B0EA71791D94239622B3C93E1ECCC91180A38FF2301ADBCFAAA049E9A5D
D2DBECD5E6F68CB3D52D76D902DB446A6D260A06995B2D00C9F6A8837A4149DA
B89A85D9889A9D144AE9630C4F792E7A2BDACBAB9737D011CCE9F0EACE9F97B5
911D05BED00BD851A6B14292ABD57D4F67485938C92C6A29E9037EEE92220832
FB00C35FC8C8E67C27D43A4AAB9BEC6B48A9C3797CDE14D5021FF1F7A2B6AFEC
021C3EDBE1E9B6FC857611F307E6C5D98BD5B3A868E0BD6087EA8E783407124D
399F1F08F989549E3E67914F206445DD18BF3C69D2737FF8031A52BCB94D74F7
7A091DF41E0518AA4A3C98970186251198517B5D810E7E050501DFE9A6060BCD
92EA3FA6ACA1EECAE6A56A2F9F514E2D75CA451B531635AACF27833254E611DB
5F6B5762438C3416D0DF5516401E0027AF036E899A72532CC982DF1C230FAD6B
E64E01A4EC94702850D1453A1CC0538644F8ACE929D19FD6C711E40F1F4F4AF0
59948E1C40C936915CB1DC8CC08D85880B1591640BBE5DA16B92FA3C3BA89475
C22E109E91FDF7F6103096A45B7DAA70ADDF69136D0308A66EEDADD188B1C9AF
1BF590CEA5A285DE6989BD2AE8EA6BF831DB6A55D57CAD3B89FECB4B38C29259
0AF5861B230D6085B1C0F674ED12261D3CC8431931DB411687656D6EB9F4B6B0
BB2844FBA68284B23BDE384D43B7967C05D0453B90FEA4A2FF27C06A5DFB6307
0D6522C9BEF8C4560E3BA184B07FE68EB2735C64C633E2CEF19ED8B6192177A4
DC69BB60715B43FD74F3CDA16B3C64672E270C4656056C518B5F7BC99E799439
F6B0CCE38CA0B2E551A4B142DDC6306E79063C21B95EB1B9971F2E3ABDC76F4E
803C256E22E5122BFAF367FD211F725D5230E356D99EF4A911847B04FBE05796
7EF02B2F8E2E05CAC73B6FB37C97E610E44ED5F1F00E2DE1B64462A4DC224D32
9F462916B85A17FD4BFD11FF528738C6C6322E9592E07D7E8C8304DB4BACA295
9D02E0B8196583CAC14385B5AD126D344CCA69ACBEE91AEEE85CB885D9CDC33C
28FDDF8B550E39720FC2CE22C34CF790551D1C46AFE2BCD7AB46A99E31E574A7
2DDAE7B049B1C431C148B1170D95DFDB8CD2254650AE0168174D9D6290130FBA
1AF83D858B2A9EEAB8D7B8461F941EC4348F9A6DD828084C57731688CE505289
6505263631506C0FD85C86DABD7ADE44A4F8B4C7491E58E324B166BB50E05884
2FAF07005B4E8DDBEF263E1949E76D975CE46704D6CEED368AF9ED2ED65CE1C0
1DD4F36E015D9023145C4817CBC33E639CC49629D6C055A6EE59350A7A08E04B
43818F7369D68AD27ED95468DC67A64619744C7E63DA70EA33B65248CA88A192
942116C0BE636207F5118ED71D4E4DC06C800A6A573F704A1EAAAF6E9D469105
39801393C55049E850BA7276095874395B824051900A3ED955D091CACF5C2BB4
27555FC30C8CC2D7F9245CAA37BAAC0808FB10315C8C992AF68FC4641A4B5716
E173BE09CB0FF2A2C925E37E16BC085A39B21FC90935A23754D9A7ECC15B3F7F
A971C311215AE27DE8394028B539F61C37CCCC3B1E68C28821E5B1E86FB06A83
9A4569B3230E525C1F345C050E749762C35CB0F6544EDF40EAF94CF4BA20A7C3
B1CED6C8E458A16FE675E18B3418B5358BEA62DCB01FBDAB0736A8B1F9F6B743
23FC39033A42F990426339FD6A95C3F461ECED0F1426459C3997CB2D07E5999E
8DBAE5ED13D06646E192831270D04E5758459C5EA59440436EAC64C1F11965B2
ED2E1638FE96FF2040E07FA087FDA110A93430C7F92F1C02DE769ABD9ADF77C2
60175732483AEC3728A47DB3F7AFB2992E6CB41957431829BED5CFB8948C94F8
67FA620D00411E5CA2A3FD4F91EB43E2AA79E0E516A901673B775AFA4AE4881B
B2F8B2C27F396692FE536B8C091A6A6C3F15F3C729AF6A6C7DBAAB8000071375
8614C9AF8DB7295EAB9A6862D8EA185679AEEEDD68859B7A8D8A93CE86AD9FE5
105AEB4EED77D407CE511A8D1D76E9A3FEA9C9E884D0ED35A71F00119286FD5E
AEFD1F4F26E1625D6CB0A36B46B1A4AD5118EA409A82FF79923A4E999D20CD6B
BDBFB9CDE6DC59A64B91D36B454BC1EAF910182271A58AEF87B2DC9D6E218112
CD8532E996E0AB49CB67CD43A0683927443CE0E522924C04B66F6F3D43B24645
877CF940CA7A272F91D228DB7B6F29AC8DC0F34527ECA9B5E133600207A256EA
AF61837F4FF9CE10C741D435ACD8C4505B3890AC76FF84E36257528A426DB147
6A579163C7ACC86AF6202941D8F088B8FAF6DB1EAFDC2EC726D56F8800DFF9C5
203AC9FE7A022769E77673AA3AF6AA1F746B4F19A38CFE860FE1A87B230B63BF
09E1B97A0B6E3F9B32C83267C5DD0B15B82B72A98EF2FE73BE1C676D2D27D1F5
2FE712EAEBEB1C1028AE971AAF5FD65090ECFC443320FA066094F341FBA21300
8FD477479219DCF2D9CF66753B82978F6D635328690BBCE0DCAD715D1C06273B
79F84341B08BBBC3C79A0E8CAE93785364A5FCAE71464E2489291A7D5C1A1EE4
B989D3A46BDB09A330CEA0DAF7C5B204EEB9282568A4B80F21D85BD349EA2624
8081FF6E74A1E435F09D4A7681A4473FD57E8EBEF4ED0155C6160AE93D10723F
398BB50251D861E617A48F7BED0AC75991BC3A8D7B194D57EC6C818C9F1BDBD5
30F71D944DEFD0C7F2FF020100F4362E060C8193333500CA682300BB072B7A31
42485DBDB9925DEBA041146BCEEFEF12D2954DD2D783030FA9DF74D66DA1CE78
D530256D5C330D39E74995ABFD9FFA8828C51F1913FF90C913B373BCF31B7117
EDC696D7A219808252F1BA4CAE1FA73B0FBD9BC820DD8F5FDB9703CBED9F790B
BF961E9CBC073FD16A8825DB9FCFF726119EA0CA34680CDF9AA558BFBF86699C
06D5F14F854CEB69CFE870331903FBE97A440D58126268CC706508454543997A
36890F3CFDAC3872033E6CA7B019CE109AD4A9063044E2B90EAFA2C2BD6013F2
19FE481C7CA972E8679D38AE1E96309A06E1E06CDEE3E5AA6099436FF1EC5403
39BB966414304938B108F718080B57E1325B789503A091EE994A9CB7A989B0C9
1A28BAC5C4CCA76DB71E2B56AA048A5221802ACDF672C64A4741E46BC71015FD
6B0B1D2D10BCD27CC33643FD30A5C0E333E6EEEF8EE302DA2E05B236F6BAE2E4
A0D350206ADC05FC37A0822D4AAB9EBFE2E5DC3BE8E69A2CD2ACE01883CA0955
91A7359BAA9CDE5C8F99EEF1B534EA153320DE59612C970D1F576AFBB070CFC6
D00E6C2B8F0C5B2D5D6FBC19980861397A56E47C2FBA8207DEC4257E7D163904
2CDE3909DC49B63BFEC2FF13B6912686EB3EBE790F85FC879B2B91DCC5B8AC91
6C8B2FAA7F2B8C269ED50990FC04F4D5CB0A2878A966B9A20363A5FB5DC74548
98C53C5711C6819D71980796227F74A1687B273BEBB268537B20A7B4A2639E7A
6265526CF34A5412D12A38F0D86C6E7E21859EBC075A0F99F3A1EE8AD9AB8663
64C632C8D6B59126BE199678EF8AF826A454C1E99D81D4F758FE0483AF93D9CB
22452D028F4FCAD8AF25F6C3C9BCDF11B5B83876B8DC19F32E4FBCDA31ED9FC0
51DFECE5A3997AC78E822CBAC78D1B54A4A54931E73BB6F7E0A72008ABF9515D
26FD6AD1F63366AC599492A92C54EB2EEB19E487DAFCDB577DA27E45F7CB3849
5C5EC01900D337A5940ECA30745730378F1D138A169E7C2784A1F5FD6A71D275
8F7FCB0D9C6CAE3C716C01A09B0B753CBEF9EEFB1EF4B40DDC891ECD62F779B9
D040144010DADE631E094A1B65C13AFB6272363D281A169C2FB890440D0919EF
0AE76637C38D062739AC0F45EDFBE1B18612E3106460BBE028DBF0641C763770
3CCE28ADD22D093A8E06E71C7F2B51F705E19C87F668AEBDE9B3CDFD63A9D5FF
E08D24D1BF1576BC1C241DF8385CB51FAA9735E707BBC255BC6296B9BC1D490F
2E2E5FB5B88D1041310FA2CE35838233A91D8856B291A7FF97F1B6024E35EBD8
860E78086CC4991C09E938354A0ECC444F43DFD9CA98FADAE7294CC29F9AE47A
4A53ED7C0C7ECEC19465258EE74F2C3C97C5CE059F969F92D91B988BB57DD996
5B170EC0B7C2BAF9EA5E8BFC54952AB2870C6FB063FD4D96AF1B3A1B4877AEAB
B1C39D7B723293375382D3FB915F49F0A520F37DF10E774CD0186A62BE9EDF5D
1DD4446EAFE3CB12F35A5DD2CA4577851F68208A998DB7E5A8B86B4A77065AD3
6C4473F94C1DDD928B97F03B925E535EAB6B05A74F5E0EA477924D5DB46F3DA3
7E5BDBA6CDA57BAE0564A1A9472235FD67A5DD545A2B7E5637AABA9A04184605
66FE5392E83FDF9D44876F3720A753E5AACBAC56D44CB39B54D3E4C00A83496A
F0859922CCA13C3509D9E4F1B6B12D3014B692A344B8B20CB42583D624CFD50B
C18D7FA94F296969E827B158776AC36B43FF505320D18EC6F6CADDBB29D0F7E3
711E0F1EC6636A1591A57F0A2F57BB6A235A5A443D4DD24670B853641FE70279
AB2D409E6A34782E41E02EA14B01848777FF4DA7144D68FC6CDF3A068A3B851C
D73F6D5FBDD3726FBCD2C05539C901B038BF75E6F8DACDFD1305141AF04B49F1
D87265AD3D0032D4F5EBB1D3B145718A88BABCB79D8263392771B239E8901F15
53A8769E6BB89D667ABD0148DDAF1A67EE9AEE712B44974BF8A7C021C5574DF0
2D5F82436DBD0F6DB36350F6405A643AFA5FA54A1BD68013F590F905E330D012
4D5D1691D8C1ADE40BF54BE145C699270DAF00476083D7E55C81652E0E005C6E
33B12EC9AF54218EBF27F9564CF99A5FD75170B0205DCDCA4E8515ACCAB58AE9
1A23A379FAB021ADD52EB6C194B581024DA99E76416E7339222BC8F307EAB1AE
D09973F34B6A55154F0360220C835152DBED3A875068A09D144E9B78FA5A7B1C
06EBD7C9A01412E0F4C69DED9CA288985CF7CE8130C516FDD63BC42475745461
CCA902D97451B4EA7019EC8E4EB69B4ADCA6776F253D8760F2D5E5758B76F5D2
EDEE65747BC028F73E0289545AA5BA984F105C595BD8CB8E6816B3CF6C248A93
AB9974D3729BC2F391C8278075E21E1E1B545625093DCD88DE744ED480DAB8D4
47868F9AB139E5CD95D4DD60FA9FCAE24E521A61D6A027383B2B653EE9D144C7
06BDE9EEA9F569F1E0A461EDE4E1EBE6D852A937D5D814AA6BA62ECF457D1819
0AEEBE71BB62B1BA041D436C066246065D3E0B217CBFC1EE153B96BD31C8DF48
D28C4DDF93079A2642CF23F4032F268ADA4EA95315C714D1CD3A80C0AB92D020
09900B86C49073A1F6B1B9CA71D377AA31DA7CC86EDA8D75A982B8C958779286
41DE36AA8DEE050F18B56AC917E2B5324399B73DE2BF9F6FBBAA87A627F32BBB
B40E16AA75E76E1AFF0D3119E033384E202C3E0BB1D8711743C2E1A67857D39B
489E544252385682BB6C7652EC99149963C41CFBA04502600F54A3727C414F1D
5F170D2075A0977FEEF08E7DDE983CA5D862BFD9FF6C3228909A31146D01DE40
3BB12F0AE4C62263B2505C0A31A873264310A46F80AF0C6A2C960C4353428020
3E148C006E8A876073DC378F9CA529851BCA226304850C2007AC346D913BACDE
653D97BF84FF405FBF2952FA8609D2E30F645DEF827C17D50D94E03EF9302EE8
C0D084AED92404E77858201E669F052BCE33D0F546DEB9ECEA0B4929A6DEDA1B
7481AAC5D4A4D5C8147D0F5459CAAA10F0F24295B32407531B17D16C7A3DBDB3
FB2C085ECCA7898C9AC61DD88C50251AE83E0C83715CE74BDAFD6C95C813DB63
16075F482E564D450454D35D9B44EF7F4B6C4C48F7AAB41EEEC673D996BAA70C
31352911A8E507EA149E92D926D008A94A608ADAE25B6385243A42CB684BFA2B
7A7720290A1A7982F12E2752C2792A819F430006B4B1E6EDE30AB077C297A4CB
A83A501C8DFF99CA74B2F6A640418B1B8F7F4C4DF00F8A3AF8A9632A5423D37D
4E8A542195FF7994AD68EE45EFDE36AF104D0769F8659F4DBD2325B000A300B8
7A901BB4A94CED1ECD64E0FD0679EBE4878DFB8BB0E0798A8BA38411ECCB0F59
B2DC0A69B38E393AD2EECBB62160EDBB0297C97F960C58C4D0926ACE3E12340D
6D9386071443621C24CB94747325C76E0550BBAFF12ACFCFFBE037F0D9501A30
14CD8988E0724F53FD403FB6F0F38A82A1E37C8779851C2044032F78C1BD9616
0FA46E790DB41C79B1291609747D082AB1027A7EF2907E229F4FC592844ACEE1
A51AF1286A256F35C97B1654A105DD84A54DD0385F3673B01F6060DAA49D7646
9974E6A7E1DD4082305AF30429459146DEB21C8D4B202B954F68E0B1C636C40E
4F37AD463B9D81A24D2C68C8DDC13FD76ECE0A2CA7C579EA6EFC5DDD16BE6B51
FD3216FEB841C929EE3F203181F2285BCB09BBC8A2BE1E24528947E74036B555
E71147D523BDE7BB381247F443DEB8BFDDE8067A3F294DF8E9792F2984F03019
FD30ADC1A6B6D621B1A7AEE1F42E36F74F6422982B9303E74B4345F6DA631D79
DC55AD3F44A6FD4EAE6F96D21342AAC9D7587FF0F4CB22BD5DEE3ACF357B2790
3481A6CC78A67C18271C5711A59D248BAB65950D5C5C29196C4A60EB046B6B11
F3538E875686E9B81C81D94101F851C9ADF7D0CD1AF64EE00836828999710B97
4A0CDD161BE84AC0BCF7B574A75F2F6ED58F26AE6BE96D711107478107AA2925
8FA97CF229376A7202D919B370AD2BF1515BBBD94CEFE565112EA17ED5EA71E6
BBD453E025B55F53BBA833AB64A42E9C8EA6E61C510608E803A36A37E3E7A2A3
29E2DE1ECBA330EE73AD4394D51959E1E3F44F7D02A5D230C72189732272E0DA
6CACE84A0B9A79BAB019B7B19939F34306A1704025EF24ABBABE8786E113FFC7
ECB786271522DDAF36BEAA1637543F1E2782F6021920FD7489D5A2E0841DF0BA
58B1187FBD218A83A2ED53437CF00747B6643C060F9BBD479B3D732975BF60C7
FD8F4B9FE413A002C1724F42C97A95FC093352134B8297D3F8C3B4F6AFC1E27E
495CA9397F23A64FC43AFE456C267AFF3029C781EAEC8E64D2915618C58E0181
779515E31A8E6EC457773CC3FB758970E89F1FBB38219AEF2D86CE2AF8540F93
ED505FEDE5DE08B6C60020BF0492CC3389CDAD0F80AB8777ED711FFADE75E23A
110CC0E91A5FB5C6303F495710DFC7DC87A2BA511259187998AF45836D7107E6
646CA9CA271833065C3C107912487DB39F04CFC517174C496975ED4E52498E57
1B05233A278D2C2FA2B0DEF0863B7DF2C98DA6F3091167F29D1C9411CEC20FAE
9DDC1154BB9415A9692430BB58F5B656499EF28A4E20F3B00CB6FDF49A783F08
650DC5FB20C9CFFF6C1A6DBB0B4B22F5CA6A16A0B976064086A74E6D786F8384
12261D4241151B3A4307822E8BF17590C23912F8C96327E4C9B864D2374A43F6
CFD6A359FA7C086C38B79EE0F3EB2950B2C690BC364DA8257DB490C4CF937482
516A1D8AFBC0D3700E2CC89A6D53120EDBCAE57F87381E182BC60D4DE54DEE3F
7045241A3BEA22AABE865E1893CB8E8B911AA962139C7BA8B91117A46D1C614A
8D66E25C41C4F17BBFD7B433AF7690DE8E732B9F14CEECAD28EE1DA5C71194F5
42AC651BAC2A823194882AE571B5F9FA8057B40D7B5E4E685D14E7C9A189FE61
AA2CCDD4D92379AB804A50C299F0BB121A49F29C1022BE502FBDE9D275217A6F
8D3C2F8D5ECE44CD30ABDC2623D1D6DB4F874342087525991AB38E45BE56E034
C39045481094ABAA0C7387643917CDCFD25BC67D503A10514CE9E84115E4DB4F
1C7CA9724A1AC9787330F19607CA4C406444E109D155AA6A43B8DCB69F204188
CD17ED7031C2DB353E5278CD56B0D4B2E18DB0A83F980B02A325700709447341
DF9E4037B2BA3CA4E58D1A7E1E862FCA8C159C95163C698A52FB38726FE62A86
309FE3043BBA75B5C46589B0C2C42AF62FF2CC8C9E468D32A762ED8971318C70
1732336F10D109979C07267F1DE1AF2DFEC809CB9974C3E2AD2B3E7AE309EF59
9824F48FD9CCA1B163093BF861F295825177C2925F08B528798ECC5F0EF27AE5
FFF729A66345D0DB71615ABFF037817EF478B8CFFC014DCA278DAB79A099FE9E
CE5CBE9BFDBABE2735D2DA85A47C648FEFEC88B04A27D91F36642B5AD2EEF3F5
99128567DACAD92CA61F76E0CEEF13852E24C932503BE50C937641F3E5EE77F0
E256E159E858F7DCBCEB8EE7E61F9A4578DF513CC7DA87191302C91F5DAFE3E0
BC948199C6420F914069070BFA6A8020AAC2169434F5FB3D054297BDCD2EFD66
0242A3B62BAEC30D530B55034CD73973455539935F3395AF9CD024F880196D39
876A04CA0AC0CACD9A88C5DF701597C38714C32A789426A0178619D60715995D
1760488E4BD47BA7C01417794A00542128EC837BF14D7A36402E8E6B85836830
0A889649D24E62618088DAEEEB91F5D77CD811292D22D3D9BBF356384CF72F4B
7724FDFFF3BCA9280C8331A7FEE3ABF2041938E5D8DFD64BF10171CF3B435A12
5411C3A68658CE7796CF1678C35A5AAAE595360F8C71F059F48C15E467FC69C4
438B06BE53CD48DCE6962F187D7229185442556E7DE6C0EEB1A84D979BC87D48
786A2DA8915E37C4B3302A215C95551CF97CE0D577F3188C2246A80D19BE82D2
AEDB839F74BB9331D077C8E5B5373E4B516D069230461C0BE4781B1FECAA71BD
EDC672640204582AF75A7A49AC7935FBEF0362C193F76D401922F17AC57F6B19
C9FA43D12646BBA227A2886049D82ABA7A8239E358FC89065C242CC58001F654
C2069F50B56284CE4AE2378B8D1A68723DE966C65F85C3670C5B73988BF1FB9E
73F26EE804E75766815D4CD0BBC2C98A7EC00554E892DC3DE1056FC9A7D7E2DF
57057E0FE92549E7DCC4C949525838A93C98A11CE9AAAB64D383C91A7C454135
7E6C09CF7E8C4F715294348FCDCA0C173BB046D0103EF3BECFB8AFD404624A52
2770A7E189CF2BD9294C3A20A36B1192028901FBBBC04D884BFF09EAE0E4BC72
76C1824A753CC5E6C1D03E92CD24E7AB6A8C62FB496F79A570F014F0BB5AC672
C6A747A99F75A02B726B81BB76E72F6880CA218CAEA7DE82EFAA7590A33AC51F
8C476175C971BC81C9F4D11324D1AC26CAB68097F7B148D735E62323BF40DE0E
7EA6CCDACA6221BBEB48B799E585EBFED989AA1ED6BB2C1655756E474176A0FC
F633CBD9A33C940B99EEC301759C6A8984BAC7419E5D02CC31D6BFF90D4502CF
8AA8B79B2822D6FC0638469D9D14121227E623BB9D199C7C37143DA9D0C7AD45
D930BA318DA53D301E657039371D5A3D8997B6D48A9F0129DDFFFD613D46927E
E40728DE192B86C1B900595D96B9512A743B4E96D69BF392014FA67A58D9408B
BC5144D260CB73E35AEB8CB4E5AE93C733FA40698D04D0BED0ADF7A06A4ED956
32808D9ECD5F77974C1BB4E76DE32B397302D41D7F2374D72A7CF56A2B938C84
C20C43181585AB6809CAEED6934DC4EBB166A9E7BB07224EC48E30239970E897
B90BAC6E74E6441FAA7AF03D4613A58B6FAA017F49F2405C135709A5ACC320C5
D91D8C3DE36502D42F3A117BDC9D3CB57E4F809CE36ABE37E2CFF3D2228A2FCE
12CD4B569915C322A2182590507BA9A9E5BD593C8FED3680159974490A802914
2CF0B9957A24B561DF46A3827F07F58DAE53306F133788AF2A63A934368C1631
2AF6F843A055BD3786584C36995F1A086C4E27031AF8533AD057EC635BA9FC95
4011721C07C0EA7A95226D1B0D088C37A070486FBC4B78ED7DB298F55E0EBA10
31299170A3B170AA7BAE58D40C604317E8F86E7C5BA1DB690FCE2B7E724DE58E
A5823F08B772E34F50FCD595C1F03E62C1E32C54AB4B16938F8873D6F9186B9D
3F31AF946834FBA29544E47BFF73C6751085A4C6FD56D5A61137CE810E111C99
E49291596CB02335CB90D12B698C58F8FC82C3B8FBF905B19DFA01023DD3DB8E
80677D6F42763B2D54940167DD4A928322691F140FED84071971AA14CA8833BE
536E0971EB00BF42DFDC3600DD80EDD5C18A11312232F261B70F093B8F004F57
22ED4154D857C04DB9E1AF2EF475BD42FD0E418F1812CC6D579E019D3EBDE5C1
08BDC0F088976624E535C7B1FF013759A5DF9571788D8682ECE6A4FA7C4C54DA
16BD3918BF7E8506180CA998F3F45912298F8695612117A45779E747499C052F
E44ACC5BC517086B4359005C3E4E3FB69B95C5F28E6BA77DAE0930C8022608BB
1474AA5DC1B7B427881446B48A0BEE347759754F6970627160ACD0F830C13470
0D05826CCF95E4AC555359FC598F1442210CAAE71DC696490F9B3767746B134E
9E87DC5167D5475DA9F832FA349653055F1FBE42260CCC4D07EA9E0CAA1225DC
C72CD3903AABC3778B2896942E56409E87AA4C89A27E6A5348FA21D3E88B151C
363791CA2619AA9002FE94657480641C2718A41977AD5FE6807B607AA96B05AE
FC7746D687914A3202CD8BE7D17E1E474C891557FFFC04794A20AF5136E8E2ED
6A2F9FA88E6DA037A8D5366D6FAC9FC96B18E4DDBCA018E5A278DAE131A7FB1C
BCD4B000645AED7E40C87B8A1A04CA7ABB29216831A7E8F213650F5CF0EE499A
F94B54EA70F776732ACCC77337997CE18042EB1AD2CE6D55F5D8A6781C9AA281
207B4FF25296708429EB09BEC80B366DE91DAFF20EB7790F6CD6A105F0399A13
92750E4144F65FFB7A8988429E05E3EFC9B9FBDC533E83433407EE71154A230B
8F58D6627A7C0FC0B02B7929C083118A395E4A27642186382F47383D5BA11972
C50962A5B671B091F93A013EC06945986C63A15F7E0AA6340481090C9259B74D
A383C5916F7FEC03AB6CA4B5F4BD86E921C1E4C95635613D3BA8A87CFC409B9C
7ECA35788A69CFEFCE5E92CE1F1E2E3FA3DA1B5DBBABBFB27E9A54E4A3A35C28
BC6F480C8E2AE44CCDD6009D902B0B653D9933B070046C870438DC15E63ED808
E30037C71AD2E8BDD83E932683C81644619C5C88C16DC9A936B7D820904FAC4D
6DC4CF5C763460172AA6F67BBD762F5DC6D5574E07880071F40285893F50D517
09A8E9CBC991E67FF5D47E6F3D8FF96FDE441AC449FEBE8BA2BD4D6E7D541660
8D73EADAD92B03097FEF007698BD32D1338B757A231995E9E9C4684B9B523051
93F0B46D9D5176536A7BB9613AD63134E7FAA355882E851E468549396D6D7CA7
2591F5DBC84D2E6887AB634016422C177F59D7663344F6FAB68CE94FCA86F7B0
1520CC646D6ADEC28A70E1E220ED90DFC72BED355E863331B10E8C178A776685
C399A854253E14DE276AEBACB24E85A77F58A9421D75A8E52F84613FBAFA6BF8
42B3E64CACDE526F60AC050F8516E5013ED851D93EECC3820DB8B30A43F33AD6
42CBE52560B9137A277E190FC9A9BFBE6FABE30147ED08C4B326631B396D99AE
4E287824A0278DC0404F85C55CE4A1029E1BA405545223366168BC179BDCD713
D67D4389BDB32C2F652E1A4218CD5BFEDD42707CB7BD764A4EE14680A0E3135B
330BB970EBF5D066A58F00C136C00D11B84141CA44F12CBDB0BC108EE5341322
F81B81826A1B5C933559851A89761D57EE732D24E90D5D13D44F84277570E177
DB4F2CFB83DAB589928FB2E67D6856D102CE5BB44CC3316A58EFEF7CE774B86F
07F5A38C837291061573AC27A2F1AED87572E8DE7BA76371C1E93902CD4FE921
156A9CC1F5E93A37B9ADC002ABE369F35E8E71C775EDCEF2BD635728E78E100E
04641645D94326D6482401F8AE270F766D8FE3063BA2EA19F2C9DD489F9B8B76
40A8599AF41A43B6ED63BBE49710E5235C87146E753FCDCECA98F090EB8F91FB
9CA88EC29577D89CEA6CA86E21593D491601F5051B965E8AAFE7946EE3359FBD
4FFADA1034E5BD8C1D30EEE2B379CBFADBB087294E1DE2DB4B97E60BAE92A47B
BC6B68E1A8E0F1FBDBC44925A640A7CF1BD89813875D37F8CC2B02F6609EB33F
41C24ED18C76A2081A4592B3719C928FA15A0A7EC5929B631AAA6AF1B98FD506
65EAF0ADBC87771C490040ED79A4D9F1766F614FD6AE875B7B9AC19F2582C575
253302C3ABEFE8358A30F57E29AFC99D65EDCC00E8BFBF58F7E3D90CD0743072
2250864081E7D602B1A30D9B252603D3C77C6867B2E009F95B9D5751B64D9C8D
025057B66FDB6EE1E476AEECC2A8955A451DFD568A7EE46C9893C1FEAD96BCD0
90AD9186BB6BCF50C835FFE83F27F81FEA2E52FB9E237EBD2DC83B6E3B846D6C
15AB8904DF3E8B9D73DE8F6F0197F7F91860EB6DBD87C1D56B53124F60FBBAD1
BA76320ADDD31A73094CE89F57E2D4BC72D891397CE5E3F149EB882A108D60F3
67D9FBA946947707AA97EB5E931BBCEC7CEC16ECB0191BD684431719112F7D61
D80E718C47BE446E30B244026149D2EC3FA0DB41E022E1960BD527AC3ED84F50
C61013FA926D38640BFB9CEECF7A71158ABA1B8BED369153C32A274D4168DE17
4BC1A158118AC54592154C6E4A8DFDAC2FE915FF817988D9CB73E59489E2FDB7
3C0FB91F58BB5C31B40FE079B126A20D02AED52075C2E23E7CEB2D6C198F2B72
AC4D7FC84138DCDC9F35BA5C8FDBA53D830099A454D78F18BE4FE56747444A59
D640DD143E7C21250489F31E12828762FB9E9DDFF5DF36E2047FA64A6C6E9AC4
566D323C56F2573F9606FC260736C5688A58F2A2138D34093963E2FED3D28EFD
FF458C334802B01311A2908395FCACF2423639BE21C94FBCD89C5B2C26F77CC6
6F958432BB81AAF3C2A2DCE1EC45E6EC1793D1AFCCE4D4FA817DA9C901F9E8CB
515925C9FBE4EAA2EF85EF5011ED342F783F90D4A87B8534B5BB5ABEEE8119D5
4BF102E188BA858396C06444D50AA72723CF8008E31EB1FBB4E2A6B98EFF940B
7ADB438D65E594830983E2B7B929A7EF158F33001F64CAF0493E1ED63F6AEEDD
C0CA246F560F620C08ADE3C5046F3076F43F3CF64CB648F21D0C9BEBCEAB3FDF
4C1BEB24C4D77A0EF98F1D4632D279B19ED50AE845F29B4A2D8721A090F48A42
4851E47BD67B814B6275C0B2A2369295C18C95FC52C4147FDBF40D3B897D748F
362C7DA2EA9443E163AD9CB7463FF23D3242681AF2E91C3CA6671CBD64702407
49243FB5D13FB2EC6987EBB92F40368BF92E2FE54E0FA7A492A394B369B40124
D6BFB7557E2AE6A4C003BA2474D02B574820AF52DD261F893D69CBF6500DE83A
5B40A5F534D7814852642B4ABB6C938CE38E009ACE1BB95DF7FFC97D2B353EE1
0B81093CD2C4812EF72C92CCFBE96B3BE81F1C8CE6E6AF6505C958BF785B5506
59D9D7AAC68310D3915D999037CED563214A8E93CBCD5BC6D3D63BD07BD5D2A9
F8577CD6ABC6B3BA103E4C407BF17EE1FA1E44C55B3B2135E3890C6ECD4687AB
A1A82D5A23FBB64A13FA7840556D70CCF100E2EFDF8D4EFF1EC5025192B6FD32
360730EB139798613053BD4C05804D542BF7851E028B85DAB6399F2768276891
AE84B1E990102888127EA42BB9D21B1FA15B94588F02DF8FB5434BF779FF0670
787F8995B00EA83ADF0C044499CCE6D3EC4AD2B1517CDCF90F01B8AC0379ED3B
6502E8116FFF2616B033EA9FD601A7830A9718F2EEB93C001EAEA7D86D5649B7
F68F33D5BBACC32E018E0A2C6D7E982AE661DD27D850BDE8E61FC0B3005CB0CD
DA49BC4C51C68998D09E2B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF947E93D2D3D0F27B5085BAC95E0360E2C
9BDD51167CBF73B2D2024AA34FAF04926AC36223A3B179B09D0ED4F36BE72D24
1E7BC59A035B26D05AE5808ECB4BC8A17E00866BDD4C63923F660B2A4DFBC2DA
15132482836514F5923FFA767BA28ED53EEDBACAFF5B54023770490B395888E9
B87E035EBD28B8F67585A22810958EA8848EFDBAD1E0155CDC51FEF80094A878
94700E0AC1360191CEC836B6EC59DF617C1127B56A27E4435BD7F9D95D77F705
7B4C073420A7A62D9C96874A2179E9EB13A8BF26163E0BE25FE6F5122DE8D1DA
C1983BFDDBC862112A16DD962AD61C4E1BA6EDEA771A385282D9DF5CACB2605B
FEDAE595738B082B3469DD54442CA09248DCE1EC1C574EE68AEC8AECF14F6E98
1D851B9888E6847DF35AC7EEE5CC43E916E45AFC8A9E07B69C1B1C0B66CD9BFF
619299437C6332293CED9D5E867EA059E88C602FDB684FC5A5104D145345D1F6
C0F034ADCA9ECD0E313B9D4C62F0911B7F11537A60DFBA63F0C83393F9306207
0CE4AEAB1E4868B8F24156E0AF3F99991447A1E7F7DC36D8B603201199E18599
7C0225A1B9C4792EEAB2FA038CFACCA0CD98EB6581A50B6A649265A33525A438
DF5CF7D0350614D63746948C25033C1C5DBE6F9AB834ECB4E943948B21EC7B3E
D2EC4F92472EF783899CAD4B0EB457657211A2422A9550A2EB24044907A66E3B
CFBC6E22A8BAB77660D36FCC73ED32EBF5F0DEE29BEC3089D3EF6A18E8C57D70
05CC92B836A8F7E7C35B0E0F782934493B474B043F9162C39CEE3E57F30CE1B9
E4400F08AF01513D86CEFBFB9EF2E73CD8A742E6FFA12DAA8CBC37A396847ADA
54611DF96F768A3CD4A5AE0AAB0BF85B190D2DCCB4FAFD84E0BD1ED209BC977F
81499A926FA86E486708D76E62F55A6E569CFC69F443133F64D981C87EF69EEC
20964F845E8C5B8219BE7090FC93268653647AD018CA5CDFEDA4DD40E930BF7E
D6D4E13297D788550A59D5A9D35951838F2172447C660843C5B233189BD36F93
3469A9AF83BDA04D56AC0C28D081F1DD6DC2C82D88B0BF013AE9CCB0E7D9D531
4EFEA23EB33118724040E56E1263B088E760032FF71CD16FA6D7E143E54CD37E
D906F5D54EA413DE497B73EDAF90A4DF0884D5F63C4253C69E626A6377D95798
470DBA9315884369E75E43A3EDA2E5F0C6B26C4FC143CB2F1E4DB1E36EAA5238
216FBDE37BFBA6D074704ABD76BB8359B3C39CFF94968EF459419206168BE102
013E5E650F2F536D06D56ED2A479C575C08AA03678C1FE53DF29A782D59C6279
72AA618682D0AE03DA2D036C4DCBB7C1462F7B3E5F212D91253EBE9441371FE5
1EA392E8B5C55D9F5F6FA9C4B9597A18028953E3FA254567784137092E152719
E2A4D7C07D7F20DBE73A64A929AEB68494CC17FC338C93601C928FC4DFE16947
9794BF4A603EDF9441A8123BA3B044560FE3C5DEF64D7D71D3D93069F9295CC3
42726463DCEAD5EA7E6279198531EDE3FA78EE96668F5541C279136CE88423DF
F306927BD06B3C464BC8E72D2CD79CDEBE8F8FA23C07E45A77B7B6680DEA945F
C4E9E1DCB2C2AA2FD7BDEB9C1992E5C1579CB19A17F28132BA1161CD58A32A6C
3CC6DBA90784674400A679D390E7F470BE569C7F7726C499C935A15B8F1B5AE0
694AE2C413FF211D3ECD8181D99026877FDFE438990E66EFAA1F3BEDF065A1C9
FA2BA8C45C9491923434C03364C7CCADC3CD919C54DEDA6D8DF8F1360328C560
0EA16E64902235363B52F6F3B7CDD23C067EF3614BCF3D8E225865E2232D4718
C154618880B4A972C6CD8C2A6DA8841506461767E3AEF4086507B842D4CC53E8
32F0AB7E2D88E56523B277A720F03E41E39E7FBB2ED66EC1CA64DC8C90ECA467
736744834F5517218C9559647F4120E39BEDB251FA2D2FAACBCA9F576D090FF1
5A75BE2C00D5914C2323D5BF1F89158CA67F1D628057A5F1F3FBBF7B039BF331
87249B7CF6EDD553D301A3F8B32D35F683B9149BE54291FEA44BCB92715412B8
015BBD76BB83593387FB5D2D5988D133CC677D9DF42B6609CF9138D472B77A1C
63FDB34DAF77DF9AA93D68388E759245CAC64C623D249DF0D20515BDD69E6CD5
8EC1096600F1E99AF35E8952FF8C0728A200A7F80EBA60E3FE7348BC508BF8BD
65E3672F274AE261048DA7F847F6E560D7E99F2082BD92B3F4BEFC03DAFDB1DD
28164949005C96DB3ABC06D43F4B82C90C6C7C236600D45492D48FA94A163383
F934E92E44BB6AD9B8B4439EE93B676BEC53AD8E45F5559F39BE0838E8DADB17
E65D9E63D3AE226FED85D9CD4146BEE028A2CB3C59DADD174476729E42A25277
A193A2D9CF67C44E251B88ABB779C05BFB2D0F66CC74ECFC2887153D76DE81A0
340CC4DA3C2ECB733DE3DF99CE69FD6E45C24E202AD8306F6CCE39F527FF5ABF
C7530CA61ADD2F1E94AFC27E43695B30F3199E9F94B5EA94B893A5F5D4D355CC
94F3E3B61D5F5BF7408D380E381755835AE35999364E3ADF01FFE61E9C78B214
94365A2B021CAF6FFBAAB4D15181EFA07461A4AABF23FFC1B2182E8DA0FC765B
57FC3746632976CC9E5A9D7B8DBA49AAB1DEB8D48F8EDB49F64E6057F8BDC407
506DFFACF9CC512DAD334727BD1E716CED6A7B3FF49C14FF5DFE950F38596ED4
410EA179D429A9CBDF37883F08042E226EBA74A586BD8E615021BEEECAF30714
6E53DCBD665C8C9D7C78532FCE23049DDB4A7BAFD4A18E512BEBAC0DA88B03CF
6FDD6496AA7B208BF86974BAC86C43E0AD9425687397487DE4E559DDEB5A57F7
E43F0A4274A184A5A09DB8AFF693B6E74EA70D84AA2F92D74D227E6D5F857B89
B0BE4A48D7A09C1E8E8896F9AD8EE285F46912111D8683CDD935F70A60E87291
4E3C6DAAFBAF46CC2FFE110E9A59618241A4449A3A02C0EAA601DAAD89C5F3A4
99FC09D10EA1752E01B53F0A51917ECB199A9FFBB21D4FE6D1BA548148D97D46
8E0848356BDAFFE05B7D25B42E5C92570DEE33EAF99843E9BB33707ACCA5603D
6861617AE8E363ECF6837EAD0F36A2F737F9FA6F65B91E3CF9386D9DA8EB8D61
B14D79F01382D613E1D75789A6ECA8A8527969CABB14DEA47DAA122470AD9B1F
504CE464C228EAB1C1687A2EBC30F7D0734D398B33BF453E221E93BBCE98C1FA
3466AF9C7160216241BF64429D568DE23EA3A5D55667C59EA1DE4E8E6A9F073E
9AA95F532B8494F94DA0E51706FA2DDA75CA9BDEDB1E896AF1A8B41C7F809B5A
A8CB340216A5741BCABCEA3B1D9823FB3915E46A15F1CBD0A7E43F3D791C33E2
C8036CDFE19E0C5A7E7E1BD630ACB891B46EF7FD337080E5977280759E6C3072
E784FA0B6121B30EA3128329F3D0CB0B2D4097FBE82D431B3DB102B789AE4CC8
167CA232B48A4E3E5045130643220C1ACD093979BE1B4A871FFCB7C4064C21CC
C07B1FA25381B2E41924CC256D04BFB1C34B7FF4B7137BC15BD2B68772D625E3
423A3D68118BD62BB57975A66621C4B1B2EE7D9CAD79EA3EB54D5D60DD040D03
E2A555148DEA7B5192945016C64BB06B048F346318C1A50E1830CFA2624A81D7
6CFF28F92F37C2C33DAC8997D1C27232AE5D34B704B7A0FF88E01DD6C1E8681C
56025A4E0D310FC742CA3928A30E83D93F3DBB582FDB7B2AF1C5C3C5DADA0D39
7696965024BA33EB738395D5B27154DF856F8899C6F22C70BAF806A96A77C076
BF8E9E1C6BF9F4ED9C9FD813A315DB80FC565B75FC9D0A36654DCA3E18EEA021
4905D2373BA966BB805C3C2F6DE86205591125B04C820FD1C9477C9BAEE42770
0E2AFD7F1ECC7C43C38AE3D6B035C36D0DFFE8704FBA2E7EAB2EF212DA871F39
4BB3E9F095B7E4BF2BE4B0B685B20CFCACC6B9409B1AA68D2AD5AFD96C4BD90B
3AF2CAD28BC02249F1682425BB5ACB2BF40F53FE650B13CF770B197D95335A1A
4FB84AD652C90E94D1E7E07FB39801310D305FD1063D063409876ECFC3C8DD7F
A07488CDE984FAB257251135E1D8420E845645611BCB8F8C9B2AFAE0E560C6B6
E8C695F5039C9293D068740A810F862336D25F20F3313C8D060F76663F98D1CD
B938F28187789942BFA2CE86B3D4AFE398EF14F11D1B475C57BED3DE13BC4512
8B2CBA33C740DA3B8C88A03101FBFBCAF30024E18B124F5FFC22B157BF8D1B05
D4B1DBC0022CDF1D03B3B1BE596357D9B44E558B4E5FEF2C98A88743047D8D9F
152A4A7B515A6429111304010B3FAD2320CDA89B76C3B89C5072E09E2651803F
7D6BC898A000EC96A3E0602F5F997D0742492CE6F8D4590D9662B4FBECFF08B8
D3005E987AEEB6BC0F11B6EF8C0DA4F155608FD799BF116806760617C6CDE04C
DC59CF99FCD9DFB971B950DA96D3793C908FB367EEE6DA64CC563C9B427B8CD5
6D72E9BD11CA516021779CAF184CC807B64C1FE95F79B0932E467FA4AB595C0F
2B7FF94E62B2EF9E7C8AFEB3261FEC45F7334C66F066F06D4AEF78B3F1565A71
C3AAACD89B0F1F94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D351CC744DBC13B0749FD0A129D7C47983
7FEC7FDDECB3FF4166FE295814B8EF751B79196DF6FB2F28CA8CB00807F682E5
1F37B8DBFA6963E77ACF4A16586D58C87B0F882FD7BAD0A5173202958267F567
6D66D0511364EB31556C37BA1973151C35046863FB4F3F5E6434479279EE110A
575DAF0531EC6A4D83FAAAA64995A7B97207724374CF283D0FEE36BBF7582F5B
CED7CEB37EBAFD8206E691F7D0D17C63527AFB2AC537B47C402716FD6C23FE57
22BC8B95E994FF0C6A6469AFD70C020C711DA6F19D4C46B9DBCA6769B6FF2733
21E813E7E86FDD3101BAB642B1553FA2642DFCDE99A053213ED3C70CBDBBF19F
C743F1F168B5A21E570C8DF7C108FEEEE50C825EF2714E974749A7317D535316
2D369F1673DFEFFFA71E41E520792075672344DCEE4F9F1687F0FBBDFC25FBDA
0D8A6A1C3DAD8BDEEE8161AFD70C020C711DA6F19D4C46B9DBCA6F9D79D26E79
9F1D26CDA56B940E651D0D4D017BD65B3ED72939301FFDBAAEC98AC821AFAD33
5BEFBC695F2746A01CF510E684C7D589F29C9B5E0BB1C42C9A96843918976FB4
22225AFE3A3F92B85B2D1EAA81D0F1D4BF85B1FBE305A01C6207D95271423B66
11D3879FD381D567701AF1B0B0749E05027D5493A806A353E3265170C00076E4
86ADADA8AF511EC5FE32E5834EE0CA7341F16665D0EC4DDE1F80C894D3049706
CB5FF8EC37092ED0A93D27A2EE85982E48AAB7AFA36EBB74CE59EEBC8CDC41B5
A08A3098954BBC19648F65AD5241827219F9BF72D4813A30646A85A3E9C558E1
31B17DD5EBE155667B73C135EDF4295FA4DA7A1C9895AA3F6C1F61BD658159C8
88E89E3E48BFA5BE91BD3DC050837B89D74F7872C976386C425054BCA530CF6C
7A33BCABA8689139753CED4E4AD623924858E2D38A7D4BDE1BC5D5EB4F85BE37
AC869A6CFC87E1FCA5CD9D3B850D16B50260C9C30CFA7DD1FF25580BDDDF4106
F5E5BE85533BE7D472D65C01DD80A54683E962767BDEF178B162417A7B7522EC
6B606CF186D582DD972C54BCA767918EC9225192DCF9AF7F4409C06926511480
479F0307DD5A7B8E16D3FA14AE4D7C9AAF0789516E44D9E4187A63CE0397C28F
3414FA7B2C2D61BFCA9492B32DDE38885072B38149BEC1A5CCE0C84A4963D11F
2E56709565C8818A538DA896944A83934003AE6EC6CD98A11CF309661E2BC60C
143604AF24AFFC6126699DF619A02E659CA508BFB7697284F9D1B44FFCD31970
F8CAD34EEB68EA6DB154204ED9DCE3E7E23FB72C2692041C4FF3728CD309F215
414595B073EB8B80508C2EDC1C4DF8C38E89CE919F2A837D1397202EB314ABD4
09CFD87B215EF9299486B7EE9D5B8B545B66B27BA5AF10EDC29718DDCFF000E4
CAC23650FD61EFD84E2F740BD474FE8E1F07B47EAD21C8971E63D08E76FD487C
30AB83108E0FC735A9ADA278F98F77E7664B448AB6640CE04DC32025C32D9E23
7EE196BA66F5390798420251BF1B6D1448A1D438CFF5B5E463376688E36D77DD
9FD29910AD48387A1DD9A8EFF825AEEB4851FA87EDCC6CCF0B7DEAB6FDF841BA
424051A287661C87A2E8F331F96E081B376E7406F256F9330EFA0DD9B527F9F6
15110A9DF17EC46C4E656D254139609F5F30FEE578C4B7ADEF3F2D60B1AFA7A2
10F25855FA9FAB97920F532B14BCCDDCB68CC67370F100D9B85D5F867C4D9FDC
7541557D9B8BD713133D203642762D07BD8A312A361B5A322EE64866E3F4A827
88A4CAAA00A5B73C94BA4A7871274887D955B7781484859326C51CA6F03FBDC4
3AA61550E51B9A14B05F45AAC734BBF26CE3BCC43EA07B9A6724865162FC3332
8E19749CEEBEA229AABA2D49D1AF14B8B004B03EF3AE7D77D45BCD5A13AC7A42
0FDF4818434CF301BC0D1801AA0868610A6D0235ED4F025343C535FAFC4A1362
3036CE729337A2FC6EC2FF1D28CD07DF5224BB5BB166C8B3250E4521EAE83DF4
31BC84FD9449EF5B62D965F8E697104C14AE2F0747133E2E109B76B6BA459795
A215C7B59E6BD5ECCFE5D7C6187B119B867189D3E1C9F18F5A94DB6543BBDE3F
BA36760C9A55D9C01B23FA9AEB505F4184C56318C3775BD7B6F93C09FCA1FB4E
A55972BEE88BB5A9857B4DF7C38BE9D03BBFC425440BE5335BEA1B27BEC93CE5
351D4B80212DE01E02AFB5D819036CE606432EE212F8708E49DD9A0BEAF48043
D99F573E7EE664031B4A14A60CE45CD070649CF209DAF2FD1460B43D21BA7A45
101DF299898AADD1C9EE567CE891CB30E250A98EE53C2DFFCB8CE47391412FB6
F320C1459E378B2DBC4972E2A2F9968F971DD94846295B4BC95E27C4470E3024
A309D0EB598A9F0C69B3856E4782CECF5A52336E2DD2A365758D3530A04B9254
DFD4723A21A1B85B69A02DBC99B3C2484B071CA186205BEAC13ACCCC8D13F113
474D367AA58DB938AF158ADB0A32797DF36118345B2AE34AF991ECF926DF2F60
11DE4A6358AB78DDD9B1522989507D0C04A40C394783C72EE0D5E728CA781CD0
7BFD270383A87BCEA737EB7063357DBB45B8328B5366C0A8B7DAA7048C0028AF
D69BB9805609459E7002DF03B3835475F09A823A303CA49A5C39E2EEB55E743F
AA61D726371F1B0394BE026485EEB8BA0F91B474618B352C75821FD73A491246
5AA29E75AD2F4B69DD245C7067F22D7A1019E04A19756F1032A858400E647212
86FFCECC01B36F93B581024DA99E76416E7339222BC8F30504E7C54715DA067A
E39CC6854E7F2D6B5C946031D1321C86D5019CC2806011CFFE9C7720ED59AF6F
19CD6A6C9C19310EFC5E33125D7DDCFCA58A507C290E7BEE986A9A085924014B
8E053674EFCA2F98F740D8BBD3FF40CC52F279FEEA88539A4E42B73A9B82352D
0E44B6D69866718F4A063A676691C7878687EBF064D5A975F6121234B3D8EF2C
0932D0618B5EB2B2AF1795BE768420D36B3BDE698A91AFF4167733AD45A281C5
44F8BE78327E086924D7D8F4D2B59B435F3A40B0DBAB6FD517F6735F89ED4DAC
4BEA7FB4CDFB048376D604F360F305808CEB9BD6E81F1705BED00BD851A6B142
92ABD57D4F643F6C66D47BCF55FA15BD4598E813BAF9B05F28FD32E5B86FB5A5
E388A2C04E1AFDFC8DF47B4ABCC6DF7838F62A6CAA01A20DC343BEBE4F643EE5
87CAC33FC9B0AC672EB30604AD9B5B45276BA04D2450D625FE73C568D213DC59
B60614C2D7E72FFD2E71F202030AEDFDC6CB8AB486471C3624FEB310066DA575
1988427B8502562161091B4EB202F7EF64071722A5C2CE7BA89F220A096D9B3C
7F31D235E25E797C92A4AB4D8E782BB7C17C4B66672FA0912C0763E52E57AF48
D674CA830504AC31D5FBC9A3F67D6ED281BBED005344937C7E1CCC3B6BBE4235
4627EC77BF2C4AF59DE093AE4C3CFD7581BDDC24E77FA4442DA6778629620B99
07E39B68ADF105B1576E945833ACFA38B4710841BE387FF816179ABAE20F737B
7B4609C27B61C683F5377E058EBA326C4BCB44C7A73757BACFA18D242C601D71
46FB443BCFE4741219C77AED47FF824A9F0C86A27F05D2FCB11CAB32ACB1F8D2
E4124248234CF92C09C7B8750AD663B15DBF0418169809D504203A458B529F18
631EF329CDAC12F5658A9CA19FEDF9840E71851BB161C9BCA50E8DCED4C5DD60
C57E357DD91C7E8FFBAB06A2D217BE7EB87F4C3F729C4CB9D278D68A91356CFC
0BCBB0A1898556189B7697A9E474804EB0AACC3BFB0ADF7B0F237B89F9EE021B
222567E20B8D207AE531E1BF18499DF8C812F33FC302EEA2329C92189968FB27
677F03311E14A75293DA28C58459F9573612FB29176CA9B6512BD1D87B6D2600
CD2A72104CF80CCB5B1CB5552DFE368C5B5C1BFC366185A7F9A9109E8EDB19D8
AD4DACEDE777F2D016C96E0F2ECA5A8AEE0DDBB535193DB8FEB88288932B4AE4
7107CE0F8F51C1E63C253AA74064448BD3E8742F6F04C3DBD06FA3F4CB39A5CB
6150F704609B5A3D6D2918EEBA2A428331985C3A792AA3B8CC62857042F19BBF
61C4ABEF37252C1E44BA2E6D0729426171CEA91F50EFEEB348C5A0E024A9C6E7
38FCBDF29A95ADF8C2FDEE10374626F39E6C2E91864909E4EC12014E33B72BD8
ED2DFDE76A5572D85CCF9EF0E4CA26E456B7F756B63187DDD65D850AEC5B9A3B
0CAF7FE48B221E8122D490DBD04B9E2F62A0A3EE9382406D7DBE4D8232159C00
BF64F5721D5168EF39FD8692B4BA051693281A24F7E105AF75E4B52F8E72E2AD
8DB6600190E9D8DAF0A17A18188961F6EC9AB28D6C2918A35B90EB55F58B06B3
1066B347AE51B972A71948F4A2E9FE5CF2F2B1E344FEAF613BE4EFB4D591CAA0
1BA94BEF2716D7C4D77CA1AC43DB06BCAD858206141B1F8D4BEDDE0BBD65B974
6E2E2AE7C410938C5BC5DCA1C55AA814D3DE7AE60D28B508B209F14EC8D656CA
A6D3E4EEB355C10F588799D49C306619DE84C502BD0DFD605F6D5E1315823753
504D14B82C56FE0F7936B97E947E1BC623FFE3548F709EB5BA672657CFED3C70
7D5F8FDFF3751FCE92730C067CA9BC2708F019E93D350400E87A206BFA5526F6
D8AD9594801A3994AC3C539A5F5B35F52B949B4107C809338F0E2E2FBB0524FE
08422226264899BA2CFD7382CD184FE43D8D0B8D1E0D11F45373BFA4BDEE8825
60E26649F7B010095DF97A3F757E691CF83CA1DF701E3C5D4A6BEAF8433C4DDB
EE19D33F14CCED8FF73AB40C302EFD986D35F9CB684554E52BC8DC597251AA4D
8C272AF82C92BC692D09C8944325692F3CB62A89F00CA36D0B37F7BA20CE2C3B
B2318E11CD0538A356CEAD97662B96251FB4DC80CB99E7BB26F825F8A3708FA4
CCA217A4ED6EFC2723622AFDD9CFD89EEB411AFCC5E735349E09117C1DB5FCB9
950AA80AD6ACE460FD1FE0C16680C2F4E2285D527E9AC898C0851AE4B4D3BAAA
326A7872562586F905229E448684E14E5A17FF61B5107BACD05E5B4B4A068DE1
34098D43CC792699A31FA17C57212C3136EF414ED1E34B157BE196CA4A2FB083
E6C1306245EF9C1FD99D6A2C960C4353447DD4CC4EF9443709B480B064EF7FBC
CADDF8F6D288236B55DB04D33520EEF0051FC6E05C6515B13D1C5903B6F5A0B7
5C53A9D70033D46C2DAF80A0BAECB328AA2DCE45A3024F2DBB7F5538BDE285C0
40F28EA5744A37098F480BD4A37763C007B3538E15B9C1DE737C5EA4F46C8D26
9DF15DDDDB891B3CB1816339786915146491BA659CF38AD3A7411F753BCA732F
2E24FDC4CA8C2BE32606F7F77CA4F59A9404AC143B2A98736A2FAEB45A33E1D0
BF99B2A5E5052433CCDCC16B529583208487CDA9009B282362B27ECF007A463C
5338670011232DB3D648918F1CEB85F6DF389AF363A8D67761C0F2A1DD706A25
F13F47D393CDB4284609C8AC127519070EBC4FFE0A8FD56B98581FE0F47E8AEA
8DF79E5515D075FEE814E3C00B666F6A3BB01505DBFBE137FA7565C8DEFB1D9F
40700243C567EF492E6C30104F2BBB24CD54FA232EC7CA6292AD7F979465F5E9
A8100E3C391B4D7E85B8B2BB5EDBFF69B57A6554BD70EF2B4174AFA088BBB6F2
11F5666EE9AE0532642C8A634BA4A9D6767EE6BA4CD3554BEA63E191E93FFD9D
25096CC19506596995F1A6948BBEDCE372F2D81C228424C81E824CA9779420A3
F95B6305892A6E3D9AD2DCFDD713F8A42AE062BF8B9D022DE8B7C9541093F45E
2672E4E4C818C21793C67F3B1D90A4C4187C68E87D46DA13AADA090EA80770E8
DCA38A96BD1CF65BA9DF15872CF8775A29FE0F7D2FAE73AEFAB920C020B7D62C
55E825472320B57726849BB4EABF4E9FF19C678ED5CC81018CC745A3A54558F2
98E07BAC9F06D266419F3C45D01308E1FCDA78F501A74ADD37A377615FC76AD8
D2FFF0B3C6AA2A9CBB3CAFF66DAA6096D0FF4BD4F573255A83DC5B694C7382FB
817C5C803232690D458768EF740B9C8929B3CEC4203026504A999026401145AD
FAC49901344C26078ADFD0325A0667E1336DDB04DFA16E35D574F3E78266BF5B
B7758DA04F80406D7DBE4D8232159C00BF64F5721E0091608F62D118968D7805
A450898925D8CC50C0129882F8211A177D13FA1453DB422E485B65CC80202F13
851A7D82EF814BD34486D1C9876F11EBBF01D058FDC990C3DE872AB60894D0D1
994BC19ACED21DA7797C9272FE037C4FE474A77A1F389426702990F6CAB4AF31
874EE85CCEFB5651244286A591CB429C3D144AB2C97682FAB484948D1B61DD43
5C8EE13209B5F4D8A0E9FEA9B220D1A183578807AD854346A7D6BC6579118912
E7804EE17DA33BDED9BBF86A457CA846385F9B2D424EBA860D3FF29FB92FEF1C
849AEAEC0DDE35C1C2D5B7F7EBE4C9A81AC250FB584D7B3F58A867DAB5BF1C64
15820A9BB189CD69E8157A86D7A280DEF90FC98F0591D9F065B791F0B8B14B29
6CB735C41596D3EE2E9E8990412E35EA73AB9C4B48682CE62F0095466099079E
88A67715A2F465A36689DBD0B4C19ADD8226AA8288DEEFFE53B6DD27F9B41AEC
09368111886F604C815BC791713C7D2F929BA004A3F3F226449739059DD3F13F
2C840CCD27DE45E6C67C0B573FEE15375EE13208DE14BA569F6512077554B8E8
9C2967D350F75F28F0675312ECC573873D1505AD878BD665189D45C42480050A
E621F9C79CD021CBF681747FD266CCC5709DDAE73D114E46C1ECE0944D0E294E
9D3BDB56C999937CEC419D331D717C541F650AEE04978D8A0B74100DB0081DCE
E066E1F725EAE15895022ACC3A965CA4B0D9F860D2693DE32668261722DF68BF
F332A7540122B0A648E14E5C439561E72A1E7A2EEA0EC371BFA5D479869FB018
ED4756894A14271718E2797CF285F54C82F11EC7D1484B194F8A8A019B4816EE
913C18CFF8D23E9AA3E9A9E381B10D1A048E7EA4DE356AEE0383A3B8D401350E
ECA6246E4DC59853EDF1A2169E91FDF7F6103096A45B7DAA70ADDF60D391D7C2
1FDDCF7EB8ABFBE3C73B5C52EAD1ACFD0C0558C0723195089CCCF80F6C20C15C
DA2E0C27C30DFBAC792262A4D2F5313D02D9C498C3D8B4AF2179AF87D099C0B1
7D3CCFC9F44119BD484865636A0AF6503CA674533ED75E418F10A45FDA80BF08
07FFA43D1EA1FE29324BC37F1A74A953788C70F144714042162729D747CC827C
0B9BA58208E03FDF588F1363DBD10A8EE5912D42574B560A58EA246C8E4C637A
EAF918726D87607CD598BCC5F9227A43018E7057A863D1455D26BD337C5D8CD4
ACFA54ECFF92C579806085F994AE302AF1EE3B411724B861B7BABF1E3CD5279B
9F0B5AFEF6BDDAE41CA2F8E464FC6E82E2CAC26AB2030338F12F340771773A22
CA4AD358DBB8BAEFDC759EB54647FCD6200A48D690CF2458BB7E78530EF587AB
37DA101DDCF307648666B721001414B41F2A3488471590669F3C3040C6A91E3B
75A4F0F369A8EB572B940F3B770B61EA9AB08355F6EA7658BD857B3C623C1E2D
23C50217E1C26A4D75AB5E706E5EB7B75AFDF5ED6108BF683860B8E5A96525DC
6E0DE457EE415FFDF2968868126430A293C6E8A6A87593E15735A60EB9A37784
E071411ACA7D8C2357017B2AE621EB7B3A41FEA633AE6C255C3F5FBE193A90CC
49941B8181AA1745AED61C69E8F124E0357E5E66ED4BEAC4C723068E2FD3FB8E
CDC8970598E6AB0E385830AFA223AAB66E000AFE49C6E108C7822BE4025EEF23
9886BD9C146F50856F92C0B421081AC1902384499EC41072CE7CAA163280DDAC
CACEE02E4B77CD03D49FCDA2BEB3EA9B820B08D3DDBC2CC11A768DDE74FDF213
466DE9FD1FB617EEEEB4E2E61D5846701282DDA90A375489E94C63D644948058
081056743B3F67B2EFE6358BB81E55798CEF0A10895B2982807A982547AC4F59
06D15DA00BB047F9E707D907C3BED44A2D79E41C35E8D7AD1BB671E5A88C2022
5462A8FB917DC0FEF8247CB2C4BA4615C04FA35F1135956DDDCBDEC0B70E866F
12C7C53A8BB57DD9965B170A88254DE8F250A86A2DD79214CD76DEE8E5284A2A
B5605DD865A9845BBFD1CFCE27299EFF96F2E1B0E6477059BBB61BCCD30ABD7A
1E586EE4CE84917765AF40D48DEBEEDE98AE6889CA1EC9EE16168584EF0662F3
318FD54EFA3F379F555D93B55B91B267584436B13203329A731777825E285709
6F2D866A305C8C26374F5D111DD248BB25071C5E23A965FD79BEE9EDB2C1FC7D
3E601EDFCD744B2A5069309731222835FB97FF496512B85F10028DB9D97DF0C4
044E62097FCC1BEE372950DC5CD5AD62E290504EDDF56F8A528738C6C6322F46
BD22F897FCF3C7880B3291273A1462E6EBA46B1ADFF78ECE0BA086B77EBC61E0
54BDBEF7BF7A7D72352A620431903D20979436B80F3F6185707423E194DB60B9
A04A3CED6F199C9A4665ACC1CB1BF1F33881825C311C15D159DC6B715F8BB4D8
4BAC4D6494E7F0DBCCAE27A9CA54C677132FD4C5CB8759571B0D5E16A1AB1A2A
134EC9DBEC4061F6FF4CABD2248C5CF72BFC26639574689609495EC652C6F2F2
AE4F9C70AEF0927B025AFD584CFAAB480586C90874DCDFC2D705B048443A32BE
65D0E24A0E9902B646FE14EB6E839721ADDA935ACE60345FC461E99611728736
BAD40445383A8ADC78D79D5AC07C97CAFFA9D0523A17F7B593CD6BE8F62C3968
9813A49BE6515DF416A9629B10D78B2203F21E7A0D75F5B1216B8737E2ED884C
AFD26610EBB2915C39777E8237B1550F5198EA041A21B868DBD5322CCA338A1B
B27ED90A198823A8AC6655AB970C2E660989C9B882DF4E0F739050FAA43BAB18
171FFD750A614538F745DD9EB99A8CA4B91BE2263FED8A1225E5DA0F684EC236
2326BDDAE0294BC448E7FAFCE2C5EB7D6E812F09465E34B0E5193A0ECC945835
94B515A24E6EABAAE93F570332BF220B0559DB74F1EA56F5D1EA5DA25FEA3487
967126A4D505B68B8ACBACD4CAF578D08A1C90B9DFA1F7DE9D573EB051F06D7F
D5D3B0A5A3FAB3255F89CAF1DABBA08F28AEF1D8828C75812AE254ED0DE7EAAD
0103044C419B91F68EAF293A2C227BF1450BEA5A9E8A561C68D00C55F9FD3F10
F71E911C7DFE3DC0A791F0FA2E11D42BA31ECF222EF8ECDD1209F7450769DB58
D0C8827C46868EDC28A4FC49CDED5BA3B776EBEAEE6B886AC1D139136B4774A3
34D4C17C444D78F89D76EA9D5B517F77174AC7FBE5464EF4159847AEB5B2B6FE
121AB5189DA14A17A7F8121BC996DECB377148ACE4BC2D3D6576598546519DDA
F6BEA9D87462EDDE8B75498627C61B50442E1D185BC7B7EB89B0BE25E65F998C
31DE7653F25E6F63591BFE0EA1D14D908BD8C9A1E0DF4CA1015352C9CF80145E
CDAA937360B55C2150AED64F9A5EB6A0894E0C231136ADDCDE61A77C21D93731
0776CD5998981BA8C23E398AAEE5697501FCF3E287EFAB2C3C08F3AA38FC9743
F598E32E3684CE7AC262FE3A4DD7B21C42DCFC5255DBF63FED66045169AE0E77
E97DC4C1DE815EE7C7FB7EB6067A3F34F0F009FDB20F363544CB2A4E9644F4CD
14B48B537877B9BBF26FA22D376427AC06A341D1BB7EDBFC85491145D585B4BA
B5F169339337A854D3848E4BA296E27D7A66202B9A221FB06025FB4382C8272E
752137BCE865F85A6452868F633961279044D8057AAFDF9D15315D694377C911
35565FFF84A6E42A59F40FFCA7B0944A031AD69CA18600157B3FEFDC13D3D7F6
C6D3600DCD94F6A13F17FEC79F6DEEB07F4FED1C5076374C1C424B05E9267F79
872A6F4096C269B77F57BBEA66C08E91AB22B74479739F7E849F91D9AAC257CE
A233F73B3253C144DA4C13E9597262C4650A7020A99F85CF19470079F1030629
4BCDF962E94E4BA6F3B8B78B660FC7634FF57B854F2A2925AC7C62FCFF5F6D8A
F18CC0FDE314BC8E0FA179890CE92270059D2267FE20CD51190F2BA6773D004F
A0F41F337D6F43E6C280F98688B402E2795BB389C7ED08E6DC49562013ABF31E
61867385DCE99D5C075DA951F8E84BB81EF1079B667C86D9B96239829EA39E50
5F38B4842D82FB04C02E57BB179CB4331213CDEFB8C361C47B4F11C845ECA7BF
9397AFCE64C1080F1DF29E15C418E45E831700CD6EC3EB7E978B7113541C3B84
D4318B5714E0044D29F1946C997C95508948DD9B031A5574D604002B0231D837
885F2EB8B6399A00D02F1ABC8833FF7033A588A77E8333B5207510208F390F57
6BDC0C976820F1F6F66515479CA476045CE22D453329D5FD021ED13E1EC8DE3B
2D7229EB6EF3F5AE654BD6E434E535EBE5B0063B53D46AB1192DCEF6D7E6F9E1
7E1975775B62027582FB88C242E4EA5506A06E36390288289F643CF6D2EC9386
126FBE5A1339F801ED0636A9954C8C41A30D0BEDFDDE63C1824BBFCDE1158670
857A20E05E027D51C3351EB0DC5CAAE1610A7B8E02F15A7F1F30049769C77325
3209B84FF82DE0B256344507DFC2CCE56563879B75A3F0E7BF90C6BB9610D89E
1A4E754ED435060BAD3436536A9FF8FFA30848987D87357EB83569C4C0D45AE4
EAB95244333CB8F58B2A52D533DDDC891E9BB2C77682C48A283DDF5996311405
6956694A7D0AF8EE47D963479335B4A0FD9354235745814BA6245DDC964419A8
B9C3288D925E3722C66A1C7AEE3D60E9CA57DB545BA6718409B19795547CAD54
CBF13B55C205F1C840171FC4FC8C9C40CBF28F5F1DDDA31FF6715894DD521275
D865E491CDA9412F91F1A2E139A06121769FE82767486D3657B89A78E98B7964
4C012ACD1E43257170617FE55B558A33CAA9A3941614B61A4A3DA50B1E225932
8544F645D4CD3CC5468AD2BBD2B3E37806E2296B8A82233F708F967186E71C3E
D188244FA98D9BF0A92113C51CFC841045CBA9B40684E28C14ED137B983B1A59
EEAC1C883DC902B6B3C8CB7DC9CB0006F626AC699246DE3E22AAE6960FB51396
405FB11A9C2FB890440D0919EF0AE76637C38AF6F0194891E7470A6B1CD8C244
B9A75970F6590F963AC7313301E2304C204721E87831F256A92A7AF8CE2671CA
6A67C5464FF1F8E9C3B126199F1EE65BA367DBED870BE7F74F626D6CECB3EA3A
0CAE063266FEEF6BBF242DC8DF186C4ED33D7539B3DC52BE32108C915E9B23F0
76BF7FB663EAEDE4960A1ABE7BAF93C2AE5D9AE66FAD501FE4F3B7136CFD3417
BE6DDEC9778A7ABDCD0C87A1FD59DD21624FD813EEEFC57D3FA9B8BD8A97F36F
F033FDB0AD408DB48E6CC059392B7E3FD4E814876636570C57ED999001089553
2FBB74AD059C43C222706FE1823BC63931308A0CE8DE1F408884FE98C1383EDD
3DF6956CAF8A0C46F2EAF55693F60E383D2DAF30A7CB7C78A8C6FA2C41AD66D3
EC93367C018374DA24E163B47A7A3BFF48BE11CA7F842A6617F51467217809E6
ECDCF80C4AE25B4BA2D561E7971455382E77630B94FC40EDF8B1DDCE6B3F5468
AED007374262F78A93B8E843A30A51DA82C0170356C6EEB36354D78AC142711A
5597121D3B83F8FD3C362FA2A63C0333315F81E1BDA0E7CEA927F9DCF7970D19
A58EE814E500C4AFCACF372888F3A4B38C8D9C75B698DB9E6748C786AF30D12A
2A3AAA90C8FB9C7E705CB4C722CB482ED0B2516E50704FA6D152E12301D26B2A
A457C8CA78765DE7D449641FE12A5C925B803B76C8DEE0379BB132B61260DEF8
6B14786510819F6D4420C6CE6B31363BDD6CDEA5F942BA95135C08ED14956234
C19F74D0EAF60C0A0C1D1C53557AE1E29D254B352DA6743A960C99359A00A18F
60C0C70D0DD895E46628D1DAB24B5C73992110DAC52199D2567D65325812C513
EDC78FDDFA7903628772BCEC5B31B7A8D4EAC9FD4CF7CD127E85775579FF5F53
0091D95453A1FA4D738DBC6C0B6445EF9C1F25489D69940605ED5CBC2D47E4E4
02D8254AEF1C56CD1A02B72612D071B729C9D8B7165A17EB73A19F37D3114CA2
897FA52473708C0957AF112B67A265AAFD9EDEF4D15C31ED493C96C7E9910B53
5FEC4BA5407BF619E50346D64C46912B5EABBDD66D13BCC242ECD53B6046CD03
69C5B1A6EEDF90BA7A50FB5E53F3701309CD02A66A36E0EE064E3D180A2E906C
F654223735BAAE50978B97EF69C179A8FD3025A47FFB67B2D7178E6BA670D4EE
302CF248EEBD0BA1A11E393C3A59C00571822940174B97244E1952D6828A868B
C6584622A39A239350AC222F05967CC58A0CE61DCFE755B9D9265E3643C44FE4
5D74F8B75BE3FFEA9A969C18BDE6332ED0F73A09CEACC8B2034C42FFACE6F501
B9158CBABDB644A199AAE7696F5B59E4C78E3BE6A2D959A3BB0735E3130571BB
97485FEE2F11D28FC6E8B1512BFB45394306964D2073309C9DF30F481FE4A55E
DCE15A46FC41935CE2F73FEAF7D245D22C165CE29B8CA5720E716B0568037A7D
9611F4B90F9AF0D8BC44A1BE58EF810A613DDA0C472DCD0B2EC37720B714926A
C28EE58208E5F97B399F9C8F56A98FD9CABF7B0A64688642BAD8711743C2E1A6
7857D39B489E54425546AFAEB3933DF9B52C52AB892DB3015073143055D10007
A372BF98DEC385C5933EF1B9D403465B529E1B6EE796CBDDBE2085C655F4BB80
4A00CAC0FC53A11F70FA5E6582FB082C8E29C2D2A649E7A8F8C56E27E1236033
F9664E712644E1309E321AC3767C09BF7DC59AAB0204F3ACB5E2D51F2FD2AED2
01D083667702E4BF06F871DB941811EB455F78567C0ED428D80FB22206D9705E
4B957C01B8DF668E4CE7A420F38A9C82BD06648BF914AE91715B92EF1AD3D9F4
4C93A638AD7BF98D0E136CF98BDAC1E1BC9061A18872CBB71BBF8164F6EB0178
018466DB279E09587874D9515CB3C0F1B44A1151E2CE0FEB0158F417A9DC6E44
20FC9820CCC2FBB04D138E4374B77E6078BC714B60E3CC531A85AEC0FB30ACFF
6B035E156903B461E81525ED59AF6F19CD6A6C9C19310EFC5E36B64327767293
A9F2CA64A5FA797068AB8B5542F1C51532B549E3372269BFF385EFD3C33B306D
67D26AFF97FF7A0DB12A7687AA5B81AC8D02FC2268D05999DD688729F3F75519
C6669E4E45F55E20571D4EE45BF118BDD7C60D989A9E386BC27996A888D7530B
EDB47D76E996F9E816E53DDE7DC2367526C69C5900A44677D054C233968191E7
B7FF1EEBFE83CC32D3D367E9000141EE5B103C52A7EDA14553BCC08E1B92C2E2
464A4533D399DF622A189E6063F74A7A9B1875C81D97C9A52B3CC6B7B180D835
2DB48AAB64B08EECAF8CBEA07ED92D5669FABED5C979A21107A3CEB90CA32985
8F8493E5CB7EAFFB1836928633C49BACD2B88BED6C707DAE86ED337F94D414AE
3D84196A9726917A19D047B650DD49804B0A69A70BA5356470BDE95E3A60BA1B
6FDC0E50B54C32176750C08D55FF10D79C837E8EE64EA3D8E295AEC15C639F7D
9AC9FCE3280D61DFC5263756C50AB3AB642F4C70BC0A5D647B49E30C15E1CEE3
52A1B8022333DE3F743D030D2483F755803C339F2D6419C881CFCB2EE057ECFD
E86B31182C297773FDBD586B2CC0113E27D35CB68BB3E6F5817FEFB6A9645CCA
04C2808266E6F59FB422A94DA9D42D253B440CCC2CAF9053B790FAC214EA649E
F0A956E57F21845E87A57007B594B0BEB458BB64308E4BB8636207F5118ED71D
4E4DC06C800A6DFCDDD30BFE096EDD56D5EF9CD88E4B559CC5E9D915E69E3F91
12201276DA0DD6A254893DAB57BF1FFF10D184F38C786F5189E9281721BE1C76
E177175CDA66BF46C25E80A175F388DF710F72C9CAE2AD1600AE40456BD42113
D07432DAAD7241C86DCE69FBFB0DD6DC2F24AF327E4998BDB3FB2C085ECD57E6
8642ABC8B6E624E283864A2170296104EFAD0B2DE38AAB12BA95827F51E088B8
3B6A0ED0B6E40743F4EDCF7FD67F410279A6FEE12A787D6CF9F19E9FE841F025
6A96AD25A2EAC9CFD0B7CC6194F26EE28509DEFDEB0F46EDA5E779890A9AD7FB
B581F15A4BBFA59B2EA8E2905509640E88D2E4FA25B6ACBC8915FC9C5BB43864
2E42FB266FE9F544D7E65E7C53C448754D6A7EF2E7772A0C11FB404E925870AC
AFF1C00050F58ABBD4B5F0E19BF7755793AB16AC32485EA1BCF4E74BEA4D2B8F
47E374CD983C6553FFE4903D2D1E70B2FEEE4E0A3682AAD751DB0786E2365847
8EF146B2EFFCDF3D925904CF1532BE0F61B7713E9826FCC4C252C38BDA705B37
3B26927A8C2459125499C7EDE6A5B22EA593F1040A49A4557C64A219CC3D1098
94968DEEF49138CEBBA1E2C3A605A8DCE2893950B22382572B9103070F3C4E0D
C8C75862DA9378CEBE0CE1089AECC374D1836C5584A1627B09E0B5BCC76E1682
E55FF8571DC64BF8D315E5E5573140E7F33A5BB8D1A580047FBAEF35989DEA55
DEC2ADFFC57FB7A24EA7638C591CA4D1AE95FF9A8370970A33D3637DD83C9166
E0274CE8030E30413C60695E979B81D53CFCADBA36DCEA998351955078C8859C
23CDB811526316788BF98C557C12153D49CEC4E905C5ECF1010FBEAEE6C0106F
D1CC3F642AF547BEFFA5265CE56BA3B017030B7C61A37EF6A3B39C56A0341074
FBEC7093F1DF6203BE0BF33E0812AC86D170C83C41B4C1CA01EB0D806C5E40F7
1047770896A92EC05EF52DE8569C0A69FFE3E1AF913E5F373BC8BF30DBB91C88
CAABC8E70F166B63F449A9B9C5CFE0E5C4AE5E742B0C51046FDE76BB8E9E1C8A
9A583B58A59443B953E40E09041AC409EC18880885D81C09A97BD684D7865C69
CF26C61A0ABE1DE01285DF6A373F8FB66DC96A144F6674F2F37D5C3B0B1879EB
E10B91C3F98265C8C17C3F35A9A02EC689B539B5F8E1081D8AF5CAFAE601F11C
39BFA11D1A462CEF06A392BF383F2B6A2F3A5292512B0FDA433D688B61E73E27
F9822043809438274369FFA1260BC0A3D59E4FB0454F05C357D95A38002C4DA4
E7C5516B59D6AD0B16C0D24E90AB6CE4A9FAA67CC82E7F313E5492BD4BB9B6DB
1BAA68758CCF4164E6C1C7959EFE68EFB03E99DD2E1B556535CABE601BF8EB99
20FED3A9D63C83D46A01D31D84E515C04DA2BE28494047CB19FB687046747E83
6E1B69932E27CD70FD119755D50636B6DCDD56D512E012F8A738671D8DCAFB63
A13501844CE9A9F6B01637C92DFEB1F8D9E1BCD37EB9F422C5AAA34E60B22A00
901E1B2AEDF5F9FD70CC23A482F8378B5001AAB93BA54EB6F7647A018F9EF219
337A715D4F2835776C3BE7C2CE4D139FDDB76948EA0FC581AD7C5331898AC79D
520A51B68E3F76C0217EA6CC72321CC94603CD3930D032577BBF9AD4BA68493E
C1D885A520D40D8E870303BB3654DAE3A45DBDA666F1A9BDEE4EEF2583F2B1C8
5BF31B22C7E6E4F542503D8A1C335E2AAB5748AA05C09DA50C4A2C849A4604A5
831E07DB160A9A2A8FD8FAC5E465968D67E788127FF27470FDD13D0D5D6E71D4
5294ACF63749C4C2A4C6E0CC758130428E0FA589AB5EC75EDEC4B16DEDB2B2A1
3EE0D9CBB80D72FBA18F684922B71D1E28A154572BB59AA733A2D1D7CEFE91BD
4647C1EA6463B72A1E55C7FAF0330F91088952C7B24C105E80AA9DA8F5400EC8
5C9357546EC2953F3FC76283428971200AE6410A14EDFADC004F440478BFB2CF
86FCE519E2B68D8843F7ACF3092736D7BE77BB1922058C7C4621C0908AA4FF56
FEF370BC0A8A16AE91AFA5BB7D932D766E9F73CD7F8411AEAED2F3BE1F25239F
FB2B03CA60A53563BAF7A02E55A3ECA0EC743883450A27DA1F362B1CDD646B50
52A734A2DCF02F75B80D579F64DD00C6C317AE7527A1D7CF50471BE0E0C447E2
DBEDA5525367D3F4DF14789F9FCF537C953630A457A36C9FC2314B081341BEE0
C477AAC3834BEA79475CA5CAC62BB5C63D1095FF76B0D3A98E57EAE912DEB9F7
5C2FB7095B887368C57CCD3E88DA3AD21D3950ACEB23D3B7BC1647ED8625F475
D2366E83EB629B1B33B16FA21EF2C72F27814083CA551FFB375E92BCD051C6E7
E63802B357E20D800F88B7F748819B581054CEF5F470701BD097876DE0F93BB0
7465700A8CC2F26BAA1086FEE86841F2280978182035865D91FE36BDF9D81FED
9A6DC70EF2297CF388FAC110D5CA7B4315BEC03A249177DB3A6629B938BE62AF
8E99B404FC4CB835E6216119A3A2C7349CDA108AB812E607B06A061792E248E1
5BE0A3C17C21CA7B18D16F9AA92F599B7F88C52050EAB645F2DE216B399EBE30
FD6ED7A07570BC47390DCD509E3E92B1AF561AF1983F8799EBB14794A59E8C0E
49745641831A4F2A3373A1AE564C11BAD5B7BF8892F8A54C37EF05F0AD15A0DF
64423271EE0486DAEBE12E9F6B5EDE35EC10364CF32497051F81113604EEDD83
BBB03A8F79C561D9E9EB7901B568F14277A86D2C2DC56820C6A8FBB3F26E8CD0
F78F1D8FB1D6DA925FCBFD70C13685243219B55633B47C388140051E42C2AD81
4432C597F2CBEA7A72ED68670E6475B25FB40F22F966F29AD49CC5AD31AF603B
84F87517EC7EF2830AE2BCDBBEA1422F7CFEE1D886B75AD1A820926603A0C162
80CFAEF6D6054FAB5B8C0FCEDDA14B5CF0CC58FBED3800D6A8CC7413649A02C1
732392F0D70875546D118D2161A37C6A09062C1B121E90C15A26811288CE41BA
1B23CC52DEA837B8BF8FCD0B85CBF1A610A6191B5AC6B86D79D6C1CCE4B40DF6
63F761AD8FF60F4AD17594B15DC71A8C7ED8822F039F50CEA5CB19EAE8863789
51B2CDECB1D4151541F9AE39C831B84EEBC653605A0119F757777E681DB7F6B2
0A845A82F4DEA9CCB3DF0A30AF41E19A1880C6EA12FFAEF455E2871A49DE180F
E3949FC2278962D85BAE8B3307611F3C5F964456DFBF1F7DFEE21DE835E92D47
1EA57290EDC589F172915EC11A63A872E03BF8AF4323B94EE966BB0951D294FB
806B24F69C5D4EFDD02C9B77DA4ABE87A11E86F3F2228C3D514B00A24EFA91D2
AB50D1B2DE127B5937253F1C1FC2DE350C22CE056B27619367D741B58E4D3F65
F63229E4DC71B7AD65575296888E519AE2314259C70314ECDAFB679FDF5124CA
729D6945278BF06FB3C94DEE4874FC2D4CD3981FA2C483514462846C144C23D9
696093A136F7E8E321DF6F67EF65816678629D2FE3E7C60D7C43618D67E3693B
103DD93D876AE6D444BA96DA1C37D1C19EE4242484F00D03AED18E3C344AB2C4
868722817B882BE7F00E2DE1B68DCDA04A96B4527BF451E2B637651B87DF9F16
D718F0A1AAAC1CF5BAEA54B50407E6CE83086A6294082C0A815A4A984C9B33C4
49B49D409A898F9F6534E0E9A3505CBC30AE0FC96A5EA8247C03C8071FCBEE76
D09E7C6E958776988253BC807C644211EB7052A75FF562B22C1E8A98B03778D6
1C525851EA4F3BDE7E9290A601E099FCC9E4FCA2E5E1574652FB9B24BB731286
4ABD4107753FC405B8FD83635B88C27434A0973B38452416C267BAFE6D154BA1
716B9FA063B95183E094C11FD841D6D190A0156720C2F8AE6BC4BE622B68C071
0773F54AE2C2B6DCC17C07CA3EA7BDCA96850AF462EAE0F334002464F333E803
F59982C7E6FC4C5F855FB229144DDC8FA6968FDCA6AC58827263717110503CB3
9872BBD9CB48B0A410899E2741A45EC8B38CABD15497D12F091FCAD6C68E032D
EFB3B2110843E9F2DDD5491E0F6CCB8E298F7E71885484F16E9F485B0D680B3A
AE180C2F35F0BFA009DDB2739B058F4490B0A6496519A3F3E9D4D7AD94E906C9
D657EE4F8EA95B15CD13DC176806C2B6D712FB26B0C883C001C5C39E71A5682D
4778DB0F61C2B0836DB4F49B82E90E5A749073DDC1E9AB1B7F9869DF7B583F7F
220225FE89CBF0787746E4C3B26C1D703CCC7187A58D6CB21346088CD7B60A14
AC4E139ADED7A084B11C06D4C1858DCF47E39B284FA7D40A28D062CA0E6069FA
C2F829E9A5F2BF4D9132D4818DCD9A8FE5A597AD714A53F1BDBA7DE5B8333918
00CF1D1CBEE1C312109EADFC3EA7D4B3954C0C0A038CAB32A43E0D100053297F
B48C1F31DAEAE9FEED953A6F53397B5B4B975A41B489F23B24193685BEA4D0A4
7FD43A5484DA6BCAB4E7B915055FD3AC93CE93698B0705A4AFDE21EAE0327CC5
61F84395D6A9AE7B1F359FD0363D4544C6BCBFAF2DD241DD7528B175C3F3A3C6
D82195B65E4EED8C5D5A72B8944F9CEFB2106B8B5BCC262C3956CC0F461255D3
4D8EE8DFBFFF3469F4D038A26BE8BA569D5AC8479D367CB357C88E377F7BF74A
86C83EEF023F66E7061B6477A882AD9419DEEA1BE8EDE261C094E53E1DC3D8CB
4361A8F7879445F22D232B5A1D009B7E5AEBAC4122D1DFD815F2E771354DA4B0
6ECBB02D1FB6758C221BA09B5D8842E1087FFAEBD7B4AD992510C063094E1F5B
68E047DFB38D1E4B45FFA12FE07667205EBEA7946FCA0988928B396B0F833EE5
01FB78FEE52EF3C5F6FD6A3380C78D39F1C2C2478A718BFB376FF2274C9759BF
E9185688E0C5DDB291DC5ABEC499AF0BDE92F56AC2152BC9CE550DA9242EBEB3
6768652269C8B9EF56D8B0B308071514E889F8FA4EC52BF1981726CE248704FC
6C7B3366D2FA5F1B245EE9BA05DD7E962A2D69708ECEBB2A05459D7B760EE510
04F8595189AECF4233E574CD139FB396D4039C844C4F4849BBC894F2B0024610
26391D4C6112B8860300FDC466DD0310B122FFB3DC8144F24DF3E4CF09D26DFE
92788505043EA1E87FAE41902990C447CD911ABA5A61C40475B34C93B7161918
7303B4CEFEA0E466692C4B89C3432761D50C5BBCC2E68CB953519308B1B22711
A02AE88564EDF94ECC2C2A9945AAEFF72076F4E0B0E54A3D40BF8ED1C82BE612
3A9A924C5A757F92B0E22A9CC785134C726F05D8F782F4692B5DCD5717E810AD
B844C0A8A76AB18894274228FE8E2847C127649CF01CE7E17A93339330B3DC76
569F355851D7BBC50DD81A2B85C4B42BCA38CD8F92FE8B7991719E3D3CC41C7C
CB31BA8D2D66E13913C403B94B421D37F57BD73B96B67E7D33C28B06693BA914
634C3AD7EB844EA1F6B1507045FF063BAE8D4492B8A17D6F4705A938F0405FCB
CE22C34C487A8A18B513CCEA9B88E51B59ED3F9D5C0228977C754F7A82DE9ADB
E008D35F404526C33157D85DB95A9CDF61E063C4FB7216BC86C09115A1B39DED
20934F480E861E006496A637B6472C69E7A69BD01D8CE2CD212E3854248F494E
58A7E8E9B1FBA0924C492706D926AA168C8F28181F4EF78C66BBDE420D2686A0
6094CC0F45257FD5F452C79C7FBF1B376EEB971B7F7B931CA3CD00EC939BB4B5
20945C982260FFEA66F4DD39807852A4FA82E7FBDDC715B4E3416A42C53D6809
294244AB18D179845B7DA4BFEFC72521678A3324F251B4AEAB376B18BF425491
9B42FBD4AA6209DD724828C160920C9DD0BDF769BA19D26493C2CEBFF3C58B10
022DB1F421264EA79131567C49038E4E327F05492965FCB3E91799772223636C
C35092098015DCFAE27F87D8CAFAC3D7B7EA8508163FAB10390D26890A7A5827
E896E33BDDE7406287803EF0FA1E0FD205110D2ECDF4C0B691BEA2A0193BE2E6
87364A1FD9A95959159249EC73E7EF3D1A9B16D57F1E4565DC5154BC0CF6CCDA
AE0F387095A627E166207DB955F22CEF1A29970087F0EFA2DE0E2F45D8971764
5D1231C28BEAF30EB4771D8430D5F52D6C0D0A7DDDC98801A845C66B9BDCD0BA
D7036993555CB66A4F248040FC1C649B7102FF8E7CA13B44D6871C4AA608B0DA
8EC555B6755D8C6259B6A7524ACC904047E316B1B76757BCD7769913947DC445
56D9A43E6365DDD7E95DE04494399B71932D9DCAEFF340B2502DE73F1B91B56D
EFD07B3A21097AAC1E602485CE068C128728344A4EC16C361E721C9812AD730C
D6D8D11177EACF59DE6CBD2054FE6FE1697B49B8CE5573C300497534E2565081
8E03893068B212A60ABD0011A19FA6893F7DD056E96A6ACCB915D90D881E6160
0A2A01EC36CC43DF704BC3EF1658F6956791725CE9EFF0A701CE79D6D1C14DB0
E4346F681202AE6B2BF561E54A1F68497693536BB83F719B3D4171425403626B
37616ABA09959F94DC8480756ABF6C7039D8F669F51F4F0667EFFDC9CD73618B
BDE9AD463B58C6F010FB00D0A181BF59E5A30151CC1DABEBB50A753165985366
738BC8E49848ECC13ABA97F0655F59907592A8941587CA6043CAEF0BF09A9492
0EDA8D33541FA36C1DD3A5C6132A7218BEC06685033800BBDEB20CC4856743C7
93C26E29DAB41EBE0BE7DABD32E01FB1E91E629AB7C573D2D13C1DF8455C0E7B
4C09D37E325BDB4524225BE0A4D77752062576B6A5FBEB98AAEB1B6884FD57AB
9870A90E22FEDA4B2627948399A3194580F4552FA7F52B3B70A1131D5B6E10ED
9D12A7B2745C1069D4C85AB1A9C68753BF50550FB19D2E32BBEF452A3F3ED1C4
692D5DD22271D5AFB4FFDC8C00767D3A5B6105E548C42271E3803579C7A0072B
AAA025235955E3262738B85114BC6B942701C10835F501624ED353378E8F641B
17C30D163B9D9B8997831F8DC67B8C7C1F310BA600A619456092CF49E0685786
6E71FEE28C9B4758BA151DF6EAA716F0D4CF6CF707233428025C9C76EC584D7C
3CF39EF7896FB328626405DB52A8BE29726D5743C3E2B8EC8D628BD422FF4815
5EB41D70AB01DAA32291406E9D4D3AFE47D624B2E912B5614DACB45B4D1E4398
85D9889A3189C184FB20F59DD473B8AA6DC0C145642CFD69ED83038AB9E41A3B
60FF77F8E9B243B276E52DC992FF99D61FED6E17EF2E82B72C9EFD95C826D803
210E87C2A3CA20BFB2EB1AE7137876F69A0B7E518147A8467429CB3ACC86F8E2
8610EFF46665D8CCEEEA02B52A686F54FF90183D61872D0B23C4906D676835E0
C3273D303C187A43AD176ACC0B3C57A72CAA7A41747A138D68D02597E17955D7
35A9C9A9486011CDB2DAAB275681DBB277DF93D62DF44B2172E15B1C0FF13813
4C3D1AEBF32AA36E95A490712B7F2499A75BB52900F943F9AAE0621A8444E7E2
4534BBEFF0EB777C9F16C47BC767CD6ECE5602122E9D344A3DFFFB0BEFA4B4CF
9B6133A909A486BA4A3BABDEA105ABF3D1F54F453A116D8668F9DD81BB45E439
D56D69443AA2B6D1E792F38A1AC51137FE42A80B0702441862B110C22F686C91
6227658C32EA44A97A5208AE46906223437495A74B6EE4D6899EE386006F72EC
20CC88BB2AD71F5611BE2C55B7422CBCC364318659E6BCEC6FC4AC495F0B8CD2
900845C07548E16A804E8685388514BD91889B0046050B4591046A42E6B1F492
E8FA7B5E41226197C015956A57195DC55EE8A61152B17E50E8B59B638797673E
3E41FFA74469EA7DBCEC6AA8968218C7E8C5BCD871AFF2F09D5294866A73033F
F2C4ABF2328770BC3437DE28395AC01BBC771F370FFBE91EFB50E7D42E34CE2A
36C7D8EEBB6B05F9E6BCF47DE539BB4A0443CBBE1B79494CEEC56D60951F4614
D5399284FEB46479F6C4D2E31A2DB9CAF712D2429CDA8EE853F08013C115B1D8
6DDC36F3593C6FDD965C7E28A9CAE315FA4D477B11672E6F03A8839F893F6D0F
9BC3D80145217E7145FDAB4468978CC4DF3D89669C2094B3C850CCB71490182B
E737E94E28D52FBAA6AC05E08B624407DE45C9F05B9E46C319A81F5F9E21AACC
AD0DE437BA29446CA1F57802073F019D014751F53DDFE0EC9416CBA0464AA155
87A511BB064C823D3399C892401DF71B24D8A9A19C3433EC64D6280CEB74D55A
C65B65D602AB5029E81C6AF99A4320E4DE46D7B7F2A90BF7CC5A80F4DD87D053
4D9838225A35AA8433B4C8824B6517E13A56C7352C3FCFD696302F265850C695
71309F45A94962D325FC1B66372F573A21AC82F9452AB8D2036D7F9A5E254CE3
D6639C769DE8535572BC3D6E708A30AB2236886C06079BD3ADEFC70651C68523
CA32CF7B58DA9CEE8A31DD79E93807EFCC19771B68F728B1D1A40046F37868AF
1ED4FFBC12A32AB023135CF7348E741E3F65617DB25647E8B8D9619FC7866ACE
A9F5734173C4F4858EB0041781245F36972296CB30497D5D8DD42931A4150582
B898DBAD5B0C8B231EC12A1A08AEA20D1168F400AF23848C7E54E21CB7852A8C
D05E21EFA0DA14D07E11F5EAFE090339AADDB972EF4D14F8504FF81CDF1E7E6B
01C89D812BB1806E1FB3FB67C13E46EB9385343BCB0AF80D5B501121464C5108
678BD89E7EF3F65C76CA85714172CAB8D446B2877D09CC0011FDD663ADD95359
29602567CCE881005DDB69CE4726E3A7B9D07DEDA2077CB8F828914EDF1A5AC7
7CB54992B26F25DFC96E70BDCEBADB11F36258AF4EB1583B70E1C83055F9B414
51911677DD30F524C58EBB11102ED20FD43125DC254461EF97FF51D0FE88CBFF
E8E42C5DDE7A130503B8149191617442B0310D3EE0033D4578F47FA8B70D050C
55FDF8E3B3437CA01B4CEC1B45ADC7E6F72E553367A0BDD9B77011E4E9D903D7
5EE58F71224F698FE7BCDC70FEA9AD718173ECE13314C4A7118AED3C19713D2C
9242F35E67574D009ADCA5D30C457B37A858AB366AC61BBF16470AFBF6DBB27E
29F5808E78372796B12F8D4639F2FEE0C905EE5CEE8A92EAFA96ECD9043FBCBB
CB61DDBB4405073F1DED4E301BA28BF3C030141D24900FAD9BD61C5E79F80D16
2628B23F0EE03A66405C57F6AEDAC08EF9310A58CF330999F2389C9DE48EAF28
1133B7561343C25A28091254DAAA87EEA1008F2FA5A265A5F620A6DE1D735BB4
FCA98BDD558D2E35369A6A2805F787FCF011AFAFE134E8335A56290926E12A27
C505086175B303CAC58222F8F2FB1CDEFFA862A291C1D2A54F5D705DAFA01AED
9FBEBD2693D27D968EF7FDD93138FD8F9F3B897655EB266B876F403495BE5A8B
2F1164495FA50485F268D0998D9AD9428DC0950EDAEC6B2FFB6DE4C06545B35F
29FE451A883F3774AC460A162AB5E1C01A2D62038A6125038A64A19E40A33A8B
9AFDDA1F56DFA819F959088268D3E3DF484020A0A34E4A287EC68705F72EC972
51CB54F96959A3FFF122E10B06BB26A7A34CF804B5B57E1BF683A8B40B095E25
2AC3ECB32F8D4016A9D3FF7640C508A6B17BF075A1A3DAA669481F4B18B82AAD
E33E1573589B6F0747063B001637BED839CAE0A309FF3E09E99D8ACD5C2F1284
D18B0F6BEB392F0B5D2F8C028084FFF80A445A72D275F4C342F7AC8026D44F95
970F949C593F7F2B675C50533C145B149A898E92E6D40EED37F0AC92B7945C5C
8A0F61C619F8892CB84799A6FDCE1BE4E4D951F2AE914CB00628D08CC64B2B1F
0B370851E3626D69F91DA3859BE9D178BE48EF1461FF30499DE29E429A46E638
48A4562116BD1C9A888DABD73158BFB9E8AAE20963BA32015EE09CF552BE28FE
BFDC7836092746663CA41DD450800C63BFFCDB619C10C3A27EBEC3D0FAF031CF
7D85657BE82AE65050019CAF7606E2189FE4604F34BCD00026253B1C1583FF74
A5686EAFA99FFCB74CE740C46022E6017DB0E27EDB5AF0E1A938F1267BA5FBA7
7D9BAC799B18B8B06D53D5A6089FEAB66FA36C2B71A39791FADF7D807EC7F52E
21C0E7EF42167243AF5E38640343BFB287BEA2961F49D80CDA8115919A8297EF
89CC0E073C0D24FA008A8D0242489A7D08EA05D48304FE75C5E210991284801D
FB2A20B0DF8A36713BF34085A037C20844296AD00EA3505E9274650C2F6EF652
493491BB3CE32B22222823559F8EAD23C7116295D1F5AEB4A10D81982B659D0C
E66C6DC75EBDED621DD989A36DFE9B028EFB0043A58647606D0BC49A26E77C20
5CF28200C65C73D60418E0E4B66EA149A88CCB38D28B2E9A94EE1D2AE2771AB6
7ACAF489BBBA91331AC50020A84E29A0E44ACFB450D17F58DB4C6689C9D52D58
E9D7011F241BFEE62D50CEA1F68EFA0B80F4AC227EC83CB1CADE571501AF3B25
6813203B675C239BEF0F5ABFC5BF8E9C57491D8950AD807A974536AE2B137090
CF32A8F0883E23FADBF0F1FF52F152D4F8F19F88D354EA23DC5D45C9E38C7E18
86E45CFE6A6B3CBFE14F175CEF58F7CFF201605FDB70475EDD66B1F8CD47C479
E6515B5BC6CE861CA3E53BF297AE85E28CC889E86D8690C3CAF2C7012A158042
ABD1A73D386D19250EF2E85BC7FE391DDFF78ECEA7DDE912840C74A37819AE04
5D90B839E06C617A60701A10F63B68445852D7CCAFAEEA5DE2BC78100B4E250E
9C723D1003051EC3A340286C3FCC663ABD6815E938ADBA7129496EFCD0A097CC
AE1B7D9AAB9B1EC079499D16A5D5F461F493330969C9BDF36DB5386FAD660083
D6F401B1A0381FDA7008C9FE844DEFB9D10EC59B4838D5B2242AC1F9CC7AB138
BF26114A3C0FE603940C08FF86C537E5A3636368DDA63674FC2C2E812199527C
11BD8D7BA11BBB9868682154DAF741E85657FEFB00394521C44DA6FAF9BA7670
9E8DEA266F52DD42EE2854CC0F5C602815DD065FB9419B0E11A3AABE5FEE764B
1A067C095BD5BEA0409F78AE88281E94498544AFCE75C33F1AC206FAE55EF902
FF154DFF66AE8B4E96A433432E4812C39BC0FFF1D94845600F9DCD588FBE6C24
C9F7166AB5C4CCE7314234078C0C11EEF503DE7699BEC50854FF7E86C3665F08
219A2241C07D5F80F6BB5E36FEE778529854150F79D287E02DB4525E8FAABA42
D6F458262D6043B4AE2467A546D9738F33155E1FED25DEC05CE819C0BCE4AC3F
FE63ED39E04095102220EF8BB9D78DC7D9E97169349210084CCF60895014DDF6
E91860EDEE382274C33D749CB09AE7FC1A4199570B70A7E0E9A5C250C4046925
95C47396560C029080C7DB76A6357BEF40B1697F837DAD0F67FA402860F85E31
2805E59222D44E59A5E71F441649E0E573954B1EC8D79AD891A538DF6335F66A
4A2BC7332468D45FDBBD2699E5FB92DD401728F69CFDC5D94953F64649A5DB09
A25144DB7D33F7A2468F4D603E4CCEA8F022E04076E5D89BCAB5F0F78274356D
76196D39C78B42CA07E0378AC3B8777495A30701591CBC6843006350635B2554
D64B095EB106B7547A59A6190950868395DFF783A53A3CAEB21447C23E221009
FD9E7E74035C65AB99F0C1B0F20505B5642151967B94BF7BAAD4785F93DBC60D
D24D61F3B97DEE65DACC512FB7705F5BAD66FCC9FB7D3E2D8B4F60EEA233F7D7
EB24472A64BD2EF36FE41640E70F0A2377AFF9F8F19A7AF0D5663C64792621CE
5A901B9F4797A79CE355F6426686355E2868539161B02345E21392AA4991492E
A829B51F55DE6B4A1CE80ADD31F6B83AB9D3B6E61225F77691195A7F09C693C9
D677E440FCDCE59ED18811AB478FD17D63B9158F654F3476AB1AEA20C1C8AD89
95FE1F1235E802F3F44F9F1401A8AFBC7866BB580CA9FF2B8C637B735DC4CA52
58E41C26721203693D2F107F53D657C0BEB3B11139AC1EFB9447A7869E80641A
19D04803A3D27431B14609EAF1790857DDE1819D6DA8883AA2784297B5CC20ED
4ED6F21B0BDA8B8B9A48E604EAE6721F69D2AADCA0CB58BBA8417C284477B1C4
58C97F7210D4F956F5E8FB8F6DA1F1814DEABB25ED530D4B333F98FF136E5619
5E02100A39B863E11CFEFEC04EEAE0B5635F2CD39C14AF8A251CB4638BEA08E3
8DCF5CE5051965140DEDE7CAD2B4E02497AAD2D500442286DB8D672CCC18164E
3C6AB7A8660FF00B352560930898124804D09464F296FD070E99135CDB92D018
A8BD51056BD4B675627E65D930CC04F6D920FA434B8B8713CEA1C64784A65D23
36FD13EB5B61AF226C36DC4897267884922E52AAEB58A07C422D88D60D904381
1CD145D6AFB44662DCB2800CC29BE204DFB032B5036065B58CBA269370F8D790
7E116F33162E36118A7E534CFBF74C19C28D8328ED647564AC2F12E3E1EEAE8B
A4181AC445F329338E50B8F49A70FAB517EBC4C7864FAD050EC73F62496690A6
2EADA53E65FB53E751E5F91D5E0747CEC7838122F4E5586CFEAF1B5F61566EEC
5A78893563E69110CAAE8CDDDA74A9C8253EA982D2413D6807994D51AFDC5A30
E835522639AF7E07872C69DDBD2FAFBEB6CC0BBE784571DE9B6D0E752C05A02C
58F11A93B9AE9BDA870BEDB0FC497E2B9A8F86941596976CD684C3BA3EEEDA1C
692A480EB08C51231AE053CF982B53E7A81775A9D4DE77A3901D577BC3289CC3
C422601D7A77946BCEF2B9B5ECD0599405D76B2679B7E3B4EE1EDEB986FC8E49
2DCCCE284278988D1A38A2CEBE5AB3A0034A919D8F5A78768EAE1DA8381B93DC
9DAE315786125C2D89692832DFBFC05B72C2E112DDC223B45A49684B6A76654B
9B44D9DE82F8723AD7C0F82519F31DC1B90137D988FDD06D38F1351F065A19B1
2FFA69AD2A6635121E424867F83B68DB95B498DB855DC2B452BAD8EE8E876B81
7E429D1E6F938FDABCAFE3FBFE0FD33763F4FE964B4D96C5095CDCED5A87BE29
2F1959BE562FBB1CA1FDE9126A429EEC13E67DE63F5083CAFAFAB2BCF169C2D1
AF8B7AF8BFB59C2BC876460BB701E607D76FFAB7A6EC54BFA87F9B2DF5952C8D
42CE476096015B4325825E9FE61A54862F17900E35E2AFE799867D09486CEEB8
5B5F6FFB343F18DA4194C8A20C019E29DB3FCC5F92B42EB72C66BBDB7B4C047F
3B89B58E3DDDE98844B00F2ECD1857126AEF4515399D868A89E188F05D0223D0
C461C5E43735D81D8BC79511F3EA5776585F88A13302A3D225A480037FA86CC2
630F3DCDC0AC20ACAB247327BF22572F147DD6588DED1063F32DF159B72308B2
CA89932AD856B1E800746A3A17311E5C15654ABCE33F759724F9BDB354F3F762
1E6CC64D2C39630104DB3A5BC179D5C07740510BDD63B8D2A6CD7EBA057D2D34
4D842846E9A4E5D9A62A03F8E82A3EB438A359D7FD84059C794171A07A670BE4
11951D16F78432805FCA7BA41034B635D05AFADC378D206AEA737131764A129D
7BAA75A8780E1D070E86F3A7FFD2A3987C86F9E99993FE6D4187995DC6016D91
9D26A2243091F0D21EBA7A3E331888295466485F0DAEB909A5F5167FB0C2A4E1
303A6C9D4CFF7F3A418D54AA9C4FF2E1C2D3E7EAC2B4773288DBD55DAEB6D936
4D9EE7111889C6AA9E4ADA790A95FFD76E5F7FF18DF521F202D6445D77EBF5EB
65BF1129727E563B648A91B73090DDAFE72E0E35AE6644BDB63C4108BA9D18A5
80C6254DD65CE495018D92B22868D3A52DCB18C769DFE50BCCAD8F6A9EBA7182
3C9766CEF0AFE65EF3A2E697B7B6A1E98CD65FBA635184D467D06898436C1D26
D795E3841928F191E5ED3F9F03BDCEA9D4E6E0536B3BCCCAE7C9D2ACD2020F62
24DE69B3B7FEB88143403B6D3B963435BCC8C420436F167542074D1289385ED7
E77ABA2B969F489A2ED9322B78AD5002B4EB0417130A4645EBC50EEC4A312E6A
DFBFA048880D43A2FDF5E4D0B9977B5C217845C4D5A160929EB9058E9D04CD2D
7547F964A312C48923E0921CDF6121FDE5C350D305A2EE83685A40BAB27382EE
8AFFAF33D8F8171B3069F63C881820B64E5B4307677EFB66CF0B74E4947AA10F
BD0B95A1AC8DFF25CFCCC088CC3BE5197FDF27375EEE2EF68ED45C8D98E5F4E0
D6C1FB5A740504A272CF4ADCA909F2626F3C0C036FEE28F698E642F34901D78D
0600F147F2EA6F6B901ED6520662949C57A21F3BDA59CB5152D0A98C73321082
9B0716FDCF8825F1C605916638BB810045DB96C0EBD8663175B4632120ED1B16
5F5553672D7D21C2FD0176F026E27B6D042599BC3F45A5AAD0B73865A9A1D736
E6060112EE2887E266D98453532A501CAFDE5B7B9CF602CE3741FA8E1ECAA373
433B0A4AEB5F0DFFBE0A240E53BB8FEE24B65F9A6071691755B13AA94E899397
23DA066B70575B71482B47B6F9D471CFB982001AF55847AFEE3C2DB53719398A
66C9BF6C666282A6D8161496CB7586692086B60420D4C66B9F0C8AD05ADB5A16
2353813BB3D0F9B6E9AA632ECC39569AC117D0F1C65829A8313A491AE214354C
C73BAF5201FA4A916510BBC427CF579D7D5354134A9334B489BFBD9A1A78794D
8922545647A9F325D63490B48D62A615515DF167172B783C8384CA6A3952E316
B87F6BBB6076EAC089BE85F66945363B892044D03A4926182112815E1DC8B939
DF5E30FFF93E8A3266FD81788A93B81602C17C88B7CBC9C63836074D71ABE104
F7A7352065273A40F5FD998383DA128CE4CD7EAD19607F3025B1B45BD9111C84
E19772F69C5BBD70704EEA58A1D5644FAF2129BD1677E0A8E40ECC70E62EB45C
8B50D2D4AE909EB171578E2E27DB918DC5323AAE9AF5FA50D46CF255BA95AC62
076581E91A916DEE4E183861C3E98B158E6409D495160FFD0A82B203946FADD9
00C0EE336408D837D8545145D79D61030025A30D86BB4EBBF5EE24F42ED89228
5FDE8070BDB54B4B6D7BC6A709962AF416076D026F238E2605E2E127CD0132DE
21A1A492B356DDD9FC768A0C0D6F3D1E9CE7657696A6F1334D9C234D4ABE7125
E572F29E3B02E136211D69957637B3BEC16B8F51B9730A311B2CE219867612B2
615B47C53C15156272E95206F5184763A3CE40F2FC23D1EE94FE4E7CA5F34822
7386E30B8F3DE28DCA7B27EA859C18AAAAFDD2A5DB907622A13CFD8BA22903F3
4AC8B55B1D0672DF845CDA5A691DFC7C9AFB22ECC5CF0526256FEA9002BFB7A2
D91474E6CF5880031157317B90E482667AEB49B7550F8CDB5589762FEA6EC5AC
35FAB750FCF8B3B52FD61B01222DB297B0587604C33FCF3E7C4CF048434D5409
ED00A3A59BDFD86229FE0178B75EB8E429D187C061BFA77F6BC64BE34481DF7A
4C313C76B0217D318F2B22F4F0A6DE4B0767F722D7DA1BFDB662A11BE0B86126
791BA1B846C719572CC67E455A027CC80CB954AD7EB87B54F51104C857BD62A2
2BA5E16753AA0BFFC0750562717C4CE6AF29DEFC44D8F94A74C02C2737B99535
EFF8AA409D60461D179570CDFA341B0A9D1F446203226C2807F4C050706FBB3C
1D42227BC502DB14F981442FB2CF9D840E1A87D4BBBAC70C6619A68CCD9EF9B0
DE94E51C95513BB9E6DE01381870020970CF572647EB32B819C01BAA39D8FB9A
A4F720C089BFAC8BA6B1B2E95D1B2573510C3897A22FE9C3AC074710CBA59276
7BDF3696F2A50070FA5730D5B2EFD40094174FB7EC731A0CCA71EA94EDD7C90B
49A3D27E0A4BCC19789FE50A780791832B3E2FE7D8AF762CC2D8CC650D407630
890F2622BBC83E1395933343C2D9D9EBD213B6EFE9620ED30F18601D8800B6F2
B709253D95BD8C91F77AC1A68D21B28DF7D216CB6D6EC394DF9CCF443F7BCE43
25378E1A3BC6CC17FBC5A30795C0C95AFA4E2F37730F7D6AF02C3E9F5D41E891
D5AA8889187FCB0285B821A96C1E9CC2E5A5F2BF7E453617BAF78BB830F624C6
6FBDBFAEC95CB4886617360687559F3794B2BE051E74BD30FCE3BC57C78285E2
657E1D453297621B418C8F33C06EF4C0278653D7678671656488A14BC1F2F9AF
86CBAB17E9883568A9C3CEF34FE6DD3672285145587E17C087C49A064AF4FA14
60C75071CEBD7DADCE27D4D3AEBF9D30E7E1F6C38F06278981A38FBEF0F9F0F8
1E35E0D71B1A1C99068504D8B0E708F41FFA651D3E6219D1CBEFDC23F4969449
4312D4E4B7C720D372486B50C51D2A952F1AD543089B6F21F255B2EBE0B2348E
69BE58C9BA5BC3AEAD8D3D6DEAB9509727214AB8F1D705BD31F6425843D87242
526FD62498E68D0D95F77FF09BE0006B84DF301892D20B4CD842C977E1377F9B
A6BAE148AAE630083F8080F3DBDBC4A0F6D6DD9415239681DE7DF6107C037B59
A0EFDCF498E7BA5950C4E37586275DF4E3669211934A885641198ACABAC52A61
B783419BDCA3DCAA750B7F3F8AC06D01A92FAD3D8AF3D7749AA21380468D5F42
37620EA585A50BA7D8538D56F3958044A88E125746D6DC26357DB9366E8DFD65
FF058DF31B0A86EA1AC354813B8C2A6DA09A34EF53BCB6C61D6C5566A7A24593
DAF30B28545866C9DBAC2FBD1976A774E7846403429860903EA8242D1E316238
DA319AA68FDA92AC85249F4FB1E6CF57C4981F36B540D9D368FBC4F521B6F319
CA8631C2C9A1DCBA19113AAA2C7E858D633880626284BAAEF98E3BFFD6751B0D
9DBEC3CD64CFD3432C1AD5DEF4B93436B4EE2ECB2040BF269F6A693F921672B8
F57D842BE3C9E6B66E09BDED41B6435173149E03E13B567137BD92B68DC2BB0E
A6C8FD8314D8D643FB6D93590B244A73567733FEEA54EEF70FB78AD865A1B025
BD55A305158ECB10410D106C46BACF4B078057441E5D662E6160C4937D249343
0BC28C466B7E630DCD8C3E70C7079E7D98DDE2CAF564AC43BACCE02F88839BC2
884EF4B2D2C82780FA08C674ECA6F7F7A3D4C109EB5EF9629B43E357D5573B60
6A064D071B410B819615D2D848CF290A1E552AAD871FF15EFAE1E5914FD0C62A
7D95E110FFB5264FC413890ABB1F5908275642A48EC2C2F6A93026A59EB692BB
9480110529F4E64224A3FCE2D14A4B94A0B798E95D534801A44B2F3B3C7E58C9
45D37D177AA51C07ACA39592CD22DB5062AA014972F31341B8CDA50C1760E0E0
F85427E481B98C9052AD98AC8CB5A7AEF74458BF548A76EEA0AE4A84B43554BD
A965778A5C5A83198744E0FF9B13B971E8B2AA0C2DCD7593FB67D84F9470742C
965F0BE4A1B079F2D504CE579970B3B133FA46E6CE4A9BE79C64C46FFAD6229C
62D12B29547AFCCA560026E09E2FA43AA3DD383549E63B0CC70BF09B35CC0E7F
CBB37470AC1CFA76C7BDC9E4AB4541C72A627A126EE2171C63F43229A5B25414
E93C275DB0E6C57E9DBB051C44792336598260133E2278A2DC9662AAB859D54D
7F3F2F56FB5B093E0C62092B48EE964B4E914B84C981AEC96F619F056A005773
AA7A6E2BF5C0597C2B2EDD33B871847A384F6954E37029D6A6F2430C39CE343E
4357A2CB421F6606D022CA3BB8392A02446DA18AE75DEB9E90D2C25709C34073
0B825F2E4417BA9D8FB898727E4CE9CE1CD76A92367B5A8519CA36E2608FE06A
085E2094455CAC80DE9AFC9CF9B6805E64CB4452B859BE13C362C390F18486DA
C779AB9CD7325BCD71F90DB68B3BE561FCC3D420043E2E8BF24B31791FB2A11A
66505B18209A982A351BA31AD14F8F6AF747B9E67A57E1080CA27F3B6BD8AC17
8C41CCB32F6979FE8EE17CDB3EBDB1616676D69C643A26B26CB417D3FF7619A7
16A2F4E70FE3B84564D6B69F47A45A1E0A9763DE31D41C8E8A9B13B249FFD497
DE57603788A29071F16E74521A06D4774DDB2B3AE9AB5E623CD04BBC772D63FA
A437A820D49264224E5B0ED8EFB297BFE479FC872F7D3BA64309F59FC38D8AAC
72E60C8CAFC6F64E560B05602A859358ACAFA7DCE1A0E1B460F430322483394A
9ABBB0F50D238908D65C0719E5CCC31A37C8CC98FE2D8CA2632F133AFD77D267
42C3E87423A5B38C71B2829BFE621B33E6AD8BB74C7B7D1C434090FB20875853
C9F2DF5923CF65089B62A1A759993143668EED80E9181008184680A1EA51AC71
1BC519F6285A8717E82DBBAC20774A17A82B45C294444369B0114578E62315BD
DA123969DB2C1B7DCA86F3CD858ACA463C08DE78E5046020657DF2D2704D342F
2091F5C06950F8F00585AE7D819884BF984B0F72DB19D055AB30CE2C50663E1D
9624639741F571F4179E2FE244472BCA7FE43BB1AF969104684C5AC36D9B70E1
D8502A36E0C16B9579A5FA5C1139982355F35C2D7F457D55C4DCEAAA3B402EB3
876538CFAA9971AF0167259B4A76CAD1C48EC912E3D57E9D4ADF0E07FB1D05F0
1B7E07162C9BD345EC5440F677A21FCB51AA43C60BF323656376E1C3CF21B565
8AF57553D949903C2C4CA46648ADCDCE0E74BEDF310AE2C49414010778F92FC9
7DAE4BAE0C759145B79902D2AE7130DB6ABAF481E08D953BA002D92AD4E1191C
A6388E6062D00A05FB864217FC3D4D6562396DE440A15553DB004E9984F8A836
780FCFCEDEF996E24F0B2F25AE8DB7A3B7187D1CAE89989A96ED85B0A6414D0C
CC388D46B7393C31DC445C1A4DBE396C065DF3883388922FB7E8372E8B7ABABB
C021954D57D93378644C4E59756289A261378EC58A37AF55ABABA43F0A17CCCC
214338490F9C1AA7C62DB1C704931A9F0B4C8423A449E0EB63A071E169F3E034
60CD60218442030B84B0C9C4640BEFF750C81CCE34DC764086646C24A4DC3A1B
8687BDE5A9FE8530EF2B5D6A6A494F1B19585AF53EBBF510C525504CB1FE320F
1ACD28728FAD9A721CCFB5EF05EA97F9B006D5A4CFF8A741CC2588BA2391B53E
66F5BFFC8E4A7F125304118AF9EAA6B06861E3B0A23ACC9D5F1B6834E43046BA
0ADA9FE79E5CB0E29E928EA33BECB27E52BFED57CF3DE88F473DB730F1E407A0
AF99D8C1D146419ED5DD016D47DD7E1B2EB6FDAE742A6C7A48662D61F1CD44CD
1F3FF524EE9E496B4506919BB97BA8EB67F898519CB12CC75D3EF010C2CD0F06
EDA66C354A917B753B07AD920B79A63C488FF0A5DC30D30A675D513B97A22A8B
486DB5086E19917F7580FB4FA41A85707759E5519A516A1ED61EBBAF085E36D7
0E18D01E3566400B861770206683262180011A3321C6A67BE883B003A86C9BC5
861C52A394E3E1DB71848A2FD14DB9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (coursclaire2020.dvi)
@start /Fa 190[72 25[62 5[60 33[{}3 83.022 /CMMIB10 rf
/Fb 140[46 3[59 11[52 55[91 1[46 46 40[{}6 119.552 /CMR12
rf /Fc 200[0 21[120 33[{}2 119.552 /CMSY10 rf /Fd 139[42
50[88 25[77 5[73 33[{}4 119.552 /CMMI12 rf /Fe 54[50
83[43 30 2[43 1[42 43 4[20 7[40 97[{ T1Encoding ReEncodeFont }8
83.022 /SFSS1000 rf /Ff 135[50 120[{}1 83.022 /CMBX10
rf /Fg 255[77{}1 99.6264 /CMSY10 rf /Fh 205[49 1[49 4[76
43[{}3 99.6264 /CMR12 rf /Fi 135[55 94[55 25[{}2 99.6264
/CMMI12 rf /Fj 205[33 50[{}1 58.1154 /CMR7 rf /Fk 201[65
54[{}1 83.022 /MSAM10 rf /Fl 142[83 7[39 39 41[74 1[74
1[74 1[74 15[67 13[62 4[44 44 61 61 50 50 16[{}15 83.022
/CMEX10 rf /Fm 160[66 95[{}1 58.1154 /CMMI7 rf /Fn 138[52
32 1[42 2[49 61[49 49[{ T1Encoding ReEncodeFont }5 83.022
/SFBI1000 rf /Fo 201[35 35 35 35 35 35 49[{}6 66.4176
/CMR8 rf /Fp 207[18 48[{}1 49.8132 /CMSY6 rf /Fq 181[42
34 47[44 25[{}3 74.7198 /CMMI9 rf /Fr 21[34 116[40 28
29 26 1[40 38 40 61 18 2[18 1[38 1[34 40 2[37 20[42 2[21
26[21 1[21 4[21 39[{ T1Encoding ReEncodeFont }20 74.7198
/SFSS0900 rf /Fs 196[21 4[38 38 38 38 38 38 38 6[30 30
40[{}10 74.7198 /CMR9 rf /Ft 240[38 14[60{}2 74.7198
/CMSY9 rf /Fu 135[47 7[49 2[74 25 6[41 31[58 19[44 49[{
 T1Encoding ReEncodeFont }7 74.7198 /SFBX0900 rf /Fv
207[19 33[34 14[{}2 58.1154 /CMSY7 rf /Fw 143[59 78[71
32[55{}3 66.4176 /CMSY8 rf /Fx 149[29 24 26[56 68 48
60 39 31 58 55 45 52 58 50 53 53 39[41 25[{}17 66.4176
/CMMI8 rf /Fy 141[27 13[39 2[35 17[55 29[35 49[{
 T1Encoding ReEncodeFont }5 66.4176 /SFRM0800 rf /Fz
198[38 38 38 38 38 38 38 38 38 38 2[26 45[{ T1Encoding ReEncodeFont }11
74.7198 /SFRM0900 rf /FA 163[194 1[55 7[60 82[{}3 83.022
/MSBM10 rf /FB 255[112{}1 143.462 /CMSY10 rf /FC 212[103
43[{}1 143.462 /CMR17 rf /FD 22[44 8[46 102[50 50 1[50
53 37 38 39 50 53 48 53 80 27 2[27 53 48 29 44 53 42
53 46 12[66 53 72 4[91 57 8[69 8[27 1[48 48 48 48 48
48 48 48 2[27 1[27 2[37 37 27 39[{ T1Encoding ReEncodeFont }44
83.022 /SFBX1000 rf /FE 143[69 43[64 44 10[46 0 4[55
16[83 7[65 4[65 2[65 1[42 12[65 1[65{}13 83.022 /CMSY10
rf /FF 129[42 2[27 2[47 3[30 39 4[50 2[43 34 29 2[41
4[44 12[49 3[53 63 67 81 2[46 36 5[59 63 62 3[42 65 23
23 18[54 5[52 7[47 13[53 11[{}29 83.022 /CMMI10 rf /FG
140[33 3[42 46 4[23 5[37 5[23 1[23 29[65 1[23 23 42 42
42 42 42 42 42 42 42 42 4[65 1[32 32 40[{}23 83.022 /CMR10
rf /FH 22[51 31[74 82[59 62 44 44 46 59 62 56 62 93 31
2[31 62 56 34 51 62 50 62 54 10[85 3[84 1[77 2[106 67
6[74 86 81 1[85 11[56 56 56 56 56 9[31 10[62 28[{
 T1Encoding ReEncodeFont }38 99.6264 /SFBX1200 rf /FI
3[45 13[25 4[38 38 38 6[42 102[40 39 1[38 45 28 34 35
38 42 42 47 68 21 1[25 25 42 38 25 38 42 38 38 42 8[62
1[62 3[61 1[56 64 62 74 52 1[44 32 62 1[54 56 63 59 1[62
1[42 3[25 1[42 1[42 42 42 42 42 42 42 42 1[25 30 25 2[34
34 25 39[{ T1Encoding ReEncodeFont }62 83.022 /SFTI1000
rf /FJ 22[60 60 114[73 51 52 53 69 73 66 73 110 37 2[37
73 66 1[60 73 58 73 66 10[99 101 91 1[98 8[48 2[83 86
1[95 1[99 25[37 39[{ T1Encoding ReEncodeFont }30 119.552
/SFBX1440 rf /FK 54[66 116[70 1[72 2[76 73 89 3[35 1[77
1[66 69[{ T1Encoding ReEncodeFont }9 99.6264 /SFRM1200
rf /FL 6[46 9[28 23 3[37 37 37 7[42 22[56 78[37 44 44
1[44 46 32 33 33 44 46 42 46 69 23 2[23 46 42 25 37 46
37 46 42 11[62 60 46 61 65 56 65 62 76 52 1[43 30 62
65 1[56 63 60 1[62 3[65 1[23 23 42 42 42 42 42 42 42
42 42 42 42 23 28 23 65 1[32 32 23 8[69 1[46 48 6[46
46 19[{ T1Encoding ReEncodeFont }75 83.022 /SFRM1000
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray -293 -412 a FL(1STI2D)1342
b(COURS)28 b(TRIGONOMETRIE)1279 b(2019/2020)p -293 -379
4347 4 v Black 0 TeXcolorgray -293 -175 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -293 -175 a
-293 -175 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -293 -175 a -293 -175 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -293 -175 a -293
-175 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -293 -175 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1425 349 a FK(TRIGONOM\311TRIE)p 0 TeXcolorgray 1364
239 1000 4 v 1364 376 4 139 v 2360 376 V 1364 378 1000
4 v 2362 411 35 142 v 1397 411 1000 35 v -293 685 a FJ(T)-11
b(able)43 b(des)h(mati\350res)-293 960 y(I)132 b(Un)44
b(p)t(eu)f(d'histoire)-168 1142 y FI(Il)23 b(faut)g(r)l(emonter)f
(jusqu'aux)h(b)l(abyloniens,)h(2000)h(ans)e(avant)g(notr)l(e)f(\350r)l
(e,)i(p)l(our)f(tr)l(ouver)f(les)i(pr)l(emi\350r)l(es)f(tr)l(ac)l(es)g
(de)g(tables)h(de)f(donn\351)l(es)-293 1241 y(astr)l(onomiques.)-293
1341 y(Car)41 b(\340)f(la)g(b)l(ase,)h(la)g(trigonom\351trie)f(est)g
(une)f(g\351)l(om\351trie)i(appliqu\351)l(e)g(\340)g(l'\351tude)f(du)g
(monde,)h(de)f(l'univers)g(et)g(est)f(indisso)l(ciable)k(de)-293
1440 y(l'astr)l(onomie.)25 b(On)d(attribue)h(\340)g(Hipp)l(ar)l(que)h
(de)g(Nic)l(\351)l(e)f(\(-190)16 b(;)23 b(-120\))h(les)f(pr)l(emi\350r)
l(es)h(tables)f(trigonom\351triques.)i(El)t(les)f(font)f(c)l(orr)l(esp)
l(ondr)l(e)-293 1540 y(l'angle)k(au)f(c)l(entr)l(e)f(et)g(la)h
(longueur)f(de)i(la)f(c)l(or)l(de)g(inter)l(c)l(ept\351)l(e)g(dans)g
(le)g(c)l(er)l(cle.)g(L)l(e)g(gr)l(e)l(c)g(Claude)g(Ptol\351m\351)l(e)h
(\(90)15 b(?)h(;)26 b(160)16 b(?\))26 b(p)l(oursuit)f(dans)-293
1640 y(l'A)n(lmageste)31 b(les)f(tr)l(avaux)f(d'Hipp)l(ar)l(que)i(ave)l
(c)g(une)e(meil)t(leur)l(e)h(pr)l(\351)l(cision)h(et)f(intr)l(o)l(duit)
f(les)h(pr)l(emi\350r)l(es)g(formules)h(de)f(trigonom\351trie.)-293
1739 y(Plus)39 b(tar)l(d,)g(l'astr)l(onome)h(et)f(math\351maticien)h(R)
l(e)l(giomontanus)e(\(1436)16 b(;)40 b(1476\),)h(de)e(son)g(vr)l(ai)g
(nom)g(Johann)g(M\374l)t(ler)h(d\351velopp)l(e)h(la)-293
1839 y(trigonom\351trie)27 b(c)l(omme)e(une)g(br)l(anche)h(ind\351p)l
(endante)h(des)f(math\351matiques.)g(Il)g(ser)l(ait)g(\340)g(l'origine)
h(de)f(l'usage)h(syst\351matique)e(du)h(terme)-293 1939
y(sinus.)-293 2038 y(A)n(u)33 b(XVIe)h(si\350)l(cle,)i(le)e(fr)l
(an\347ais)i(F)-6 b(r)l(an\347ois)35 b(Vi\350te)f(\(1540)17
b(;)34 b(1607\),)j(c)l(onseil)t(ler)e(d'Henri)g(IV,)g(fer)l(a)g
(\351voluer)g(la)g(trigonom\351trie)g(p)l(our)f(lui)-293
2138 y(donner)c(le)g(c)l(ar)l(act\350r)l(e)g(qu'on)g(lui)g(c)l
(onna\356t)g(aujour)l(d'hui.)-293 2237 y(De)38 b(nos)g(jours,)h(la)g
(trigonom\351trie)g(tr)l(ouve)e(des)i(applic)l(ations)h(tr)l(\350s)e
(diverses,)i(p)l(articuli\350r)l(ement)e(dans)g(les)h(scienc)l(es)f
(physiques.)i(L)l(a)-293 2337 y(pr)l(op)l(o)l(gation)31
b(des)g(ondes,)f(p)l(ar)h(exemple,)f(est)g(tr)l(anscrite)f(p)l(ar)i
(des)f(fonctions)g(trigonom\351triques)h(.)-293 2612
y FJ(I)t(I)132 b(Enroulemen)l(t)43 b(de)h(la)f(droite)h(des)f(r\351els)
g(sur)h(le)f(cercle)i(trigonom\351trique)-293 2810 y
FH(1)112 b(Le)38 b(cercle)f(trigonom\351trique)p 0 TeXcolorgray
-293 3738 a

 -293 3738 a -293 3738 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 99.60344 lineto

 521.58136 99.60344 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 99.60344 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 96.37009 lineto

 0.3985 97.93575 1.6677 99.20494 3.23335 99.20494 curveto

 518.348 99.20494 lineto

 519.91365 99.20494 521.18286 97.93575 521.18286 96.37009 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 96.37009 lineto

 0.3985 97.93575 1.6677 99.20494 3.23335 99.20494 curveto

 518.348 99.20494 lineto

 519.91365 99.20494 521.18286 97.93575 521.18286 96.37009 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 96.37009 lineto

 0.3985 97.93575 1.6677 99.20494 3.23335 99.20494 curveto

 518.348 99.20494 lineto

 519.91365 99.20494 521.18286 97.93575 521.18286 96.37009 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0
TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 3738 a
 0 setgray
 -293 3738 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -453 x FL(Le)28
b(plan)f(\351tan)n(t)g(rapp)r(ort\351)g(\340)g(un)h(rep)r(\350re)f
(orthonorm\351)e FG(\()p FF(O)r FG(;)1584 3231 y FE(\000)-64
b(!)1612 3285 y FF(i)27 b(;)1705 3231 y FE(\000)-65 b(!)1727
3285 y FF(j)27 b FG(\))p FL(,)h FD(le)j(cercle)h(trigonom\351trique)26
b FL(est)i(le)g(cercle)e FF(C)34 b FL(:)p 0 TeXcolorgray
-169 3451 a FE(\017)p 0 TeXcolorgray 42 w FL(de)27 b(cen)n(tre)g
FF(O)k FL(et)c(de)h FD(ra)m(y)m(on)33 b FG(1)p 0 TeXcolorgray
-169 3618 a FE(\017)p 0 TeXcolorgray 42 w FL(sur)j(lequel)h(on)g(c)n
(hoisit)f(un)h(sens)g(de)g(parcours)e(app)r(el\351)i
FD(sens)42 b(direct)h(ou)f(sens)g(p)s(ositif)f(\(le)h(sens)g(con)m
(traire)h(des)-85 3717 y(aiguilles)29 b(d'une)i(mon)m(tre\))p
FL(.)p 0 TeXcolorgray -293 3738 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 80.56844 ] concat

 pgfs


 -293 3738 a
 0 setgray
 -293 3738 a
0 TeXcolorgray 0 TeXcolorgray 77 x @beginspecial 0 @llx
-1 @lly 18 @urx 24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 3738 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 3738 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 35.29974 ] concat

 pgfs


 -293 3738 a
 0 setgray
 -293 3738 a
0 TeXcolorgray -222 3986 a

 -222 3986 a -222 3986 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 64.52225 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 3738 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1880 4582 a
tx@Dict begin { -8.53548 -8.53548 } PutCoor PutBegin  end
 1880 4582 a
1847 4610 a FF(O)1880 4582 y
tx@Dict begin  PutEnd  end
 1880 4582 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28642 0.0 -68.28642 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 7.0 0.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.4
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.9055
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 7.0 0.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.4 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1880 4582 a
tx@Dict begin { 28.45274 -8.53548 } PutCoor PutBegin  end
 1880 4582 a 1853 4602 a FF(~)1866 4621 y(i)1880
4582 y
tx@Dict begin  PutEnd  end
 1880 4582 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 68.28642 0.0 -68.28642   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 7.0 0.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.4
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 56.9055
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 7.0 0.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.4 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1880 4582 a
tx@Dict begin { -8.53548 28.45274 } PutCoor PutBegin  end
 1880
4582 a 1853 4594 a FF(~)1861 4613 y(j)1880 4582 y
tx@Dict begin  PutEnd  end
 1880
4582 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.0 0.0 2 copy moveto 56.9055
0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 0.8 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0 0.0 /y
ED /x ED /r 73.97733 def /c 57.2957 r Div def /angleA 20. 0.0 c mul
2 div add def /angleB 65. 0.0 c mul 2 div sub def /angleAtoB angleB
angleA gt { true }{ false } ifelse def x y r angleA angleB { ArrowB
} r 0 gt { { sub } } { { add } } ifelse ArcArrow dup angleA gt angleAtoB
xor { pop angleA } if arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1880 4582 a
tx@Dict begin { 62.59639 56.9055 } PutCoor PutBegin  end
 1880 4582 a 1828
4618 a FC(+)1880 4582 y
tx@Dict begin  PutEnd  end
 1880 4582 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 7.0 0. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.  1.  scale  false 0.4
1.4 7.0 0. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0
h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub moveto
  EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def  0.0
0.0 /y ED /x ED /r 73.97733 def /c 57.2957 r Div def /angleA -65. 0.0
c mul 2 div add def /angleB -20. 0.0 c mul 2 div sub def /angleAtoB
angleB angleA gt { true }{ false } ifelse def x y r angleA { ArrowA
CP } r 0 gt { { add } } { { sub } } ifelse ArcArrow angleB arc  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 1880 4582 a
tx@Dict begin { 62.59639 -56.9055 } PutCoor PutBegin  end
 1880 4582 a 1824 4618 a FB(\000)1880
4582 y
tx@Dict begin  PutEnd  end
 1880 4582 a -293 5429 a FH(2)112 b(Enroulemen)m(t)38
b(de)g(la)g(droite)f(r\351elle)-168 5582 y FL(\311tan)n(t)25
b(donn\351)f(le)h(cercle)f(trigonom\351trique)f FE(C)29
b FL(de)c(cen)n(tre)f(O,)h(dans)f(le)h(rep)r(\350re)f(orthonorm\351)f
(direct)h(\(O,I,)h(J\),)g(on)f(consid\350re)g(la)g(droite)-293
5681 y FG(\()p FF(I)7 b(A)p FG(\))29 b FL(tangen)n(te)e(\340)g
FE(C)32 b FL(passan)n(t)26 b(par)h(I,)h(A)g(\351tan)n(t)f(le)h(p)r(oin)
n(t)f(de)h(co)r(ordonn\351es)e(A\(1)14 b(;1\).)-293 5781
y(Sur)34 b(cette)g(droite,)f(on)g(consid\350re)f(le)i(rep)r(\350re)f
(\(I,A\),)i(ce)e(qui)h(p)r(ermet)g(d'\351tablir)f(une)h(graduation.)e
(A)i(c)n(haque)f(p)r(oin)n(t)g(de)h(cette)g(droite)-293
5881 y(corresp)r(ond)23 b(un)i(nom)n(bre)f(r\351el)g(et)h(\340)g(c)n
(haque)f(nom)n(bre)g(r\351el)g(corresp)r(ond)f(un)i(p)r(oin)n(t)g(de)g
(la)f(droite)g(\(0)h(corresp)r(ond)e(au)i(p)r(oin)n(t)g(I,)g(1)f(au)g
(p)r(oin)n(t)-293 5980 y(A\).)-293 6080 y(La)j(droite)g(\(IA\))i
(repr\351sen)n(te)d(donc)h(l'ensem)n(ble)g FA(R)h FL(des)f(nom)n(bres)g
(r\351els.)p 0 TeXcolorgray 3964 6381 a Fz(-1-)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
-92 a(Ensuite,)34 b(on)f(\023)h(enroule)f(\024)g(cette)h(droite)f
(r\351elle)f(\(IA\))j(sur)d(le)i(cercle)e(trigonom\351trique)g(soit)h
(dans)g(le)h(sens)e(direct)i(soit)f(dans)g(le)g(sens)-293
8 y(indirect.)28 b(\(v)n(oir)e(graphiques)g(ci-dessous\).)p
0 TeXcolorgray 0 TeXcolorgray 652 1355 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 59.7505  0 -59.7505  0 ArrowA CP 4 2
roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -59.7505
 59.7505  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-59.7505  def /maxTickline 59.7505  def /dT 2797019 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 42.67912  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 59.7505
0.0 -59.7505   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 59.7505
0.0 -59.7505 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 59.7505  0 -59.7505  ArrowA CP 4 2
roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -59.7505
 59.7505  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-59.7505  def /maxTickline 59.7505  def /dT 2797019 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 42.67912  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 59.7505
0.0 -59.7505   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 59.7505
0.0 -59.7505 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 42.67912  0 0.0
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa 0.0  42.67912  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 42.67912  def /dT 2797019
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { xStart } def /MaxValue
{ xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add {
/cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 42.67912 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
42.67912 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 42.67912  0 0.0
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa 0.0  42.67912  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 42.67912  def /dT 2797019
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { yStart } def /MaxValue
{ yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 42.67912  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 42.67912 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
42.67912 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 652
1355 a 652 1355 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 652 1355 a 568 1430 a Fy(O)652 1355
y
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { 42.67912 0.0 } PutCoor PutBegin  end
 652 1355
a 705 1430 a Fx(I)652 1355 y
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 652
1355 a 652 1355 a
tx@Dict begin { 0.0 42.67912 } PutCoor PutBegin  end
 652 1355 a 578 1326 a Fx(J)652 1355
y
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { 21.33955 0.0 } PutCoor PutBegin  end
 652 1355
a 1 0 0 TeXcolorrgb 617 1422 a Fw(\000)-55 b(!)640 1466
y Fx(i)p 0 TeXcolorgray 652 1355 a
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355
a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { 0.0 21.33955 } PutCoor PutBegin  end
 652 1355 a 1 0 0 TeXcolorrgb
540 1339 a Fw(\000)g(!)559 1383 y Fx(j)p 0 TeXcolorgray
652 1355 a
tx@Dict begin  PutEnd  end
 652 1355 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
42.67912 119.50166 42.67912 -64.01868   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.0 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 42.67912 93.04016 42.67912
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add
dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.5  1.5  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.5  1.5  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-24.4303 34.99458 -17.07138 76.82254 17.07138 93.04016 42.67912 93.04016
  false /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
BezierNArray n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub
3 idiv { 6 2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB
/y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy
y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3
mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi
}{ 1. } ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def
/t GetArrowPos def /t0 t 0.95 mul def getValues ArrowInside pop pop
pop pop } repeat x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1.0 SLW
0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def  0.0 0.0 /y ED /x
ED /r 42.67912 def /c 57.2957 r Div def /angleA 124.9 0.0 c mul 2 div
add def /angleB 360. 0.0 c mul 2 div sub def /angleAtoB angleB angleA
gt { true }{ false } ifelse def x y r angleA angleB arc  gsave 1.0
SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r
42.67912 def /c 57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def
/angleB 124.92 0.0 c mul 2 div sub def /angleAtoB angleB angleA gt
{ true }{ false } ifelse def x y r angleA angleB arc  gsave 1.5 SLW
0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.6 0 0.48  setrgbcolor    /DS
2.0 2. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0
0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore }
bind def   1. .setopacityalpha  -24.4303 34.99458 Dot end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 46.09352 42.67912 39.26471 42.67912
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { 42.67912 119.50166 } PutCoor PutBegin  end
 652 1355 a 0.1 0.05 0.5
TeXcolorrgb 681 1441 a FE(D)p 0 TeXcolorgray 652 1355
a
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { 42.67912 42.67912 } PutCoor PutBegin  end
 652 1355
a 0.1 0.05 0.5 TeXcolorrgb 693 1383 a FF(A)p 0 TeXcolorgray
652 1355 a
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 652 1355 a 652 1355
a
tx@Dict begin { 42.67912 42.67912 } PutCoor PutBegin  end
 652 1355 a 575 1376 a Fy(1)652 1355 y
tx@Dict begin  PutEnd  end
 652 1355 a 652
1355 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { 42.67912 93.04016 } PutCoor PutBegin  end
 652 1355 a 693 1373 a FF(x)652
1355 y
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { -24.32741 34.9972 } PutCoor PutBegin  end
 652
1355 a 533 1326 a FF(M)652 1355 y
tx@Dict begin  PutEnd  end
 652 1355 a 652 1355
a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 652 1355 a 652 1355 a
tx@Dict begin { -32.00934 -32.00934 } PutCoor PutBegin  end
 652 1355 a 0.1 0.05 0.5 TeXcolorrgb
574 1441 a FE(C)p 0 TeXcolorgray 652 1355 a
tx@Dict begin  PutEnd  end
 652 1355
a 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 159.33472  0 -99.5842  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -99.5842
 159.33472  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-119.50104  def /maxTickline 139.41788  def /dT 2610540 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 19.91684  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 19.91684
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 139.41788
0.0 -119.50104   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 159.33472
0.0 -99.5842 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 139.41788  0 -119.50104  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -119.50104
 139.41788  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-99.5842  def /maxTickline 159.33472  def /dT 2610540 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 19.91684  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 19.91684  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 139.41788
0.0 -119.50104   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 159.33472
0.0 -99.5842 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor   0.0 0.0 2 copy moveto
39.83368 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
2451 1194 a
tx@Dict begin { -5.9751 -5.9751 } PutCoor PutBegin  end
 2451 1194 a 1 0 0 TeXcolorrgb 2418 1223 a
FF(O)p 0 TeXcolorgray 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.39432 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 39.83368 -119.50104 39.83368
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add
dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.39432 SLW 0 1 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.39432 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 39.83368 119.50104 39.83368
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add
dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.39432 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   3.0
0 0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def   /t 0 def /t1 6.8 def /dt
t1 t sub 199 div def /F@pstplot { 2.72 t 5 div exp t 57.3 mul cos mul
2 mul 2.72 t 5 div exp t 57.3 mul sin mul 2 mul } def /xy { 2.72 t
5 div exp t 57.3 mul cos mul 2 mul 2.72 t 5 div exp t 57.3 mul sin
mul 2 mul 19.91684 mul exch 19.91684 mul exch } def  /ps@Exit false
def xy moveto  199 1 sub { /t t dt add def xy  dup 1.e30 19.91684 mul
gt { moveto } { dup -1.e30 19.91684 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 19.91684 mul gt { moveto } { dup -1.e30 19.91684 mul lt {
moveto } { L } ifelse } ifelse  } if     gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def   /t 6.8 def /t1 7.2 def
/dt t1 t sub 199 div def /F@pstplot { 2.72 t 5 div exp t 57.3 mul cos
mul 2 mul 2.72 t 5 div exp t 57.3 mul sin mul 2 mul } def /xy { 2.72
t 5 div exp t 57.3 mul cos mul 2 mul 2.72 t 5 div exp t 57.3 mul sin
mul 2 mul 19.91684 mul exch 19.91684 mul exch } def  /ps@Exit false
def xy moveto  199 1 sub { /t t dt add def xy  dup 1.e30 19.91684 mul
gt { moveto } { dup -1.e30 19.91684 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 19.91684 mul gt { moveto } { dup -1.e30 19.91684 mul lt {
moveto } { L } ifelse } ifelse  } if     gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add
 DashLine  grestore end
 
@endspecial 2451 1194 a
tx@Dict begin  tx@NodeDict begin {29.87526 37.24438 } false /N@S1 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S1 known
{ /N@S1 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S1 known { 9.99756
45. /N@S1 load 0 GetEdge 0.0 45. AddOffset /N@S1 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221 a FG(1)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-4.58078 55.16972 } false /N@S2 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S2 known
{ /N@S2 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S2 known { 9.99756
90. /N@S2 load 0 GetEdge 0.0 90. AddOffset /N@S2 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221 a FG(2)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-42.82108 46.60533 } false /N@S3
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S3 known
{ /N@S3 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S3 known { 9.99756
90. /N@S3 load 0 GetEdge 0.0 90. AddOffset /N@S3 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221 a FG(3)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-47.40216 43.41856 } false /N@Sp
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@Sp known
{ /N@Sp load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@Sp known { 9.99756
130. /N@Sp load 0 GetEdge 0.0 130. AddOffset /N@Sp load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2426 1212 a FF(\031)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-68.91238 17.32755 } false /N@S4
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S4 known
{ /N@S4 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S4 known { 9.99756
165. /N@S4 load 0 GetEdge 0.0 165. AddOffset /N@S4 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221 a FG(4)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-75.8831 -21.51021 } false /N@S5
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S5 known
{ /N@S5 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S5 known { 9.99756
190. /N@S5 load 0 GetEdge 0.0 190. AddOffset /N@S5 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221 a FG(5)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-63.53476 -58.95396 } false /N@S6
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S6 known
{ /N@S6 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S6 known { 9.99756
200. /N@S6 load 0 GetEdge 0.0 200. AddOffset /N@S6 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221 a FG(6)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-57.16122 -68.11555 } false /N@S2p
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S2p known
{ /N@S2p load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S2p known { 9.99756
230. /N@S2p load 0 GetEdge 0.0 230. AddOffset /N@S2p load GetCenter
3 -1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194
a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2405 1221 a FG(2)p FF(\031)2451 1194 y
tx@Dict begin RotEnd  end

2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-26.48943 -93.0116 } false /N@S 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451
1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@S known
{ /N@S load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial 2451 1194
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@S known { 9.99756
280. /N@S load 0 GetEdge 0.0 280. AddOffset /N@S load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 2451
1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2334 1218 a FG(2)p FF(\031)21
b FG(+)d(1)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-36.04942 -87.4349 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {0.59747 -102.37254 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {40.03273 -102.5716 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {77.47649 -89.02829 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {108.14828 -64.13223 } false /N@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {130.05693 -30.87115 } false /N@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {141.21031 7.17006 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {141.60873 46.80469 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {131.65031 85.4431 } false /N@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  tx@NodeDict begin {21.51021 33.46014 } false /N@C1 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C1 known
{ /N@C1 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C1 known { 7.96661
225. /N@C1 load 0 GetEdge 0.0 225. AddOffset /N@C1 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221
a FG(1)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-16.531 36.24878 } false /N@C2 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C2 known
{ /N@C2 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C2 known { 7.96661
280. /N@C2 load 0 GetEdge 0.0 280. AddOffset /N@C2 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221
a FG(2)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-39.43526 5.57669 } false /N@C3 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C3 known
{ /N@C3 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C3 known { 7.96661
0. /N@C3 load 0 GetEdge 0.0 0. AddOffset /N@C3 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221
a FG(3)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-39.83368 0.0 } false /N@Cp 10 {InitPnode
} /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@Cp known
{ /N@Cp load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@Cp known { 7.96661
320. /N@Cp load 0 GetEdge 0.0 320. AddOffset /N@Cp load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2426 1212
a FF(\031)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {-26.091 -30.07431 } false /N@C4 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C4 known
{ /N@C4 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C4 known { 7.96661
45. /N@C4 load 0 GetEdge 0.0 45. AddOffset /N@C4 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221
a FG(4)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {11.35274 -38.2403 } false /N@C5 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C5 known
{ /N@C5 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C5 known { 7.96661
100. /N@C5 load 0 GetEdge 0.0 100. AddOffset /N@C5 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221
a FG(5)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {38.2403 -11.15338 } false /N@C6 10
{InitPnode } /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C6 known
{ /N@C6 load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C6 known { 7.96661
165. /N@C6 load 0 GetEdge 0.0 165. AddOffset /N@C6 load GetCenter 3
-1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2430 1221
a FG(6)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end
 2451 1194
a 2451 1194 a
tx@Dict begin  tx@NodeDict begin {39.83368 0.0 } false /N@C2p 10 {InitPnode
} /NodeScale {} def NewNode end  end
 2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor    /DS 2.0 2.
CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0]
FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind
def   1. .setopacityalpha  tx@NodeDict begin tx@NodeDict /N@C2p known
{ /N@C2p load GetCenter } { 0 0 } ifelse end Dot end
 
@endspecial
2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2451 1194 a 2451 1194 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2451 1194 a 2451
1194 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C2p known { 7.96661
145. /N@C2p load 0 GetEdge 0.0 145. AddOffset /N@C2p load GetCenter
3 -1 roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin
 end
 2451 1194 a 2451 1194 a
tx@Dict begin ps@rot  RotBegin  end
 2451 1194 a 2405 1221
a FG(2)p FF(\031)2451 1194 y
tx@Dict begin RotEnd  end
 2451 1194 a 2451 1194 a
tx@Dict begin  PutEnd  end

2451 1194 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 21.51021 33.46014 24.89604 35.85036
29.87526 37.24438   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -16.531 36.24878 -11.95021 49.7921
-4.58078 55.16972   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -39.43526 5.57669 -47.8003 23.90015
-42.82108 46.60533   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve 
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.39432 SLW 0.75 0 0.25  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ -39.83368 0.0
-49.7921 19.91684 -47.40216 43.41856   1. 0.1 0.  /c ED /b ED /a ED
false OpenCurve  gsave 1.39432 SLW 0.75 0 0.25  setrgbcolor  1. .setopacityalpha
  3.0 0 0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -26.091 -30.07431 -39.83368 -22.90424
-59.75052 -7.96661 -68.91238 17.32755   false /dArrowPos 1. 1 gt {1.0
1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq { pop pop }{
2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4 2 roll curveto
} repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED
/x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub
3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub
bx sub def /ay y3 y0 sub cy sub by sub def /getValues { ax t0 3 exp
mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3 exp mul by t0
t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx t t mul mul add
cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll sub Pyth } def
/CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def /u u du add
def /t u def getdL add } repeat } def /GetArrowPos { /ende 0.5  1 gt
{ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def /du 0.01
def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL sum
add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def /loopNo
0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo cvi {
/ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t 0.95
mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2 y2
x3 y3 curveto } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.0  3.0  0.0  0.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.35274 -38.2403 -19.91684 -47.8003
-59.75052 -39.83368 -75.8831 -21.51021   false /dArrowPos 1. 1 gt {1.0
1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq { pop pop }{
2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4 2 roll curveto
} repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED
/x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub
3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub
bx sub def /ay y3 y0 sub cy sub by sub def /getValues { ax t0 3 exp
mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3 exp mul by t0
t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx t t mul mul add
cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll sub Pyth } def
/CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def /u u du add
def /t u def getdL add } repeat } def /GetArrowPos { /ende 0.5  1 gt
{ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def /du 0.01
def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL sum
add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def /loopNo
0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo cvi {
/ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t 0.95
mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2 y2
x3 y3 curveto } ifelse   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.0  3.0  0.0  0.0 ] 1 DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 38.2403 -11.15338 29.87526 -35.85036
0.0 -55.7672 -63.53476 -58.95396   1. 0.1 0.  /c ED /b ED /a ED false
OpenCurve  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.39432 SLW 0.75 0 0.25  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 39.83368 0.0
29.87526 -39.83368 0.0 -59.75052 -57.16122 -68.11555   1. 0.1 0.  /c
ED /b ED /a ED false OpenCurve  gsave 1.39432 SLW 0.75 0 0.25  setrgbcolor
 1. .setopacityalpha   3.0 0 0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.39432 SLW 0.75 0 0.25  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 21.51021 33.46014
39.83368 19.91684 49.7921 -19.91684 29.87526 -63.73383 0.0 -85.64246
-26.48943 -93.0116   1. 0.1 0.  /c ED /b ED /a ED false OpenCurve 
gsave 1.39432 SLW 0.75 0 0.25  setrgbcolor  1. .setopacityalpha   3.0
0 0 add  DotLine  grestore end
 
@endspecial
0 TeXcolorgray -293 3350 a

 -293 3350 a -293 3350 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 112.79018 lineto

 521.58136 112.79018 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 112.79018 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 109.55682 lineto

 0.3985 111.12247 1.6677 112.39166 3.23335 112.39166 curveto

 518.348 112.39166 lineto

 519.91365 112.39166 521.18286 111.12247 521.18286 109.55682 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 109.55682 lineto

 0.3985 111.12247 1.6677 112.39166 3.23335 112.39166 curveto

 518.348 112.39166 lineto

 519.91365 112.39166 521.18286 111.12247 521.18286 109.55682 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 109.55682 lineto

 0.3985 111.12247 1.6677 112.39166 3.23335 112.39166 curveto

 518.348 112.39166 lineto

 519.91365 112.39166 521.18286 111.12247 521.18286 109.55682 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0
TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 3350
a
 0 setgray
 -293 3350 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -169 2765 a FE(\017)p 0 TeXcolorgray 42
w FL(P)n(our)34 b(tout)h(r\351el)g FF(x)p FL(,)g(le)g(p)r(oin)n(t)g
(d'abscisse)f FF(x)h FL(sur)g(la)f(droite)h FG(\()p FF(I)7
b(A)p FG(\))36 b FL(vien)n(t)e(s'appliquer)g(sur)h(un)g(p)r(oin)n(t)g
FF(M)44 b FD(unique)34 b FL(de)h FF(C)-85 2864 y FL(app)r(el\351)c
FD(image)g(du)h(r\351el)f FF(x)h FD(sur)g(le)f(cercle.)p
0 TeXcolorgray -169 3130 a FE(\017)p 0 TeXcolorgray 42
w FL(T)-7 b(out)32 b(p)r(oin)n(t)g FF(N)41 b FL(du)32
b(cercle)f(trigonom\351trique)g(est)h(l'image)f(d'un)h(r\351el)g
FF(x)2246 3096 y Fv(0)2270 3130 y FL(.)g(Il)g(est)g(alors)e(aussi)i
(l'image)f(de)h(tous)g(les)g(r\351els)-85 3230 y FF(x)-38
3195 y Fv(0)2 3230 y FG(+)16 b(2)p FF(\031)s FL(,)27
b FF(x)272 3195 y Fv(0)313 3230 y FG(+)16 b(4)p FF(\031)s
FL(,)27 b(.....,)g FF(x)748 3195 y Fv(0)788 3230 y FE(\000)16
b FG(2)p FF(\031)s FL(,)27 b FF(x)1058 3195 y Fv(0)1099
3230 y FE(\000)16 b FG(4)p FF(\031)29 b FL(c'est)e(\340)f(dire)h
FF(x)1768 3195 y Fv(0)1808 3230 y FG(+)17 b FF(k)i FE(\002)d
FG(2)p FF(\031)30 b FL(a)n(v)n(ec)25 b FF(k)h FE(2)e
FA(Z)p FL(.)j(\()p FG(2)p FF(\031)j FL(\351tan)n(t)c(la)h(longueur)e
(d'un)i(tour)g(de)-85 3329 y(cercle\).)p 0 TeXcolorgray
-293 3350 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 93.75517 ] concat

 pgfs


 -293 3350 a
 0 setgray
 -293 3350 a 0 TeXcolorgray
0 TeXcolorgray 77 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 3350 a FH(Propri\351t\351)p 0 TeXcolorgray
0 TeXcolorgray -293 3350 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 41.89311 ] concat

 pgfs


 -293 3350 a
 0 setgray
 -293 3350 a
0 TeXcolorgray -222 3653 a

 -222 3653 a -222 3653 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 77.70898 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 3350 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 3568 a Fu(Exemple)h(1)p 0 TeXcolorgray
0 TeXcolorgray -165 3659 a Ft(\017)p 0 TeXcolorgray 42
w Fs(0)e Fr(a)f(p)r(our)h(image)g Fq(I)6 b Fs(\(1;)13
b(0\))p Fr(,de)26 b(m\352me)g Fs(2)p Fq(\031)i Fs(4)p
Fq(\031)s Fr(,)p Fs(6)p Fq(\031)h Fr(...)e(ont)e(aussi)i(p)r(our)e
(image)h(I.)p 0 TeXcolorgray -165 3888 a Ft(\017)p 0
TeXcolorgray -75 3840 a Fq(\031)p -75 3871 47 4 v -71
3939 a Fs(2)7 3888 y Fr(a)f(p)r(our)h(image)g Fq(J)7
b Fs(\(0;)14 b(1\))p Fr(,)26 b Fq(\031)i Fr(a)e(p)r(our)g(image)g
Fq(I)1283 3852 y Fp(0)1305 3888 y Fs(\()p Ft(\000)p Fs(1;)13
b(0\))p Fr(,)1592 3840 y Fs(3)p Fq(\031)p 1592 3871 86
4 v 1615 3939 a Fs(2)1713 3888 y Fr(a)25 b(p)r(our)h(image)g
Fq(J)2210 3852 y Fp(0)2233 3888 y Fs(\(0;)13 b Ft(\000)p
Fs(1\))p Fr(,)26 b Ft(\000)2580 3840 y Fq(\031)p 2580
3871 47 4 v 2584 3939 a Fs(2)2662 3888 y Fr(a)f(p)r(our)h(image)g
Fq(I)3150 3852 y Fp(0)3172 3888 y Fs(\(0;)14 b Ft(\000)p
Fs(1\))p 0 TeXcolorgray -165 4077 a Ft(\017)p 0 TeXcolorgray
42 w Fr(Le)25 b(p)r(oint)h Fq(J)7 b Fs(\(0;)14 b(1\))25
b Fr(est)h(aussi)h(l'image)g(de)1113 4029 y Fq(\031)p
1113 4060 V 1117 4128 a Fs(2)1195 4077 y Fr(mais)f(aussi)h(de)1655
4029 y Fs(5)p Fq(\031)p 1655 4060 86 4 v 1678 4128 a
Fs(2)1776 4077 y Fr(et)e(de)g Ft(\000)2032 4029 y Fs(3)p
Fq(\031)p 2032 4060 V 2055 4128 a Fs(2)2127 4077 y Fr(.)p
0 TeXcolorgray 3964 6381 a Fz(-2-)p 0 TeXcolorgray eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray 0 TeXcolorgray
-293 -113 a FD(Metho)s(de)31 b(1)g(\(Rep)s(\351rage)g(de)h(p)s(oin)m
(ts)e(sur)i(le)f(cercle)h(trigonom\351trique\))p 0 TeXcolorgray
-293 -13 a FL(On)27 b(a)h(placer)e(sur)h(le)h(cercle)f
(trigonom\351trique)e(suiv)-5 b(an)n(t)28 b(des)f(p)r(oin)n(ts.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 136.57288  0 -136.57288  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -136.57288
 136.57288  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-136.57288  def /maxTickline 136.57288  def /dT 7458719 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 113.81102  mul cntTick add def x abs MaxValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0 def }
if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul  moveto cntsubTick maxTickline STsize mul  lineto } { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
} ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat
subTwidth SLW subTColor subLSstroke grestore } if showOrigin { gsave
false { cntTick minTickline  moveto cntTick maxTickline  lineto } {
cntTick tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 113.81102
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.57288
0.0 -136.57288   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57288
0.0 -136.57288 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 136.57288  0 -136.57288  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -136.57288
 136.57288  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-136.57288  def /maxTickline 136.57288  def /dT 7458719 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 113.81102  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 113.81102  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.57288
0.0 -136.57288   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 136.57288
0.0 -136.57288 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 113.81102  0 0.0
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa 0.0  113.81102  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 113.81102  def /dT 7458719
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { xStart } def /MaxValue
{ xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add {
/cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 113.81102  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 113.81102  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 113.81102 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81102 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 113.81102  0 0.0
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa 0.0  113.81102  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 113.81102  def /dT 7458719
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { yStart } def /MaxValue
{ yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 113.81102  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 113.81102  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 113.81102 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81102 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1880 1295 a 1796
1370 a Fy(O)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 1880
1295 a 1880 1295 a
tx@Dict begin { 113.81102 0.0 } PutCoor PutBegin  end
 1880 1295 a 0.6 0 0.48 TeXcolorrgb
1910 1370 a Fx(I)p 0 TeXcolorgray 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295
a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 113.81102 } PutCoor PutBegin  end
 1880 1295 a 0.6 0 0.48
TeXcolorrgb 1806 1266 a Fx(J)p 0 TeXcolorgray 1880 1295
a
tx@Dict begin  PutEnd  end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor   0.0 0.0
2 copy moveto 113.81102 0 CLW mul round sub dup 0 rmoveto 0 360 arc
closepath  gsave 1.25 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1880 1295 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1880 1295 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
45.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial 1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 45.  tx@Dict begin PtoC
end 2.25 } false /N@A1 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
135.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial 1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 135.  tx@Dict begin PtoC
end 2.25 } false /N@A2 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
225.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial 1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 225.  tx@Dict begin PtoC
end 2.25 } false /N@A3 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
315.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial 1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 315.  tx@Dict begin PtoC
end 2.25 } false /N@A4 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a 1880
1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1880 1295 a 1880 1295
a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
30.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 30.  tx@Dict begin PtoC
end 2.25 } false /N@B1 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
60.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 60.  tx@Dict begin PtoC
end 2.25 } false /N@B2 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
90.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 90.  tx@Dict begin PtoC
end 2.25 } false /N@B3 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
120.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 120.  tx@Dict begin PtoC
end 2.25 } false /N@B4 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
150.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 150.  tx@Dict begin PtoC
end 2.25 } false /N@B5 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
180.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 180.  tx@Dict begin PtoC
end 2.25 } false /N@B6 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
210.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 210.  tx@Dict begin PtoC
end 2.25 } false /N@B7 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
240.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 240.  tx@Dict begin PtoC
end 2.25 } false /N@B8 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
270.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 270.  tx@Dict begin PtoC
end 2.25 } false /N@B9 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
300.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 300.  tx@Dict begin PtoC
end 2.25 } false /N@B10 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
330.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 330.  tx@Dict begin PtoC
end 2.25 } false /N@B11 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.5 SLW 0.6 0 0.48  setrgbcolor   113.81102
360.  tx@Dict begin PtoC end 2.0   1. .setopacityalpha  SD  end
 
@endspecial
1880 1295 a
tx@Dict begin  tx@NodeDict begin {113.81102 360.  tx@Dict begin PtoC
end 2.25 } false /N@B12 11 {InitCnode } /NodeScale {} def NewNode end
 end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880
1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A1 /N@A2 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A2 /N@A3 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A3 /N@A4 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A4 /N@A1 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B1 /N@B5 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880
1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B5 /N@B7 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B7 /N@B11 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295
a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B11 /N@B1 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B2 /N@B4 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880
1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B4 /N@B8 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B8 /N@B10 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B10 /N@B2 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 10.  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A1 known { 4.0 10.
/N@A1 load 0 GetEdge 0.0 10. AddOffset /N@A1 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880
1295 a 1880 1295 a
tx@Dict begin { 0.0 16.76752 9.01509 5.99287 10.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 1811 1308 a Fx(A)p 0 0 1
TeXcolorrgb 1897 1262 a(\031)p 1897 1293 43 3 v 1901
1358 a Fo(4)p 0 TeXcolorgray 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a
1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 170.  def grestore  end
 1880 1295 a 1880
1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A2 known { 4.0 170.
/N@A2 load 0 GetEdge 0.0 170. AddOffset /N@A2 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 21.45645 10.72621 5.99287 170.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 0 0 1 TeXcolorrgb
1801 1269 a Fo(3)p Fx(\031)p 1801 1300 79 3 v 1823 1365
a Fo(4)p 0 TeXcolorgray 1913 1315 a Fx(B)1880 1295 y
tx@Dict begin  PutEnd  end

1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -170.  def grestore  end
 1880
1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A3 known { 4.0 -170.
/N@A3 load 0 GetEdge 0.0 -170. AddOffset /N@A3 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 27.88544 10.72621 5.99287 -170.  Uput UUput } PutCoor
PutBegin  end
 1880 1295
a 1 0 0 TeXcolorrgb 1775 1269 a Fw(\000)p Fo(3)p Fx(\031)p
1775 1300 134 3 v 1823 1365 a Fo(4)p 0 TeXcolorgray 1941
1315 a Fx(C)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880
1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -10.  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A4 known { 4.0 -10.
/N@A4 load 0 GetEdge 0.0 -10. AddOffset /N@A4 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295
a 1880 1295 a
tx@Dict begin { 0.0 24.2215 10.40402 5.99287 -10.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 1780 1314 a Fx(D)p 1 0 0 TeXcolorrgb
1873 1267 a Fw(\000)p Fx(\031)p 1873 1298 98 3 v 1904
1363 a Fo(4)p 0 TeXcolorgray 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a
1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 1880 1295 a 1880
1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B1 known { 4.0 0.
/N@B1 load 0 GetEdge 0.0 0. AddOffset /N@B1 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 17.07861 9.01509 5.99287 0.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 1809 1308
a Fx(E)p 0 0 1 TeXcolorrgb 1898 1262 a(\031)p 1898 1293
43 3 v 1902 1358 a Fo(6)p 0 TeXcolorgray 1880 1295 a
tx@Dict begin  PutEnd  end

1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 180.  def grestore  end
 1880
1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B5 known { 4.0 180.
/N@B5 load 0 GetEdge 0.0 180. AddOffset /N@B5 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 21.21062 10.72621 5.99287 180.  Uput UUput } PutCoor
PutBegin  end
 1880 1295
a 0 0 1 TeXcolorrgb 1802 1269 a Fo(5)p Fx(\031)p 1802
1300 79 3 v 1824 1365 a Fo(6)p 0 TeXcolorgray 1914 1315
a Fx(F)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295
a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -180.  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B7 known { 4.0 -180.
/N@B7 load 0 GetEdge 0.0 -180. AddOffset /N@B7 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 1880 1295 a 1880
1295 a
tx@Dict begin { 0.0 27.88544 10.72621 5.99287 -180.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 1 0 0 TeXcolorrgb 1775 1269 a Fw(\000)p
Fo(5)p Fx(\031)p 1775 1300 134 3 v 1823 1365 a Fo(6)p
0 TeXcolorgray 1941 1315 a Fx(G)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295
a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 1880 1295 a 1880
1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B11 known { 4.0 0.
/N@B11 load 0 GetEdge 0.0 0. AddOffset /N@B11 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 24.61066 10.40402 5.99287 0.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 1778 1314
a Fx(H)p 1 0 0 TeXcolorrgb 1875 1267 a Fw(\000)p Fx(\031)p
1875 1298 98 3 v 1906 1363 a Fo(6)p 0 TeXcolorgray 1880
1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295
a
tx@Dict begin  gsave STV CP T /ps@refangle 25.  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B2 known { 4.0 25.
/N@B2 load 0 GetEdge 0.0 25. AddOffset /N@B2 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 18.13419 9.01509 5.99287 25.  Uput UUput } PutCoor
PutBegin  end
 1880
1295 a 1805 1308 a Fx(K)p 0 0 1 TeXcolorrgb 1903 1262
a(\031)p 1903 1293 43 3 v 1907 1358 a Fo(3)p 0 TeXcolorgray
1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880
1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 145.  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B4 known { 4.0 145.
/N@B4 load 0 GetEdge 0.0 145. AddOffset /N@B4 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1880 1295 a 1880 1295
a
tx@Dict begin { 0.0 20.43146 10.72621 5.99287 145.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 0 0 1 TeXcolorrgb 1806 1269 a Fo(2)p Fx(\031)p
1806 1300 79 3 v 1827 1365 a Fo(3)p 0 TeXcolorgray 1917
1315 a Fx(L)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880
1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -105.  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B8 known { 4.0 -105.
/N@B8 load 0 GetEdge 0.0 -105. AddOffset /N@B8 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 1880 1295
a 1880 1295 a
tx@Dict begin { 0.0 30.2774 10.72621 5.99287 -105.  Uput UUput } PutCoor
PutBegin  end
 1880 1295 a 1 0 0 TeXcolorrgb 1765 1269
a Fw(\000)p Fo(2)p Fx(\031)p 1765 1300 134 3 v 1813 1365
a Fo(3)p 0 TeXcolorgray 1931 1315 a Fx(M)1880 1295 y
tx@Dict begin  PutEnd  end

1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -105.  def grestore  end
 1880
1295 a 1880 1295 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B10 known { 4.0 -105.
/N@B10 load 0 GetEdge 0.0 -105. AddOffset /N@B10 load GetCenter 3 -1
roll add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin 
end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 24.61066 10.40402 5.99287 -105.  Uput UUput } PutCoor
PutBegin  end
 1880 1295
a 1778 1314 a Fx(N)p 1 0 0 TeXcolorrgb 1875 1267 a Fw(\000)p
Fx(\031)p 1875 1298 98 3 v 1906 1363 a Fo(3)p 0 TeXcolorgray
1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  PutEnd  end
 1880 1295 a 1880
1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 45  def grestore  end
 1880 1295 a 1880 1295 a
tx@Dict begin { 0.0 113.81102 } PutCoor PutBegin  end
 1880 1295 a 1904 1272
a Fx(J)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 1880 1295
a 1880 1295 a
tx@Dict begin { -113.81102 0.0 } PutCoor PutBegin  end
 1880 1295 a 1799 1272 a Fx(I)1835 1244
y Fp(0)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 1880 1295 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1880 1295
a 1880 1295 a
tx@Dict begin { 0.0 -113.81102 } PutCoor PutBegin  end
 1880 1295 a 1790 1374 a Fx(J)1835 1346
y Fp(0)1880 1295 y
tx@Dict begin  PutEnd  end
 1880 1295 a 0 TeXcolorgray -191 2612
a FL(1.)p 0 TeXcolorgray 41 w(Asso)r(cier)f(\340)h(c)n(hacun)g(des)h(p)
r(oin)n(ts)f(le)h(nom)n(bre)e(r\351el)h(de)h(l'in)n(terv)-5
b(alle)27 b FG(])19 b FE(\000)f FF(\031)s FG(;)c FF(\031)s
FG(])28 b FL(don)n(t)p 0 0 1 TeXcolorrgb 27 w(il)g(est)g(le)f(p)r(oin)n
(t)h(image.)p 0 TeXcolorgray 0 TeXcolorgray -192 2778
a(2.)p 0 TeXcolorgray 42 w(Asso)r(cier)e(\340)h(c)n(hacun)g(des)h(p)r
(oin)n(ts)f(le)h(nom)n(bre)e(r\351el)h(de)h(l'in)n(terv)-5
b(alle)27 b FG([0;)14 b(2)p FF(\031)s FG([)27 b FL(don)n(t)p
1 0 0 TeXcolorrgb 28 w(il)g(est)h(le)g(p)r(oin)n(t)f(image.)p
0 TeXcolorgray 0 TeXcolorgray -192 2983 a(3.)p 0 TeXcolorgray
42 w(Placer)g(sur)g(le)g(cercle)g(les)g(p)r(oin)n(ts)h
FF(M)1087 2949 y Fv(0)1110 2983 y FF(;)14 b(N)1223 2949
y Fv(0)1273 2983 y FL(et)28 b FF(P)1435 2949 y Fv(0)1486
2983 y FL(asso)r(ci\351s)e(resp)r(ectiv)n(emen)n(t)h(aux)g(r\351els)
2721 2927 y FG(19)p FF(\031)p 2721 2964 134 4 v 2767
3040 a FG(3)2864 2983 y FL(,)2925 2927 y FE(\000)p FG(21)p
FF(\031)p 2925 2964 198 4 v 3003 3040 a FG(4)3160 2983
y FL(et)3267 2927 y FG(53)p FF(\031)p 3267 2964 134 4
v 3313 3040 a FG(3)-85 3191 y Fn(1)34 b(tour)29 b FI(2)p
FF(\031)s(=)346 3135 y FG(4)p FF(\031)p 346 3172 92 4
v 371 3248 a FG(2)448 3191 y FF(=)500 3135 y FG(6)p FF(\031)p
500 3172 V 525 3248 a FG(3)601 3191 y FF(=)653 3135 y
FG(8)p FF(\031)p 653 3172 V 678 3248 a FG(4)754 3191
y FF(=)806 3135 y FG(12)p FF(\031)p 806 3172 134 4 v
852 3248 a FG(6)p 0 TeXcolorgray 14 3449 a FE(\017)p
0 TeXcolorgray 41 w FL(on)f(c)n(herc)n(he)e(la)h(mesure)g(principale)g
(de)h(:)1464 3393 y FG(19)p FF(\031)p 1464 3430 V 1510
3506 a FG(3)97 3588 y FL(on)g(commence)f(par)g(diviser)f(le)i(n)n
(um\351rateur)e(par)h(le)h(d\351nominateur)f(sans)f FF(\031)s(:)132
3683 y FG(19)p 132 3720 84 4 v 153 3796 a(3)248 3739
y FE(\031)d FG(6)p FF(:)p FG(3)j FL(on)i(encadre)e FG(6)p
FF(:)p FG(3)h FL(par)g(2)g(c)n(hi\033res)g(pair)g(ici)h
FG(6)f FL(et)h FG(8)f(6)p FF(\031)f(<)2251 3683 y FG(19)p
FF(\031)p 2251 3720 134 4 v 2297 3796 a FG(3)2418 3739
y FF(<)c FG(8)p FF(\031)326 3874 y FG(18)p FF(\031)p
326 3911 V 372 3987 a FG(3)492 3930 y FF(<)590 3874 y
FG(19)p FF(\031)p 590 3911 V 636 3987 a FG(3)756 3930
y FF(<)854 3874 y FG(24)p FF(\031)p 854 3911 V 900 3987
a FG(3)1450 3874 y(19)p FF(\031)p 1450 3911 V 1495 3987
a FG(3)1616 3930 y(=)1713 3874 y(18)p FF(\031)p 1713
3911 V 1759 3987 a FG(3)1875 3930 y(+)1968 3874 y FF(\031)p
1968 3911 51 4 v 1972 3987 a FG(3)122 4104 y FL(Donc)348
4048 y FF(\031)p 348 4085 V 352 4161 a FG(3)436 4104
y FL(Est)28 b(la)f(mesure)g(principale.)p 0 TeXcolorgray
3964 6381 a Fz(-3-)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
-92 a FJ(I)t(I)t(I)132 b(Radian)-293 107 y FH(1)112 b(D\351\034nition)p
0 TeXcolorgray -293 1325 a

 -293 1325 a -293 1325 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 137.12946 lineto

 521.58136 137.12946 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 137.12946 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 133.8961 lineto

 0.3985 135.46175 1.6677 136.73094 3.23335 136.73094 curveto

 518.348 136.73094 lineto

 519.91365 136.73094 521.18286 135.46175 521.18286 133.8961 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 133.8961 lineto

 0.3985 135.46175 1.6677 136.73094 3.23335 136.73094 curveto

 518.348 136.73094 lineto

 519.91365 136.73094 521.18286 135.46175 521.18286 133.8961 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 133.8961 lineto

 0.3985 135.46175 1.6677 136.73094 3.23335 136.73094 curveto

 518.348 136.73094 lineto

 519.91365 136.73094 521.18286 135.46175 521.18286 133.8961 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0
TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 1325
a
 0 setgray
 -293 1325 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-679 x FL(P)n(our)60 b(tout)h(p)r(oin)n(t)g(M)f(sur)g(le)h(cercle)f
(trigonom\351trique,)e(on)j(d\351\034nit)g(un)g(angle)-293
773 y(g\351om\351trique)202 755 y FA(\\)200 773 y FF(I)7
b(O)r(M)i FL(.)53 b(Cet)f(angle)g(g\351om\351trique)f(in)n(tercepte)h
(l'arc)2042 700 y Fm(_)2009 773 y FF(I)7 b(M)61 b FL(du)53
b(cercle)-293 873 y(trigonom\351trique.)-293 984 y(La)31
b(mesure)h(de)f(l'angle)g(g\351om\351trique)975 966 y
FA(\\)973 984 y FF(I)7 b(O)r(M)41 b FL(est)32 b(de)g(1)f(radian)g
(lorsque)f(la)i(mesure)f(de)-293 1111 y(l'arc)-75 1038
y Fm(_)-108 1111 y FF(I)7 b(M)36 b FL(est)28 b(de)f(1)g(ra)n(y)n(on.)
2985 900 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.95 0.8 0.9  setrgbcolor   0 rotate
0.0 0.0 2 copy moveto 17.07138 0 CLW mul sub 0. 57.2958 arc closepath
gsave 0.95 0.8 0.9  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.5 SLW 0.95 0.8 0.9  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 51.21481  0 -51.21481  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -51.21481
 51.21481  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-51.21481  def /maxTickline 51.21481  def /dT 2797019 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 42.67912
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 51.21481
0.0 -51.21481   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 51.21481
0.0 -51.21481 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 51.21481  0 -51.21481  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -51.21481
 51.21481  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-51.21481  def /maxTickline 51.21481  def /dT 2797019 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 51.21481
0.0 -51.21481   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 51.21481
0.0 -51.21481 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 42.67912  0 0.0
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa 0.0  42.67912  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 42.67912  def /dT 2797019
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { xStart } def /MaxValue
{ xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add {
/cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 42.67912  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 42.67912 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
42.67912 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 42.67912  0 0.0
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa 0.0  42.67912  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 42.67912  def /dT 2797019
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { yStart } def /MaxValue
{ yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 42.67912  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 42.67912  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 42.67912 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
42.67912 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2985 900 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 2985
900 a 2985 900 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2985 900 a 2901 975 a Fy(O)2985 900
y
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 2985 900 a 2985 900 a
tx@Dict begin { 42.67912 0.0 } PutCoor PutBegin  end
 2985 900
a 3015 975 a Fx(I)2985 900 y
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 2985
900 a 2985 900 a
tx@Dict begin { 0.0 42.67912 } PutCoor PutBegin  end
 2985 900 a 2911 871 a Fx(J)2985 900
y
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 2985 900 a 2985 900 a
tx@Dict begin { 21.33955 0.0 } PutCoor PutBegin  end
 2985 900
a 1 0 0 TeXcolorrgb 2950 966 a Fw(\000)-55 b(!)2973 1010
y Fx(i)p 0 TeXcolorgray 2985 900 a
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900
a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 2985 900 a 2985 900 a
tx@Dict begin { 0.0 21.33955 } PutCoor PutBegin  end
 2985 900 a 1 0 0 TeXcolorrgb
2873 884 a Fw(\000)g(!)2892 928 y Fx(j)p 0 TeXcolorgray
2985 900 a
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900 a
tx@Dict begin  gsave STV CP T /ps@rot 57.2958 def grestore  end
 2985 900 a 2985 900
a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2985 900 a 2985 900 a
tx@Dict begin ps@rot  RotBegin  end
 2985 900 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 42.67912 0.0 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 2985 900 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2985 900 a 2985 900 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 2985 900
a 2985 900 a
tx@Dict begin { 44.8132 2.13408 } PutCoor PutBegin  end
 2985 900 a 2985 900 a
tx@Dict begin ps@rot  RotBegin  end
 2985 900 a 0.6 0 0.48
TeXcolorrgb FF(M)p 0 TeXcolorgray 2985 900 a
tx@Dict begin RotEnd  end
 2985 900
a 2985 900 a
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900 a
tx@Dict begin RotEnd  end
 2985 900 a 2985 900
a
tx@Dict begin  PutEnd  end
 2985 900 a 2985 900 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 2985 900 a 2985 900 a
tx@Dict begin { 12.80386 8.53569 } PutCoor PutBegin  end
 2985 900
a 0.6 0 0.48 TeXcolorrgb 3027 923 a Fy(1)24 b(rad)p 0
TeXcolorgray 2985 900 a
tx@Dict begin  PutEnd  end
 2985 900 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r
17.07138 def /c 57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def
/angleB 57.2958 0.0 c mul 2 div sub def /angleAtoB angleB angleA gt
{ true }{ false } ifelse def x y r angleA angleB arc  gsave 0.8 SLW
0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def  0.0 0.0 /y ED /x
ED /r 42.67912 def /c 57.2957 r Div def /angleA 57.29 0.0 c mul 2 div
add def /angleB 360. 0.0 c mul 2 div sub def /angleAtoB angleB angleA
gt { true }{ false } ifelse def x y r angleA angleB arc  gsave 1.0
SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r
42.67912 def /c 57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def
/angleB 57.2958 0.0 c mul 2 div sub def /angleAtoB angleB angleA gt
{ true }{ false } ifelse def x y r angleA angleB arc  gsave 1.25 SLW
0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray -293 1325 a


 pgfr

 restore
 0
TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 118.09445 ] concat

 pgfs



-293 1325 a
 0 setgray
 -293 1325 a 0 TeXcolorgray 0 TeXcolorgray
77 x @beginspecial 0 @llx -1 @lly 18 @urx 24 @ury 169
@rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 1325 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 1325 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 54.06276 ] concat

 pgfs


 -293 1325 a
 0 setgray
 -293 1325 a
0 TeXcolorgray -222 1730 a

 -222 1730 a -222 1730 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 102.04826 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 1325 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 1632 a FH(2)112 b(Con)m(v)m(ersion)-168 1785 y FL(Le)27
b(p)r(\351rim\350tre)g(d'un)h(cercle)f(de)h(ra)n(y)n(on)d(1)j(est)f(2)p
FF(\031)s FL(.)h(Donc)f FG(2)p FF(\031)k FL(radians)26
b(\351quiv)-5 b(aut)27 b(\340)h FG(360)2583 1751 y Fv(\016)2619
1785 y FL(.)-168 2007 y(Soit)f(1)g(radian)g(corresp)r(ond)f(\340)832
1950 y FG(360)958 1920 y Fv(\016)p 832 1987 163 4 v 867
2064 a FG(2)p FF(\031)1032 2007 y FL(ou)h(1)h(radian)e
FE(\031)d FG(57)p FF(;)14 b FG(30)1768 1972 y Fv(\016)1804
2007 y FL(.)-293 2133 y(On)27 b(retiendra)g(:)h FF(\031)j
FL(radians)26 b(corresp)r(ond)g(\340)h FG(180)1239 2099
y Fv(\016)p 0 TeXcolorgray -293 2358 a FD(Metho)s(de)k(2)g(\(Con)m(v)m
(ertir)i(des)e(mesures)g(d'angle\))p 0 TeXcolorgray -293
2458 a FL(Con)n(v)n(ertir)26 b(les)h(mesures)g(d'angles)f(donn\351s)i
(en)f(radians)f(ou)i(en)f(degr\351s.)p -168 2569 5053
4 v -168 2765 4 196 v -97 2703 a(Mesures)g(en)g(degr\351s)p
630 2765 V 121 w(15)p 1017 2765 V 302 w(30)p 1403 2765
V 302 w(45)p 1790 2765 V 303 w(60)p 2176 2765 V 302 w(90)p
2562 2765 V 303 w(125)p 2949 2765 V 260 w(135)p 3335
2765 V 260 w(180)p 3722 2765 V 261 w(270)p 4108 2765
V 260 w(300)p 4495 2765 V 261 w(360)p 4881 2765 V -168
2768 5053 4 v -168 2968 4 200 v -115 2902 a(Mesures)f(en)i(radians)p
630 2968 V 710 2846 a FF(\031)p 693 2883 84 4 v 693 2959
a FG(12)p 1017 2968 4 200 v 1080 2846 a FF(\031)p 1080
2883 51 4 v 1084 2959 a FG(6)p 1403 2968 4 200 v 1466
2846 a FF(\031)p 1466 2883 51 4 v 1470 2959 a FG(4)p
1790 2968 4 200 v 1853 2846 a FF(\031)p 1853 2883 51
4 v 1857 2959 a FG(3)p 2176 2968 4 200 v 2239 2846 a
FF(\031)p 2239 2883 51 4 v 2243 2959 a FG(2)p 2562 2968
4 200 v 2626 2846 a(25)p FF(\031)p 2626 2883 134 4 v
2651 2959 a FG(36)p 2949 2968 4 200 v 3012 2846 a(3)p
FF(\031)p 3012 2883 92 4 v 3037 2959 a FG(4)p 3335 2968
4 200 v 3388 2902 a FF(\031)p 3722 2968 V 3785 2846 a
FG(3)p FF(\031)p 3785 2883 92 4 v 3810 2959 a FG(2)p
4108 2968 4 200 v 4171 2846 a(5)p FF(\031)p 4171 2883
92 4 v 4196 2959 a FG(3)p 4495 2968 4 200 v 4881 2968
V -168 2971 5053 4 v -293 3041 a FL(\(P)n(our)f(trouv)n(er)f(facilemen)
n(t)i(par)f(la)g(suite)h(toutes)f(les)g(v)-5 b(aleurs,)27
b(on)g(p)r(eut)i(faire)e(un)h(pro)r(duit)f(en)h(crois.\))-293
3314 y FJ(IV)132 b(Angle)43 b(orien)l(t\351)-293 3512
y FH(1)112 b(Mesures)38 b(d'angle)h(orien)m(t\351)p 0
TeXcolorgray -293 5083 a

 -293 5083 a -293 5083 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 177.12321 lineto

 521.58136 177.12321 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 177.12321 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 173.88986 lineto

 0.3985 175.4555 1.6677 176.72472 3.23335 176.72472 curveto

 518.348 176.72472 lineto

 519.91365 176.72472 521.18286 175.4555 521.18286 173.88986 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 173.88986 lineto

 0.3985 175.4555 1.6677 176.72472 3.23335 176.72472 curveto

 518.348 176.72472 lineto

 519.91365 176.72472 521.18286 175.4555 521.18286 173.88986 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 173.88986 lineto

 0.3985 175.4555 1.6677 176.72472 3.23335 176.72472 curveto

 518.348 176.72472 lineto

 519.91365 176.72472 521.18286 175.4555 521.18286 173.88986 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 5083 a
 0 setgray
 -293 5083 a
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -675 x FL(Soit)28
b FF(x)g FL(un)g(r\351el)f(et)h FF(M)36 b FL(un)28 b(p)r(oin)n(t)f(du)h
(cercle)f(trigonom\351trique)f(rep)r(\351r\351)h(par)g
FF(x)p FL(.)-293 4528 y(On)g(dit)i(que)e FF(x)h FL(est)g(une)f(mesure)g
(en)h(radians)e(de)i(l'angle)f(orien)n(t\351)1822 4436
y Fl(\020)1872 4471 y FE(\000)-39 b(!)1872 4528 y FF(O)r(I)8
b(;)2018 4471 y FE(\000)-29 b(\000)g(!)2018 4528 y FF(O)r(M)2173
4436 y Fl(\021)2222 4528 y FL(.)3266 4466 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.95 0.8 0.9  setrgbcolor   0 rotate
0.0 0.0 2 copy moveto 22.76184 0 CLW mul sub 0. 50. arc closepath gsave
0.95 0.8 0.9  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
0.5 SLW 0.95 0.8 0.9  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 68.28642  0 -68.28642  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -68.28642
 68.28642  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-68.28642  def /maxTickline 68.28642  def /dT 3729359 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 56.9055
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 68.28642
0.0 -68.28642   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 68.28642
0.0 -68.28642 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 68.28642  0 -68.28642  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -68.28642
 68.28642  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-68.28642  def /maxTickline 68.28642  def /dT 3729359 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 56.9055  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 68.28642
0.0 -68.28642   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 68.28642
0.0 -68.28642 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 56.9055  0 0.0 
0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa 0.0  56.9055  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.9055  def /dT 3729359
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { xStart } def /MaxValue
{ xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add {
/cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 56.9055  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 56.9055 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.9055 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 56.9055  0 0.0
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa 0.0  56.9055  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.9055  def /dT 3729359
abs 65536 div viceversa { neg } if def /DT 1 abs viceversa { neg }
if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT
0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def /Twidth
0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0  setgray
 } def /subTColor { 0.5  setgray  } def /MinValue { yStart } def /MaxValue
{ yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add epsilon sub }{
sub epsilon add } ifelse } def /logLines { false } def /LSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 56.9055  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 56.9055  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 56.9055 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
56.9055 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 3266 4466 a 3266
4466 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3266 4466 a 3182 4541 a Fy(O)3266 4466 y
tx@Dict begin  PutEnd  end
 3266
4466 a 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 3266 4466 a 3266 4466 a
tx@Dict begin { 56.9055 0.0 } PutCoor PutBegin  end
 3266 4466
a 0.6 0 0.48 TeXcolorrgb 3295 4541 a Fx(I)p 0 TeXcolorgray
3266 4466 a
tx@Dict begin  PutEnd  end
 3266 4466 a 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 3266 4466 a 3266
4466 a
tx@Dict begin { 0.0 56.9055 } PutCoor PutBegin  end
 3266 4466 a 0.6 0 0.48 TeXcolorrgb 3192 4437 a
Fx(J)p 0 TeXcolorgray 3266 4466 a
tx@Dict begin  PutEnd  end
 3266 4466 a 3266 4466
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 3266 4466 a 3266 4466 a
tx@Dict begin { 28.45274 0.0 } PutCoor PutBegin  end
 3266 4466 a 1 0 0 TeXcolorrgb
3231 4533 a Fw(\000)-55 b(!)3254 4577 y Fx(i)p 0 TeXcolorgray
3266 4466 a
tx@Dict begin  PutEnd  end
 3266 4466 a 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 3266 4466 a 3266
4466 a
tx@Dict begin { 0.0 28.45274 } PutCoor PutBegin  end
 3266 4466 a 1 0 0 TeXcolorrgb 3154 4450 a Fw(\000)g(!)3173
4494 y Fx(j)p 0 TeXcolorgray 3266 4466 a
tx@Dict begin  PutEnd  end
 3266 4466 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor   0.0 0.0
2 copy moveto 56.9055 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.25 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@rot 50. def grestore  end
 3266
4466 a 3266 4466 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3266 4466 a 3266 4466 a
tx@Dict begin ps@rot  RotBegin  end
 3266 4466
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.9055 0.0 0.0 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

3266 4466 a 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 3266 4466 a 3266 4466 a
tx@Dict begin { 56.9055 0.0 } PutCoor PutBegin  end
 3266
4466 a 3266 4466 a
tx@Dict begin ps@rot  RotBegin  end
 3266 4466 a 0.6 0 0.48 TeXcolorrgb
FF(M)p 0 TeXcolorgray 3266 4466 a
tx@Dict begin RotEnd  end
 3266 4466 a 3266 4466
a
tx@Dict begin  PutEnd  end
 3266 4466 a 3266 4466 a
tx@Dict begin RotEnd  end
 3266 4466 a 3266 4466 a
tx@Dict begin  PutEnd  end
 3266
4466 a 3266 4466 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 3266 4466 a 3266 4466 a
tx@Dict begin { 17.07182 11.38092 } PutCoor PutBegin  end
 3266 4466
a 3307 4484 a FF(x)3266 4466 y
tx@Dict begin  PutEnd  end
 3266 4466 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
0.0 /y ED /x ED /r 22.76184 def /c 57.2957 r Div def /angleA 0. 0.0
c mul 2 div add def /angleB 50. 0.0 c mul 2 div sub def /angleAtoB
angleB angleA gt { true }{ false } ifelse def x y r angleA angleB {
ArrowB } r 0 gt { { sub } } { { add } } ifelse ArcArrow dup angleA
gt angleAtoB xor { pop angleA } if arc  gsave 0.8 SLW 0.6 0 0.48  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
0.0 /y ED /x ED /r 73.97733 def /c 57.2957 r Div def /angleA 30. 0.0
c mul 2 div add def /angleB 60. 0.0 c mul 2 div sub def /angleAtoB
angleB angleA gt { true }{ false } ifelse def x y r angleA angleB {
ArrowB } r 0 gt { { sub } } { { add } } ifelse ArcArrow dup angleA
gt angleAtoB xor { pop angleA } if arc  gsave 0.8 SLW 0.6 0 0.48  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
3266 4466 a
tx@Dict begin { 56.9055 56.9055 } PutCoor PutBegin  end
 3266 4466 a 0.6 0 0.48 TeXcolorrgb 3234 4487
a FL(+)p 0 TeXcolorgray 3266 4466 a
tx@Dict begin  PutEnd  end
 3266 4466 a 0 TeXcolorgray
-293 5083 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 158.08821 ] concat

 pgfs


 -293 5083 a
 0 setgray
 -293 5083 a 0 TeXcolorgray
0 TeXcolorgray 77 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 5083 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 5083 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 74.05963 ] concat

 pgfs


 -293 5083 a
 0 setgray
 -293 5083 a
0 TeXcolorgray -222 5654 a

 -222 5654 a -222 5654 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 142.04202 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 5083 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 5281 a FD(Remarque)32 b(1)p 0 TeXcolorgray
-293 5380 a FL(L'angle)27 b(orien)n(t\351)f FG(\()305
5324 y FE(\000)-39 b(!)305 5380 y FF(O)r(I)8 b(;)451
5324 y FE(\000)-29 b(\000)g(!)451 5380 y FF(O)r(M)9 b
FG(\))28 b FL(a)g(une)f(in\034nit\351)i(de)e(mesures.)-293
5480 y(Si)f FF(x)f FL(est)h(une)f(de)g(ses)g(mesures)f(alors)g
FF(x)14 b FG(+)g(2)p FF(\031)28 b FL(,)d FF(x)14 b FG(+)g(4)p
FF(\031)28 b FL(,)d FF(x)14 b FE(\000)g FG(2)p FF(\031)28
b FL(et)d(plus)g(g\351n\351ralemen)n(t)f FF(x)14 b FG(+)g(2)p
FF(k)s(\031)28 b FL(a)n(v)n(ec)23 b FF(k)j FE(2)e FA(Z)h
FL(son)n(t)g(aussi)f(des)h(mesures)-293 5592 y(de)j FG(\()-150
5535 y FE(\000)-39 b(!)-150 5592 y FF(O)r(I)8 b(;)-4
5535 y FE(\000)-29 b(\000)g(!)-4 5592 y FF(O)r(M)9 b
FG(\))p FL(.)-293 5716 y(P)n(ar)28 b(con)n(v)n(en)n(tion)f(on)h(note)g
(alors)781 5624 y Fl(\020)830 5659 y FE(\000)-39 b(!)830
5716 y FF(O)r(I)8 b(;)976 5659 y FE(\000)-29 b(\000)g(!)976
5716 y FF(O)r(M)1131 5624 y Fl(\021)1205 5716 y FG(=)24
b FF(x)c FG(+)e(2)p FF(k)s(\031)31 b FL(o\371)d FF(k)k
FL(est)c(un)h(en)n(tier)f(relatif)g(et)h(on)f(dit)h(que)3028
5624 y Fl(\020)3077 5659 y FE(\000)-39 b(!)3077 5716
y FF(O)r(I)8 b(;)3223 5659 y FE(\000)-29 b(\000)g(!)3223
5716 y FF(O)r(M)3378 5624 y Fl(\021)3456 5716 y FL(\340)28
b(p)r(our)g(mesure)g FF(x)-293 5836 y FL(radians)e(\340)h
FG(2)p FF(\031)k FL(pr\350s.)-293 5947 y(On)c(p)r(eut)i(aussi)e
(\351crire)f(:)i(mes)f FG(\()716 5891 y FE(\000)-39 b(!)716
5947 y FF(O)r(I)8 b(;)862 5891 y FE(\000)-29 b(\000)g(!)862
5947 y FF(O)r(M)9 b FG(\))28 b FE(\021)23 b FF(\013)28
b FG([2)p FF(\031)s FG(])g FL(ou)f(plus)h(simplemen)n(t)f(:)-293
6063 y FG(\()-261 6007 y FE(\000)-39 b(!)-261 6063 y
FF(O)r(I)8 b(;)-115 6007 y FE(\000)-29 b(\000)g(!)-115
6063 y FF(O)r(M)9 b FG(\))28 b FE(\021)f FF(\013)h FG([2)p
FF(\031)s FG(])g FL(qui)g(se)f(lit)h(:)g FD(La)k(mesure)f(de)h(l'angle)
e(orien)m(t\351)h FG(\()2081 6007 y FE(\000)-39 b(!)2081
6063 y FF(O)r(I)8 b(;)2227 6007 y FE(\000)-28 b(\000)e(!)2227
6063 y FF(O)r(M)10 b FG(\))32 b FD(est)f(\351gal)g(\340)h
FF(\013)h FD(mo)s(dulo)d FG(2)p FF(\031)p 0 TeXcolorgray
3964 6381 a Fz(-4-)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
-92 a FH(2)112 b(Mesure)38 b(principale)h(d'un)f(angle)g(orien)m(t\351)
p 0 TeXcolorgray -293 516 a

 -293 516 a -293 516 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 61.98477 lineto

 521.58136 61.98477 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 61.98477 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 58.75142 lineto

 0.3985 60.31706 1.6677 61.58626 3.23335 61.58626 curveto

 518.348 61.58626 lineto

 519.91365 61.58626 521.18286 60.31706 521.18286 58.75142 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 58.75142 lineto

 0.3985 60.31706 1.6677 61.58626 3.23335 61.58626 curveto

 518.348 61.58626 lineto

 519.91365 61.58626 521.18286 60.31706 521.18286 58.75142 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 58.75142 lineto

 0.3985 60.31706 1.6677 61.58626 3.23335 61.58626 curveto

 518.348 61.58626 lineto

 519.91365 61.58626 521.18286 60.31706 521.18286 58.75142 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 516 a
 0 setgray
 -293 516 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -137 x FL(P)n(armi)i(toutes)
f(les)h(mesures)f(d'un)i(angle)e(orien)n(t\351)g FG(\()1439
322 y FE(\000)-40 b(!)1439 379 y FF(O)r(I)7 b(;)1584
322 y FE(\000)-28 b(\000)f(!)1584 379 y FF(O)r(M)10 b
FG(\))p FL(,)40 b(il)g(existe)g(une)g(unique)g(mesure)f(de)h(l'angle)g
(appartenan)n(t)e(\340)-293 495 y(l'in)n(terv)-5 b(alle)27
b FG(])p FE(\000)p FF(\031)s FG(;)14 b FF(\031)s FG(])p
FL(.)28 b(Cette)g(mesure)f(s'app)r(elle)g(app)r(el\351e)h(la)f
FD(mesure)k(principale)c FL(de)h FG(\()2559 438 y FE(\000)-39
b(!)2559 495 y FF(O)r(I)8 b(;)2705 438 y FE(\000)-29
b(\000)g(!)2705 495 y FF(O)r(M)9 b FG(\))p FL(.)p 0 TeXcolorgray
-293 516 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 42.94977 ] concat

 pgfs


 -293 516 a
 0 setgray
 -293 516 a 0 TeXcolorgray 0
TeXcolorgray 77 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 516 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 516 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 16.49042 ] concat

 pgfs


 -293 516 a
 0 setgray
 -293 516 a 0
TeXcolorgray -222 607 a

 -222 607 a -222 607 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 26.90356 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 516 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray
-293 680 a FD(Metho)s(de)31 b(3)g(\(Sa)m(v)m(oir)i(trouv)m(er)g(une)f
(mesure)e(principale)i(d'un)f(angle)g(orien)m(t\351)h(:\))p
0 TeXcolorgray 0 TeXcolorgray -192 780 a FL(1.)p 0 TeXcolorgray
42 w(P)n(armi)27 b(les)g(nom)n(bres)f(suiv)-5 b(an)n(ts)28
b(quels)f(son)n(t)g(ceux)g(qui)h(p)r(euv)n(en)n(t)f(\352tre)h(des)f
(mesures)g(principales)f(d'angles.)p 0 TeXcolorgray -50
985 a(\(a\))p 0 TeXcolorgray 107 929 a FG(5)p FF(\031)p
107 966 92 4 v 132 1042 a FG(2)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1001 985 a FL(\(b\))p 0 TeXcolorgray 42
w FE(\000)1228 929 y FG(7)p FF(\031)p 1228 966 V 1232
1042 a FG(12)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2065 985 a FL(\(c\))p 0 TeXcolorgray 2218 929 a FE(\000)p
FG(11)p FF(\031)p 2218 966 198 4 v 2276 1042 a FG(12)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 3112 985
a FL(\(d\))p 0 TeXcolorgray 3274 929 a FG(7)p FF(\031)p
3274 966 92 4 v 3299 1042 a FG(4)p 0 TeXcolorgray -192
1204 a FL(2.)p 0 TeXcolorgray 42 w(D\351terminer)h(la)g(mesure)g
(principale)g(asso)r(ci\351e)f(\340)i(c)n(hacune)e(des)i(mesures)f
(suiv)-5 b(an)n(tes)26 b(:)p 0 TeXcolorgray -50 1409
a(\(a\))p 0 TeXcolorgray 107 1353 a FG(47)p FF(\031)p
107 1390 134 4 v 153 1466 a FG(3)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1001 1409 a FL(\(b\))p 0 TeXcolorgray
42 w FE(\000)1228 1353 y FG(61)p FF(\031)p 1228 1390
V 1273 1466 a FG(6)p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 2065 1409 a FL(\(c\))p 0 TeXcolorgray 2218
1353 a FE(\000)p FG(23)p FF(\031)p 2218 1390 198 4 v
2296 1466 a FG(5)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
3112 1409 a FL(\(d\))p 0 TeXcolorgray 3274 1353 a FE(\000)p
FG(131)p FF(\031)p 3274 1390 240 4 v 3373 1466 a FG(4)-293
1693 y FJ(V)132 b(Cosin)l(us)43 b(et)h(sin)l(us)f(d'un)h(nom)l(bre)f
(r\351el)-293 1892 y FH(1)112 b(D\351\034nition)p 0 TeXcolorgray
-293 3389 a

 -293 3389 a -293 3389 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 171.14555 lineto

 521.58136 171.14555 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 171.14555 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 167.9122 lineto

 0.3985 169.47784 1.6677 170.74706 3.23335 170.74706 curveto

 518.348 170.74706 lineto

 519.91365 170.74706 521.18286 169.47784 521.18286 167.9122 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 167.9122 lineto

 0.3985 169.47784 1.6677 170.74706 3.23335 170.74706 curveto

 518.348 170.74706 lineto

 519.91365 170.74706 521.18286 169.47784 521.18286 167.9122 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 167.9122 lineto

 0.3985 169.47784 1.6677 170.74706 3.23335 170.74706 curveto

 518.348 170.74706 lineto

 519.91365 170.74706 521.18286 169.47784 521.18286 167.9122 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0
TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 3389 a
 0 setgray
 -293 3389 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -970 x FL(Dans)45
b(le)h(plan)f(rapp)r(ort\351)g(a)g(un)h(rep)r(\350re)e(orthonorm\351)g
(direct)-293 2531 y FG(\()p FF(O)r FG(;)-159 2474 y FE(\000)-38
b(!)-159 2531 y FF(O)r(I)9 b(;)-12 2474 y FE(\000)-29
b(!)-12 2531 y FF(O)r(J)8 b FG(\))30 b FL(soit)g FF(M)38
b FL(le)30 b(p)r(oin)n(t)g(du)g(cercle)f(trigonom\351trique)f
FE(C)-293 2631 y FL(image)f(du)h(r\351el)f FF(x)p FL(.)h(On)f
(d\351\034nit)i(:)p 0 TeXcolorgray -169 2896 a FE(\017)p
0 TeXcolorgray 42 w FL(le)j(cosin)n(us)f(de)i FF(x)g
FL(qui)f(est)g(l'abscisse)g(de)g FF(M)9 b FL(.)32 b(Il)h(est)f(not\351)
-85 2996 y FG(cos)o(\()p FF(x)p FG(\))c FL(ou)g FG(cos)13
b FF(x)p FL(.)p 0 TeXcolorgray -169 3162 a FE(\017)p
0 TeXcolorgray 42 w FL(le)35 b(sin)n(us)g(de)h FF(x)f
FL(qui)h(est)f(l'ordonn\351e)g(de)g FF(M)9 b FL(.)35
b(Il)h(est)f(not\351)-85 3262 y FG(sin\()p FF(x)p FG(\))28
b FL(ou)g FG(sin)13 b FF(x)p FL(.)p 0 TeXcolorgray 0
TeXcolorgray 2483 2822 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 68.28642
 0 -68.28642  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa -68.28642  68.28642  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -68.28642  def /maxTickline
68.28642  def /dT 3729359 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 56.9055
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 68.28642 0.0 -68.28642   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28642 0.0 -68.28642 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 68.28642
 0 -68.28642  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -68.28642  68.28642  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -68.28642  def /maxTickline
68.28642  def /dT 3729359 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 56.9055  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 68.28642 0.0 -68.28642   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28642 0.0 -68.28642 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 56.9055  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 56.9055  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 56.9055  def /dT 3729359 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 56.9055  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 56.9055  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 56.9055
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.9055
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 56.9055  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 56.9055  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 56.9055  def /dT 3729359 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 56.9055  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 56.9055
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.9055
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2483 2822 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 2483 2822 a 2483
2822 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2483 2822 a 2398 2897 a Fy(O)2483 2822 y
tx@Dict begin  PutEnd  end
 2483
2822 a 2483 2822 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 2483 2822 a 2483 2822 a
tx@Dict begin { 56.9055 0.0 } PutCoor PutBegin  end
 2483 2822
a 2512 2897 a Fx(I)2483 2822 y
tx@Dict begin  PutEnd  end
 2483 2822 a 2483 2822
a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 2483 2822 a 2483 2822 a
tx@Dict begin { 0.0 56.9055 } PutCoor PutBegin  end
 2483 2822 a 2408 2793 a Fx(J)2483
2822 y
tx@Dict begin  PutEnd  end
 2483 2822 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor   0.0 0.0
2 copy moveto 56.9055 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.25 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
2483 2822 a
tx@Dict begin  gsave STV CP T /ps@rot 50. def grestore  end
 2483 2822 a 2483 2822 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2483 2822 a 2483
2822 a
tx@Dict begin ps@rot  RotBegin  end
 2483 2822 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.9055 0.0 0.0 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2483 2822 a
tx@Dict begin RotEnd  end
 2483 2822 a 2483 2822 a
tx@Dict begin  PutEnd  end
 2483 2822 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 36.53323 0.0 36.53323
43.58998 0.0 43.58998   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 2483 2822 a
tx@Dict begin  gsave STV CP T /ps@refangle 45  def grestore  end
 2483 2822 a 2483
2822 a
tx@Dict begin { 36.53323 43.58998 } PutCoor PutBegin  end
 2483 2822 a 0.6 0 0.48 TeXcolorrgb 2512 2793 a
FF(M)p 0 TeXcolorgray 2483 2822 a
tx@Dict begin  PutEnd  end
 2483 2822 a 2483 2822
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 2483 2822 a 2483 2822 a
tx@Dict begin { 36.53323 0.0 } PutCoor PutBegin  end
 2483 2822 a 2396 2899 a FG(cos)g
FF(x)2483 2822 y
tx@Dict begin  PutEnd  end
 2483 2822 a 2483 2822 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 2483 2822 a
2483 2822 a
tx@Dict begin { 0.0 43.58998 } PutCoor PutBegin  end
 2483 2822 a 2278 2850 a FG(sin)h FF(x)2483
2822 y
tx@Dict begin  PutEnd  end
 2483 2822 a 2483 2822 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 2483 2822 a 2483 2822
a
tx@Dict begin { 17.07182 11.38092 } PutCoor PutBegin  end
 2483 2822 a 2524 2840 a FF(x)2483 2822 y
tx@Dict begin  PutEnd  end
 2483 2822
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
0.0 /y ED /x ED /r 22.76184 def /c 57.2957 r Div def /angleA 0. 0.0
c mul 2 div add def /angleB 50. 0.0 c mul 2 div sub def /angleAtoB
angleB angleA gt { true }{ false } ifelse def x y r angleA angleB {
ArrowB } r 0 gt { { sub } } { { add } } ifelse ArcArrow dup angleA
gt angleAtoB xor { pop angleA } if arc  gsave 0.8 SLW 0.6 0 0.48  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 0 TeXcolorgray
-293 3389 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 152.11055 ] concat

 pgfs


 -293 3389 a
 0 setgray
 -293 3389 a 0 TeXcolorgray
0 TeXcolorgray 77 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 3389 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 3389 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 71.0708 ] concat

 pgfs


 -293 3389 a
 0 setgray
 -293 3389 a
0 TeXcolorgray -222 3936 a

 -222 3936 a -222 3936 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 136.06436 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 3389 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 3672 a FH(2)112 b(Propri\351t\351s)-168 3825 y FE(8)p
FF(x)23 b FE(2)h FA(R)j FL(on)h(a)f(les)g(propri\351t\351s)f(suiv)-5
b(an)n(tes)27 b(:)p 0 TeXcolorgray -293 4582 a

 -293 4582
a -293 4582 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 82.18294 lineto

 521.58136 82.18294 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 82.18294 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 78.94958 lineto

 0.3985 80.51523 1.6677 81.78444 3.23335 81.78444 curveto

 518.348 81.78444 lineto

 519.91365 81.78444 521.18286 80.51523 521.18286 78.94958 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 78.94958 lineto

 0.3985 80.51523 1.6677 81.78444 3.23335 81.78444 curveto

 518.348 81.78444 lineto

 519.91365 81.78444 521.18286 80.51523 521.18286 78.94958 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 78.94958 lineto

 0.3985 80.51523 1.6677 81.78444 3.23335 81.78444 curveto

 518.348 81.78444 lineto

 519.91365 81.78444 521.18286 80.51523 521.18286 78.94958 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs



-293 4582 a
 0 setgray
 -293 4582 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -169 4243 a FE(\017)p 0
TeXcolorgray 42 w(\000)p FG(1)22 b Fk(6)g FG(cos)13 b
FF(x)24 b Fk(6)f FG(1)p 0 TeXcolorgray -169 4409 a FE(\017)p
0 TeXcolorgray 42 w(\000)p FG(1)f Fk(6)g FG(sin)14 b
FF(x)24 b Fk(6)e FG(1)p 0 TeXcolorgray -169 4575 a FE(\017)p
0 TeXcolorgray 42 w FG(cos)26 4541 y Fj(2)77 4575 y FF(x)d
FG(+)f(sin)328 4540 y Fj(2)379 4575 y FF(x)23 b FG(=)g(1)p
0 TeXcolorgray -293 4582 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 63.14793 ] concat

 pgfs


 -293 4582 a
 0 setgray
 -293 4582 a
0 TeXcolorgray 0 TeXcolorgray 77 x @beginspecial 0 @llx
-1 @lly 18 @urx 24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 4582 a FH(Propri\351t\351s)p 0 TeXcolorgray
0 TeXcolorgray -293 4582 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 26.5895 ] concat

 pgfs


 -293 4582 a
 0 setgray
 -293 4582 a
0 TeXcolorgray -222 4758 a

 -222 4758 a -222 4758 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 47.10175 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 4582 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 4864 a FH(3)112 b(V)-9 b(aleurs)38 b(remarquables)p
-168 5059 1670 4 v -168 5129 4 70 v 107 5129 V 362 5129
V 646 5129 V 930 5129 V 1214 5129 V 1498 5129 V -168
5295 4 166 v -115 5229 a FF(x)p 107 5295 V 283 w FG(0)p
362 5295 V 481 5173 a FF(\031)p 481 5210 51 4 v 485 5286
a FG(6)p 646 5295 4 166 v 764 5173 a FF(\031)p 764 5210
51 4 v 768 5286 a FG(4)p 930 5295 4 166 v 1048 5173 a
FF(\031)p 1048 5210 51 4 v 1052 5286 a FG(3)p 1214 5295
4 166 v 1332 5173 a FF(\031)p 1332 5210 51 4 v 1336 5286
a FG(2)p 1498 5295 4 166 v -168 5364 4 70 v 107 5364
V 362 5364 V 646 5364 V 930 5364 V 1214 5364 V 1498 5364
V -168 5368 1670 4 v -168 5437 4 70 v 107 5437 V 362
5437 V 646 5437 V 930 5437 V 1214 5437 V 1498 5437 V
-168 5642 4 206 v -115 5577 a(cos)13 b FF(x)p 107 5642
V 158 w FG(1)p 362 5642 V 450 5452 a FE(p)p 520 5452
42 4 v 520 5521 a FG(3)p 450 5558 111 4 v 485 5634 a(2)p
646 5642 4 206 v 734 5452 a FE(p)p 803 5452 42 4 v 69
x FG(2)p 734 5558 111 4 v 769 5634 a(2)p 930 5642 4 206
v 1053 5521 a(1)p 1053 5558 42 4 v 1053 5634 a(2)p 1214
5642 4 206 v 1337 5577 a(0)p 1498 5642 V -168 5712 4
70 v 107 5712 V 362 5712 V 646 5712 V 930 5712 V 1214
5712 V 1498 5712 V -168 5715 1670 4 v -168 5785 4 70
v 107 5785 V 362 5785 V 646 5785 V 930 5785 V 1214 5785
V 1498 5785 V -168 5990 4 206 v -115 5925 a(sin)h FF(x)p
107 5990 V 167 w FG(0)p 362 5990 V 485 5869 a(1)p 485
5906 42 4 v 485 5982 a(2)p 646 5990 4 206 v 734 5800
a FE(p)p 803 5800 42 4 v 69 x FG(2)p 734 5906 111 4 v
769 5982 a(2)p 930 5990 4 206 v 1018 5800 a FE(p)p 1087
5800 42 4 v 69 x FG(3)p 1018 5906 111 4 v 1053 5982 a(2)p
1214 5990 4 206 v 1337 5925 a(1)p 1498 5990 V -168 6060
4 70 v 107 6060 V 362 6060 V 646 6060 V 930 6060 V 1214
6060 V 1498 6060 V -168 6063 1670 4 v 0 TeXcolorgray
0 TeXcolorgray 2685 5985 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 125.19281
 0 -11.38179  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa -11.38179  125.19281  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -11.38179  def /maxTickline
125.19281  def /dT 7458719 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 113.81102  mul cntTick add def x abs MaxValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0 def }
if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul  moveto cntsubTick maxTickline STsize mul  lineto } { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
} ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat
subTwidth SLW subTColor subLSstroke grestore } if showOrigin { gsave
false { cntTick minTickline  moveto cntTick maxTickline  lineto } {
cntTick tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 113.81102
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 125.19281 0.0 -11.38179   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19281 0.0 -11.38179 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 125.19281
 0 -11.38179  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -11.38179  125.19281  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -11.38179  def /maxTickline
125.19281  def /dT 7458719 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 113.81102  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 113.81102  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 125.19281 0.0 -11.38179   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19281 0.0 -11.38179 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 113.81102  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 113.81102  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 113.81102  def /dT 7458719 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 113.81102  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 113.81102  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.81102
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81102
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.81102  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 113.81102  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 113.81102  def /dT 7458719 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 113.81102  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 113.81102  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.81102
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81102
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 2685 5985 a 2685
5985 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 2685 5985 a 2600 6060 a Fy(O)2685 5985 y
tx@Dict begin  PutEnd  end
 2685
5985 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def  0.0 0.0 /y ED /x
ED /r 113.81102 def /c 57.2957 r Div def /angleA 0. 0.0 c mul 2 div
add def /angleB 90. 0.0 c mul 2 div sub def /angleAtoB angleB angleA
gt { true }{ false } ifelse def x y r angleA angleB arc  gsave 1.25
SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 56.9055 98.56003
56.9055 98.56003 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 80.46446 80.46446
80.46446 80.46446 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 98.56003 56.9055
98.56003 56.9055 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 15.  def grestore  end
 2685
5985 a 2685 5985 a
tx@Dict begin { 98.56003 56.9055 } PutCoor PutBegin  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 5.0 8.45905 11.07062 6.85951 15.  Uput UUput } PutCoor
PutBegin  end
 2685 5985
a 0.6 0 0.48 TeXcolorrgb 2660 5946 a FF(\031)p 2660 5983
51 4 v 2664 6059 a FG(6)p 0 TeXcolorgray 2685 5985 a
tx@Dict begin  PutEnd  end

2685 5985 a 2685 5985 a
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 2685
5985 a 2685 5985 a
tx@Dict begin { 98.56003 0.0 } PutCoor PutBegin  end
 2685 5985 a 2638 6032 a Fw(p)p 2696
6032 36 3 v 2696 6087 a Fo(3)p 2638 6118 95 3 v 2667
6183 a(2)2685 5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 2685 5985
a 2685 5985 a
tx@Dict begin { 0.0 56.9055 } PutCoor PutBegin  end
 2685 5985 a 2598 5958 a Fo(1)p 2598 5989
36 3 v 2598 6054 a(2)2685 5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985
a
tx@Dict begin  gsave STV CP T /ps@refangle 30.  def grestore  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 80.46446 80.46446 } PutCoor PutBegin  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 5.0 8.45905 11.07062 6.85951 30.  Uput UUput } PutCoor
PutBegin  end
 2685
5985 a 0.6 0 0.48 TeXcolorrgb 2660 5946 a FF(\031)p 2660
5983 51 4 v 2664 6059 a FG(4)p 0 TeXcolorgray 2685 5985
a
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 2685
5985 a 2685 5985 a
tx@Dict begin { 80.46446 0.0 } PutCoor PutBegin  end
 2685 5985 a 2638 6032 a Fw(p)p 2696
6032 36 3 v 2696 6087 a Fo(2)p 2638 6118 95 3 v 2667
6183 a(2)2685 5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 2685 5985
a 2685 5985 a
tx@Dict begin { 0.0 80.46446 } PutCoor PutBegin  end
 2685 5985 a 2539 5912 a Fw(p)p 2598 5912
36 3 v 55 x Fo(2)p 2539 5998 95 3 v 2569 6063 a(2)2685
5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 45.  def grestore  end
 2685 5985 a 2685 5985
a
tx@Dict begin { 56.9055 98.56003 } PutCoor PutBegin  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 5.0 8.45905 11.07062 6.85951 45.  Uput UUput } PutCoor
PutBegin  end
 2685 5985 a 0.6 0 0.48 TeXcolorrgb
2660 5946 a FF(\031)p 2660 5983 51 4 v 2664 6059 a FG(3)p
0 TeXcolorgray 2685 5985 a
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  PutEnd  end
 2685
5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 56.9055 0.0 } PutCoor PutBegin  end
 2685 5985
a 2667 6069 a Fo(1)p 2667 6100 36 3 v 2667 6165 a(2)2685
5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 2685 5985 a 2685 5985
a
tx@Dict begin { 0.0 98.56003 } PutCoor PutBegin  end
 2685 5985 a 2539 5912 a Fw(p)p 2598 5912 36 3 v 55
x Fo(3)p 2539 5998 95 3 v 2569 6063 a(2)2685 5985 y
tx@Dict begin  PutEnd  end
 2685
5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 45  def grestore  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 0.0 113.81102 } PutCoor PutBegin  end
 2685 5985
a 0.6 0 0.48 TeXcolorrgb 2724 5842 a FF(\031)p 2724 5879
51 4 v 2728 5955 a FG(2)p 0 TeXcolorgray 2685 5985 a
tx@Dict begin  PutEnd  end

2685 5985 a 2685 5985 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 0.0 113.81102 } PutCoor PutBegin  end
 2685
5985 a 2608 6006 a Fo(1)2685 5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 2685
5985 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 2685 5985 a 2685 5985 a
tx@Dict begin { 113.81102 0.0 } PutCoor PutBegin  end
 2685 5985 a 2667 6069
a Fo(1)2685 5985 y
tx@Dict begin  PutEnd  end
 2685 5985 a 0 TeXcolorgray 3964 6381
a Fz(-5-)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray 0 TeXcolorgray
-293 -113 a FD(Metho)s(de)31 b(4)g(\(Sa)m(v)m(oir)i(trouv)m(er)g(la)f
(v)-5 b(aleur)32 b(exacte)g(d'un)g(sin)m(us)f(ou)g(d'un)h(cosin)m(us\))
p 0 TeXcolorgray -293 -13 a FL(Dans)c(c)n(hacun)e(des)i(cas)f(donner)g
(la)g(v)-5 b(aleur)27 b(exacte)g(des)g(nom)n(bres)f(suiv)-5
b(an)n(ts)28 b(:)p 0 TeXcolorgray -192 186 a(1.)p 0 TeXcolorgray
42 w FG(cos)o(\(2020)p FF(\031)s FG(\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 916 195 a FL(2.)p 0 TeXcolorgray
41 w FG(sin\()p FE(\000)1231 139 y FF(\031)p 1231 176
51 4 v 1235 252 a FG(2)1291 195 y(\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2023 213 a FL(3.)p 0 TeXcolorgray
41 w FG(cos\()2283 157 y(2)p FF(\031)p 2283 194 92 4
v 2308 270 a FG(3)2385 213 y(\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 713 w FL(4.)p 0 TeXcolorgray 42 w FG(sin\()3381
157 y(7)p FF(\031)p 3381 194 V 3406 270 a FG(6)3483 213
y(\))-293 469 y FH(4)112 b(Relations)38 b(trigonom\351triques)g(et)f
(angles)h(asso)s(ci\351s)p 0 TeXcolorgray -293 2630 a


-293 2630 a -293 2630 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 247.68231 lineto

 521.58136 247.68231 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 247.68231 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 244.44896 lineto

 0.3985 246.01462 1.6677 247.28381 3.23335 247.28381 curveto

 518.348 247.28381 lineto

 519.91365 247.28381 521.18286 246.01462 521.18286 244.44896 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 244.44896 lineto

 0.3985 246.01462 1.6677 247.28381 3.23335 247.28381 curveto

 518.348 247.28381 lineto

 519.91365 247.28381 521.18286 246.01462 521.18286 244.44896 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 244.44896 lineto

 0.3985 246.01462 1.6677 247.28381 3.23335 247.28381 curveto

 518.348 247.28381 lineto

 519.91365 247.28381 521.18286 246.01462 521.18286 244.44896 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 2630 a
 0 setgray
 -293 2630 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -1359 x FL(P)n(our)27 b(tout)h(nom)n(bre)
f(r\351el)g FF(x)p FL(,)377 1382 y Fl(\032)481 1449 y
FG(cos)o(\()p FE(\000)p FF(x)p FG(\))d(=)e(cos)13 b FF(x)481
1549 y FG(sin\()p FE(\000)p FF(x)p FG(\))23 b(=)g FE(\000)14
b FG(sin)f FF(x)-231 1669 y Fl(8)-231 1744 y(>)-231 1769
y(<)-231 1918 y(>)-231 1943 y(:)-116 1778 y FG(cos)9
1686 y Fl(\020)69 1722 y FF(\031)p 69 1759 51 4 v 73
1835 a FG(2)148 1778 y FE(\000)18 b FF(x)278 1686 y Fl(\021)351
1778 y FG(=)k(sin)14 b FF(x)-116 1947 y FG(sin)0 1855
y Fl(\020)60 1891 y FF(\031)p 60 1928 V 64 2004 a FG(2)138
1947 y FE(\000)k FF(x)268 1855 y Fl(\021)342 1947 y FG(=)k(cos)13
b FF(x)809 1669 y Fl(8)809 1744 y(>)809 1769 y(<)809
1918 y(>)809 1943 y(:)924 1778 y FG(cos)1049 1686 y Fl(\020)1109
1722 y FF(\031)p 1109 1759 V 1113 1835 a FG(2)1187 1778
y(+)18 b FF(x)1317 1686 y Fl(\021)1390 1778 y FG(=)23
b FE(\000)14 b FG(sin)f FF(x)924 1947 y FG(sin)1040 1855
y Fl(\020)1099 1891 y FF(\031)p 1099 1928 V 1103 2004
a FG(2)1178 1947 y(+)18 b FF(x)1308 1855 y Fl(\021)1381
1947 y FG(=)23 b(cos)13 b FF(x)-213 2079 y Fl(\032)-110
2147 y FG(cos)g(\()q FF(\031)22 b FE(\000)c FF(x)p FG(\))23
b(=)g FE(\000)14 b FG(cos)e FF(x)-110 2246 y FG(sin)i(\()q
FF(\031)21 b FE(\000)d FF(x)p FG(\))24 b(=)f(sin)14 b
FF(x)848 2079 y Fl(\032)952 2147 y FG(cos)f(\()p FF(\031)22
b FG(+)c FF(x)p FG(\))23 b(=)g FE(\000)14 b FG(cos)f
FF(x)952 2246 y FG(sin)g(\()q FF(\031)21 b FG(+)d FF(x)p
FG(\))24 b(=)f FE(\000)14 b FG(sin)f FF(x)2947 1745 y
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.0 0.0 2 copy moveto 71.13188
0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 0.8 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35803 0.0 -85.35803 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 85.35803 0.0 -85.35803   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0 0.0 /y
ED /x ED /r 28.45232 def /c 57.2957 r Div def /angleA 0. 0.0 c mul
2 div add def /angleB 19. 0.0 c mul 2 div sub def /angleAtoB angleB
angleA gt { true }{ false } ifelse def x y r angleA angleB { ArrowB
} r 0 gt { { sub } } { { add } } ifelse ArcArrow dup angleA gt angleAtoB
xor { pop angleA } if arc  gsave 0.6 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3213 1715 a Fi(x)2947
1745 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 66.86414 21.33977 -66.86414 -21.33977
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 66.86414 -21.33977 -66.86414 21.33977
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 21.33977 -66.86414 -21.33977 66.86414
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -21.33977 -66.86414 21.33977 66.86414
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 66.86414 21.33977 66.86414 -21.33977
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -66.86414 21.33977 -66.86414 -21.33977
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 66.86414 22.76271 -66.86414 22.76271
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 66.86414 -22.76271 -66.86414 -22.76271
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76271 66.86414 -22.76271 66.86414
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76271 -66.86414 -22.76271 -66.86414
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -22.76271 -66.86414 -22.76271 66.86414
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76271 -66.86414 22.76271 66.86414
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
3596 1762 a Fh(0)3596 1508 y Fi(x)3537 2010 y Fg(\000)p
Fi(x)2061 1538 y(\031)26 b Fg(\000)d Fi(x)2061 1951 y(\031)j
Fh(+)c Fi(x)2120 1745 y(\031)2543 969 y(\031)p 2543 1013
59 4 v 2548 1104 a Fh(2)2634 1036 y(+)g Fi(x)3104 969
y(\031)p 3104 1013 V 3109 1104 a Fh(2)3195 1036 y Fg(\000)h
Fi(x)2927 880 y(\031)p 2927 924 V 2932 1016 a Fh(2)3537
1833 y FG(cos)13 b Ff(x)2888 1124 y FG(sin)h Ff(x)p 0
TeXcolorgray -293 2630 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 228.64731 ] concat

 pgfs


 -293 2630 a
 0 setgray
 -293 2630 a
0 TeXcolorgray 0 TeXcolorgray 78 x @beginspecial 0 @llx
-1 @lly 18 @urx 24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 2630 a FH(Propri\351t\351s)p 0 TeXcolorgray
0 TeXcolorgray -293 2630 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 109.33919 ] concat

 pgfs


 -293 2630 a
 0 setgray
 -293 2630 a
0 TeXcolorgray -222 3496 a

 -222 3496 a -222 3496 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 212.60112 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 2630 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 2854 a FD(Remarque)32 b(2)p 0 TeXcolorgray
0 TeXcolorgray -169 2953 a FE(\017)p 0 TeXcolorgray 42
w FL(Il)27 b(faut)h(sa)n(v)n(oir)d(retrouv)n(er)h(ces)h(form)n(ules)g
(\340)g(partir)f(d'un)j(dessin)p 0 TeXcolorgray -169
3150 a FE(\017)p 0 TeXcolorgray 42 w FL(Les)d(relations)f
FG(cos)o(\()552 3094 y FF(\031)p 552 3131 51 4 v 556
3207 a FG(2)629 3150 y FE(\000)16 b FF(x)p FG(\))23 b(=)g(sin\()p
FF(x)p FG(\))k FL(et)g FG(sin\()1380 3094 y FF(\031)p
1380 3131 V 1384 3207 a FG(2)1457 3150 y FE(\000)16 b
FF(x)p FG(\))23 b(=)g(cos)o(\()p FF(x)p FG(\))28 b FL(son)n(t)e
(tr\350s)g(imp)r(ortan)n(tes)f(car)h(elles)g(p)r(ermetten)n(t)h(de)f
(transformer)-85 3270 y(un)i(sin)n(us)f(en)g(cosin)n(us)g(et)h(vice)f
(v)n(ersa.)p 0 TeXcolorgray -293 3424 a FD(Metho)s(de)k(5)g(\(Sa)m(v)m
(oir)i(utiliser)d(les)h(angles)g(asso)s(ci\351s\))p 0
TeXcolorgray 0 TeXcolorgray -192 3523 a FL(1.)p 0 TeXcolorgray
42 w(Soit)c FF(x)h FL(un)g(nom)n(bre)f(r\351el,)g(exprimer)g(les)g(nom)
n(bres)f(suiv)-5 b(an)n(ts)27 b(en)h(fonction)g(de)f
FG(cos)o(\()p FF(x)p FG(\))i FL(ou)e FF(sin)p FG(\()p
FF(x)p FG(\))p 0 TeXcolorgray -50 3720 a FL(\(a\))p 0
TeXcolorgray 41 w(A=)p FG(cos)o(\()377 3664 y FF(\031)p
377 3701 V 381 3777 a FG(2)456 3720 y FE(\000)18 b FF(x)p
FG(\))h(+)f(cos\(2)p FF(\031)j FG(+)d FF(x)p FG(\))h(+)f(2)c(sin\()p
FF(\031)22 b FG(+)c FF(x)p FG(\))p 0 TeXcolorgray -55
3910 a FL(\(b\))p 0 TeXcolorgray 42 w FF(B)27 b FG(=)c(3)14
b(cos)o(\()p FF(\031)22 b FG(+)c FF(x)p FG(\))h(+)f(5)p
FF(sin)p FG(\()1009 3854 y FF(\031)p 1009 3891 V 1013
3967 a FG(2)1087 3910 y FE(\000)g FF(x)p FG(\))h(+)f(2)c(sin)o(\()p
FE(\000)p FF(x)p FG(\))p 0 TeXcolorgray -192 4173 a FL(2.)p
0 TeXcolorgray 42 w(On)27 b(admet)h(que)f FG(cos)o(\()614
4117 y FF(\031)p 614 4154 V 618 4230 a FG(5)675 4173
y(\))c(=)828 4117 y(1)18 b(+)971 4049 y FE(p)p 1040 4049
42 4 v 68 x FG(5)p 828 4154 254 4 v 934 4230 a(4)p 0
TeXcolorgray -50 4397 a FL(\(a\))p 0 TeXcolorgray 41
w(En)29 b(d\351duire)e(la)g(v)-5 b(aleur)27 b(exacte)g(de)h
FG(sin\()1373 4341 y FF(\031)p 1373 4378 51 4 v 1377
4454 a FG(5)1433 4397 y(\))p 0 TeXcolorgray -55 4558
a FL(\(b\))p 0 TeXcolorgray 42 w(Donner)f(ensuite)h(la)f(v)-5
b(aleur)27 b(exacte)g(de)h(cosin)n(us)e(et)i(sin)n(us)f(des)h(nom)n
(bres)e(r\351els)h(suiv)-5 b(an)n(ts)27 b(:)p 0 TeXcolorgray
165 4784 a(i.)p 0 TeXcolorgray 263 4727 a FG(4)p FF(\031)p
263 4765 92 4 v 288 4841 a FG(5)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 950 4766 a FL(ii.)p 0 TeXcolorgray 41
w FE(\000)1135 4710 y FF(\031)p 1135 4747 51 4 v 1139
4823 a FG(5)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1735 4784 a FL(iii.)p 0 TeXcolorgray 1878 4727 a FG(6)p
FF(\031)p 1878 4765 92 4 v 1903 4841 a FG(5)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2545 4784 a FL(iv.)p 0
TeXcolorgray 2686 4727 a FG(3)p FF(\031)p 2686 4765 V
2711 4841 a FG(5)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
3376 4766 a FL(v.)p 0 TeXcolorgray 3494 4710 a FF(a\031)p
3494 4747 95 4 v 3520 4823 a FG(5)p 0 TeXcolorgray 3964
6381 a Fz(-6-)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
-88 a FH(5)112 b(\311quations)38 b(trigonom\351triques)p
0 TeXcolorgray -293 2799 a

 -293 2799 a -293 2799 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 334.71295 lineto

 521.58136 334.71295 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 334.71295 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 331.4796 lineto

 0.3985 333.04526 1.6677 334.31445 3.23335 334.31445 curveto

 518.348 334.31445 lineto

 519.91365 334.31445 521.18286 333.04526 521.18286 331.4796 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 331.4796 lineto

 0.3985 333.04526 1.6677 334.31445 3.23335 334.31445 curveto

 518.348 334.31445 lineto

 519.91365 334.31445 521.18286 333.04526 521.18286 331.4796 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 331.4796 lineto

 0.3985 333.04526 1.6677 334.31445 3.23335 334.31445 curveto

 518.348 334.31445 lineto

 519.91365 334.31445 521.18286 333.04526 521.18286 331.4796 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0
TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 2799
a
 0 setgray
 -293 2799 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-2439 x FL(Le)c(cercle)g(trigonom\351trique)f(et)i(la)f
(con\034guration)f(des)h(angles)g(asso)r(ci\351s)f(nous)h(p)r(ermetten)
n(t)h(de)g(r\351soudre)d(des)j(\351quations)e(du)-293
459 y(t)n(yp)r(e)28 b FG(cos)13 b FF(x)23 b FG(=)g(cos)13
b FF(a)28 b FL(et)f FG(sin)14 b FF(x)24 b FG(=)e(sin)14
b FF(a)28 b FL(o\371)f FF(a)g FL(est)h(un)g(r\351el)f(conn)n(u.)p
0 TeXcolorgray -169 625 a FE(\017)p 0 TeXcolorgray 42
w Fe(\311quation)f FG(cos)13 b FF(x)23 b FG(=)g(cos)13
b FF(a)-85 1022 y FL(Soit)33 b FF(a)h FL(un)g(r\351el)f(donn\351.)g
(Les)h(solutions)e(dans)i FA(R)f FL(de)h(l'\351quation)f
FG(cos)13 b FF(x)34 b FG(=)e(cos)13 b FF(a)-85 1122 y
FL(son)n(t)27 b(:)394 1133 y Fl(\()461 1219 y FF(x)84
b FG(=)22 b FF(a)d FG(+)f(2)p FF(k)s(\031)461 1338 y(x)84
b FG(=)22 b FE(\000)p FF(a)c FG(+)g(2)p FF(k)s(\031)1078
1275 y FL(o\371)51 b FF(k)i FL(est)28 b(un)g(en)n(tier)f(relatif.)p
0 TeXcolorgray 0 TeXcolorgray 3322 1193 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 61.45789
 0 -61.45789  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa -61.45789  61.45789  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -56.33685  def /maxTickline
61.45789  def /dT 3356429 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 51.21504  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 51.21504
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 61.45789 0.0 -56.33685   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 61.45789 0.0 -61.45789 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 61.45789
 0 -56.33685  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -56.33685  61.45789  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -61.45789  def /maxTickline
61.45789  def /dT 3356429 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 51.21504  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 51.21504  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 61.45789 0.0 -56.33685   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 61.45789 0.0 -61.45789 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 51.21504  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 51.21504  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 51.21504  def /dT 3356429 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 51.21504  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 51.21504  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 51.21504
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 51.21504
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 51.21504  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 51.21504  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 51.21504  def /dT 3356429 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 51.21504  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 51.21504  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 51.21504
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 51.21504
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 3322
1193 a 3322 1193 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3322 1193 a 3238 1268 a Fy(O)3322
1193 y
tx@Dict begin  PutEnd  end
 3322 1193 a 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 3322 1193 a 3322 1193
a
tx@Dict begin { 51.21504 0.0 } PutCoor PutBegin  end
 3322 1193 a 0.1 0.05 0.5 TeXcolorrgb 3352 1268 a Fx(I)p
0 TeXcolorgray 3322 1193 a
tx@Dict begin  PutEnd  end
 3322 1193 a 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 3322
1193 a 3322 1193 a
tx@Dict begin { 0.0 51.21504 } PutCoor PutBegin  end
 3322 1193 a 0.1 0.05 0.5 TeXcolorrgb
3248 1164 a Fx(J)p 0 TeXcolorgray 3322 1193 a
tx@Dict begin  PutEnd  end
 3322 1193
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor   0.0 0.0
2 copy moveto 51.21504 0 CLW mul round sub dup 0 rmoveto 0 360 arc
closepath  gsave 1.25 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@rot 50. def grestore  end

3322 1193 a 3322 1193 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3322 1193 a 3322 1193 a
tx@Dict begin ps@rot  RotBegin  end
 3322
1193 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 51.21504 0.0 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3322 1193
a
tx@Dict begin RotEnd  end
 3322 1193 a 3322 1193 a
tx@Dict begin  PutEnd  end
 3322 1193 a 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@rot -50. def grestore  end
 3322
1193 a 3322 1193 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3322 1193 a 3322 1193 a
tx@Dict begin ps@rot  RotBegin  end
 3322 1193
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 51.21504 0.0 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3322 1193 a
tx@Dict begin RotEnd  end

3322 1193 a 3322 1193 a
tx@Dict begin  PutEnd  end
 3322 1193 a 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@refangle 45  def grestore  end
 3322
1193 a 3322 1193 a
tx@Dict begin { 32.87996 39.23105 } PutCoor PutBegin  end
 3322 1193 a 0.6 0 0.48 TeXcolorrgb
3352 1143 a FF(M)9 b FG(\()p FF(a)p FG(\))p 0 TeXcolorgray
3322 1193 a
tx@Dict begin  PutEnd  end
 3322 1193 a 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 3322 1193 a 3322
1193 a
tx@Dict begin { 32.87996 -39.23105 } PutCoor PutBegin  end
 3322 1193 a 0.6 0 0.48 TeXcolorrgb 3352 1285 a
FF(N)g FG(\()p FE(\000)p FF(a)p FG(\))p 0 TeXcolorgray
3322 1193 a
tx@Dict begin  PutEnd  end
 3322 1193 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 32.87996 -39.23105 32.87996
39.23105   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 32.87996 0.0 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial 3322 1193 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 3322
1193 a 3322 1193 a
tx@Dict begin { 16.90105 0.0 } PutCoor PutBegin  end
 3322 1193 a 1 0 0 TeXcolorrgb 3238
1271 a FG(cos)k FF(a)p 0 TeXcolorgray 3322 1193 a
tx@Dict begin  PutEnd  end
 3322
1193 a 0 TeXcolorgray -169 1806 a FE(\017)p 0 TeXcolorgray
42 w Fe(\311quation)26 b FG(sin)13 b FF(x)24 b FG(=)f(sin)13
b FF(a)-85 2182 y FL(Soit)35 b FF(a)f FL(un)i(r\351el)e(donn\351.)h
(Les)f(solutions)g(dans)h FA(R)g FL(de)g(l'\351quation)f
FG(sin)14 b FF(x)36 b FG(=)e(sin)14 b FF(a)-85 2281 y
FL(son)n(t)27 b(:)351 2293 y Fl(\()418 2378 y FF(x)83
b FG(=)23 b FF(a)18 b FG(+)g(2)p FF(k)s(\031)418 2498
y(x)83 b FG(=)23 b FF(\031)e FE(\000)d FF(a)h FG(+)f(2)p
FF(k)s(\031)1122 2435 y FL(o\371)50 b FF(k)k FL(est)27
b(un)h(en)n(tier)f(relatif.)p 0 TeXcolorgray 0 TeXcolorgray
3322 2374 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 61.45789
 0 -61.45789  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa -61.45789  61.45789  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -56.33685  def /maxTickline
61.45789  def /dT 3356429 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 51.21504  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 51.21504
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 61.45789 0.0 -56.33685   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 61.45789 0.0 -61.45789 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 61.45789
 0 -56.33685  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 3 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -56.33685  61.45789  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -61.45789  def /maxTickline
61.45789  def /dT 3356429 abs 65536 div viceversa { neg } if def /DT
1 abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT
subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart
exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor
{ 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 51.21504  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 51.21504  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 61.45789 0.0 -56.33685   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.75 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 61.45789 0.0 -61.45789 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.75 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 51.21504  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 51.21504  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 51.21504  def /dT 3356429 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 51.21504  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 51.21504  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 51.21504
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 51.21504
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 51.21504  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 3 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 51.21504  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 51.21504  def /dT 3356429 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 4.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 51.21504  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 51.21504  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 51.21504
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 51.21504
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
3322 2374 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 3322 2374 a 3322 2374 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3322 2374 a 3238
2449 a Fy(O)3322 2374 y
tx@Dict begin  PutEnd  end
 3322 2374 a 3322 2374 a
tx@Dict begin  gsave STV CP T /ps@refangle -135  def grestore  end
 3322
2374 a 3322 2374 a
tx@Dict begin { 51.21504 0.0 } PutCoor PutBegin  end
 3322 2374 a 0.1 0.05 0.5 TeXcolorrgb
3352 2449 a Fx(I)p 0 TeXcolorgray 3322 2374 a
tx@Dict begin  PutEnd  end
 3322 2374
a 3322 2374 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 3322 2374 a 3322 2374 a
tx@Dict begin { 0.0 51.21504 } PutCoor PutBegin  end
 3322 2374 a 0.1 0.05 0.5
TeXcolorrgb 3248 2345 a Fx(J)p 0 TeXcolorgray 3322 2374
a
tx@Dict begin  PutEnd  end
 3322 2374 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor   0.0 0.0
2 copy moveto 51.21504 0 CLW mul round sub dup 0 rmoveto 0 360 arc
closepath  gsave 1.25 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
3322 2374 a
tx@Dict begin  gsave STV CP T /ps@rot 40. def grestore  end
 3322 2374 a 3322 2374 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3322 2374 a 3322
2374 a
tx@Dict begin ps@rot  RotBegin  end
 3322 2374 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 51.21504 0.0 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
3322 2374 a
tx@Dict begin RotEnd  end
 3322 2374 a 3322 2374 a
tx@Dict begin  PutEnd  end
 3322 2374 a 3322
2374 a
tx@Dict begin  gsave STV CP T /ps@rot 140. def grestore  end
 3322 2374 a 3322 2374 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 3322 2374 a 3322 2374
a
tx@Dict begin ps@rot  RotBegin  end
 3322 2374 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 51.21504 0.0 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.25 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
3322 2374 a
tx@Dict begin RotEnd  end
 3322 2374 a 3322 2374 a
tx@Dict begin  PutEnd  end
 3322 2374 a 3322
2374 a
tx@Dict begin  gsave STV CP T /ps@refangle 45  def grestore  end
 3322 2374 a 3322 2374 a
tx@Dict begin { 39.23105 32.87996 } PutCoor PutBegin  end
 3322 2374 a 0.6 0 0.48
TeXcolorrgb 3352 2324 a FF(M)9 b FG(\()p FF(a)p FG(\))p
0 TeXcolorgray 3322 2374 a
tx@Dict begin  PutEnd  end
 3322 2374 a 3322 2374 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 3322
2374 a 3322 2374 a
tx@Dict begin { -35.85037 32.87996 } PutCoor PutBegin  end
 3322 2374 a 0.6 0 0.48 TeXcolorrgb
2957 2324 a FF(N)g FG(\()p FF(\031)22 b FE(\000)c FF(a)p
FG(\))p 0 TeXcolorgray 3322 2374 a
tx@Dict begin  PutEnd  end
 3322 2374 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 39.23105 32.87996 -39.23105
32.87996   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 32.87996 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.5 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
3322 2374 a
tx@Dict begin  gsave STV CP T /ps@refangle 180  def grestore  end
 3322 2374 a 3322 2374 a
tx@Dict begin { 0.0 16.43997 } PutCoor PutBegin  end
 3322 2374 a 1 0 0
TeXcolorrgb 3121 2402 a FG(sin)c FF(a)p 0 TeXcolorgray
3322 2374 a
tx@Dict begin  PutEnd  end
 3322 2374 a 0 TeXcolorgray -293 2799 a


 pgfr

 restore
 0
TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 315.67795 ] concat

 pgfs



-293 2799 a
 0 setgray
 -293 2799 a 0 TeXcolorgray 0 TeXcolorgray
78 x @beginspecial 0 @llx -1 @lly 18 @urx 24 @ury 169
@rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 2799 a FH(Propri\351t\351s)p 0 TeXcolorgray
0 TeXcolorgray -293 2799 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 152.85449 ] concat

 pgfs


 -293 2799 a
 0 setgray
 -293 2799 a
0 TeXcolorgray -222 4027 a

 -222 4027 a -222 4027 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 299.63176 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 2799 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 3028 a FD(Metho)s(de)31 b(6)g(\(Sa)m(v)m(oir)i
(r\351soudre)e(des)h(\351quations)f(trigonom\351triques\))p
0 TeXcolorgray -293 3127 a FL(R\351soudre)c(dans)g FG(])18
b FE(\000)g FF(\031)s FG(;)c FF(\031)s FG(])p FL(,)29
b(puis)e(dans)g FA(R)h FL(et)g(en\034n)g(dans)f FG([0;)14
b(2)p FF(\031)s FG([)27 b FL(les)g(\351quations)g(suiv)-5
b(an)n(tes)27 b(:)p 0 TeXcolorgray -192 3375 a(1.)p 0
TeXcolorgray 42 w FG(cos)13 b FF(x)23 b FG(=)208 3250
y FE(p)p 277 3250 42 4 v 69 x FG(2)p 208 3356 111 4 v
242 3432 a(2)p 0 TeXcolorgray -192 3608 a FL(2.)p 0 TeXcolorgray
42 w FG(sin)13 b FF(x)24 b FG(=)f FE(\000)264 3551 y
FG(1)p 264 3588 42 4 v 264 3664 a(2)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 916 3364 a FL(3.)p 0 TeXcolorgray
41 w FG(cos)o(\()p FF(x)p FG(\))h(=)f(sin)1472 3247 y
Fl(\022)1543 3308 y FG(3)p FF(\031)p 1543 3345 92 4 v
1568 3421 a FG(4)1645 3247 y Fl(\023)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2023 3353 a FL(4.)p 0 TeXcolorgray
41 w FG(cos\(2)p FF(x)p FG(\))g(=)2515 3297 y(1)p 2515
3334 42 4 v 2515 3410 a(2)p 0 TeXcolorgray 2023 3608
a FL(5.)p 0 TeXcolorgray 41 w FG(sin)2245 3515 y Fl(\020)2295
3608 y FF(x)c FE(\000)2454 3551 y FF(\031)p 2454 3588
51 4 v 2458 3664 a FG(6)2514 3515 y Fl(\021)2587 3608
y FG(=)2684 3483 y FE(p)p 2753 3483 42 4 v 68 x FG(3)p
2684 3588 111 4 v 2719 3664 a(2)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -293 3788 a FD(Metho)s(de)31 b(7)p 0 TeXcolorgray
-293 3888 a FL(QCM)c(\(plusieurs)h(r\351p)r(onses)e(p)r(ossibles\))p
0 TeXcolorgray -192 4102 a(1.)p 0 TeXcolorgray 42 w(Soit)h
FF(x)d FE(2)f FG([)p FF(\031)s FG(;)14 b(2)p FF(\031)s
FG(])28 b FL(tel)g(que)f FG(cos\()p FF(x)p FG(\))d(=)e
FE(\000)1170 4046 y FG(4)p 1170 4083 42 4 v 1170 4159
a(5)1221 4102 y FL(.)28 b(Alors)f(on)g(a)g(:)879 4360
y FG(sin\()p FF(x)p FG(\))d FE(\024)f FG(0)179 b(sin)1527
4325 y Fj(2)1564 4360 y FG(\()p FF(x)p FG(\))24 b(=)1797
4304 y(1)p 1797 4341 V 1797 4417 a(5)2028 4360 y(sin\()p
FF(x)p FG(\))g(=)f(0)p FF(:)p FG(6)179 b(sin\()p FF(x)p
FG(\))24 b(=)e FE(\000)3038 4304 y FG(3)p 3038 4341 V
3038 4417 a(5)p 0 TeXcolorgray -192 4662 a FL(2.)p 0
TeXcolorgray 42 w(Soit)27 b FF(x)d FE(2)234 4545 y Fl(\024)288
4606 y FF(\031)p 288 4643 51 4 v 292 4719 a FG(2)348
4662 y(;)395 4606 y(3)p FF(\031)p 395 4643 92 4 v 420
4719 a FG(2)497 4545 y Fl(\025)568 4662 y FL(tel)k(que)g
FG(sin\()p FF(x)p FG(\))c(=)1177 4606 y(21)p 1177 4643
84 4 v 1177 4719 a(29)1270 4662 y FL(.)k(Alors)f(on)g(a)g(:)652
4944 y FG(cos)o(\()p FF(x)p FG(\))d FE(\024)f FG(0)179
b(cos)o(\()p FF(x)p FG(\))24 b(=)1541 4839 y Fl(q)p 1624
4839 395 4 v 105 x FG(1)18 b FE(\000)g FG(sin)1869 4909
y Fj(2)1906 4944 y FG(\()p FF(x)p FG(\))181 b(cos)o(\()p
FF(x)p FG(\))24 b(=)f FE(\000)2607 4888 y FG(20)p 2607
4925 84 4 v 2607 5001 a(29)2879 4944 y(cos\()p FF(x)p
FG(\))h(=)3223 4888 y(20)p 3223 4925 V 3223 5001 a(29)p
0 TeXcolorgray -192 5235 a FL(3.)p 0 TeXcolorgray 42
w(Soit)j FF(x)d FE(2)234 5143 y Fl(h)273 5235 y FE(\000)348
5179 y FF(\031)p 348 5216 51 4 v 352 5292 a FG(2)408
5235 y(;)455 5179 y FF(\031)p 455 5216 V 459 5292 a FG(2)515
5143 y Fl(i)582 5235 y FL(tel)k(que)g FG(sin)o(\()p FF(x)p
FG(\))d(=)1191 5179 y(1)p 1191 5216 42 4 v 1191 5292
a(4)1243 5235 y FL(.)i(Alors)g(on)g(a)h(:)791 5515 y
FG(cos)o(\()p FF(x)p FG(\))c FE(\024)f FG(0)179 b(cos)o(\()p
FF(x)p FG(\))24 b(=)1690 5458 y(3)p 1690 5496 V 1690
5572 a(4)1921 5515 y(cos)o(\()p FF(x)p FG(\))g(=)f FE(\000)2330
5390 y(p)p 2399 5390 84 4 v 68 x FG(15)p 2330 5496 153
4 v 2385 5572 a(4)2671 5515 y(cos\()p FF(x)p FG(\))h(=)3015
5390 y FE(p)p 3085 5390 84 4 v 3085 5458 a FG(15)p 3015
5496 153 4 v 3071 5572 a(4)p 0 TeXcolorgray 3964 6381
a Fz(-7-)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
-92 a FJ(VI)132 b(F)-11 b(onctions)43 b(cosin)l(us)h(et)g(sin)l(us)-293
107 y FH(1)112 b(D\351\034nitions)p 0 TeXcolorgray -293
717 a

 -293 717 a -293 717 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 63.80669 lineto

 521.58136 63.80669 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 63.80669 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 60.57333 lineto

 0.3985 62.13899 1.6677 63.40819 3.23335 63.40819 curveto

 518.348 63.40819 lineto

 519.91365 63.40819 521.18286 62.13899 521.18286 60.57333 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 60.57333 lineto

 0.3985 62.13899 1.6677 63.40819 3.23335 63.40819 curveto

 518.348 63.40819 lineto

 519.91365 63.40819 521.18286 62.13899 521.18286 60.57333 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 60.57333 lineto

 0.3985 62.13899 1.6677 63.40819 3.23335 63.40819 curveto

 518.348 63.40819 lineto

 519.91365 63.40819 521.18286 62.13899 521.18286 60.57333 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 717 a
 0 setgray
 -293 717 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -169 535 a
FE(\017)p 0 TeXcolorgray 42 w FL(La)27 b(fonction)g(cosin)n(us,)g
(not\351e)g FG(cos)o FL(,)h(est)g(la)f(fonction)g(d\351\034nie)h(sur)f
FA(R)h FL(par)f FG(cos)22 b(:)h FF(x)g FE(7!)g FG(cos)13
b FF(x)p FL(.)p 0 TeXcolorgray -169 701 a FE(\017)p 0
TeXcolorgray 42 w FL(La)27 b(fonction)g(sin)n(us,)g(not\351e)h
FG(sin)p FL(,)f(est)h(la)f(fonction)h(d\351\034nie)f(sur)g
FA(R)h FL(par)f FG(sin)c(:)g FF(x)h FE(7!)f FG(sin)13
b FF(x)p FL(.)p 0 TeXcolorgray -293 717 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 44.77168 ] concat

 pgfs


 -293 717
a
 0 setgray
 -293 717 a 0 TeXcolorgray 0 TeXcolorgray 77 x @beginspecial
0 @llx -1 @lly 18 @urx 24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 717 a FH(D\351\034nitions)p 0 TeXcolorgray
0 TeXcolorgray -293 717 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 17.40138 ] concat

 pgfs


 -293 717 a
 0 setgray
 -293 717 a 0
TeXcolorgray -222 816 a

 -222 816 a -222 816 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 28.7255 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 717 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray -293 1041 a
FH(2)112 b(P)m(\351rio)s(dicit\351)p 0 TeXcolorgray -293
1589 a

 -293 1589 a -293 1589 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 56.44531 lineto

 521.58136 56.44531 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 56.44531 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 53.21196 lineto

 0.3985 54.77762 1.6677 56.04681 3.23335 56.04681 curveto

 518.348 56.04681 lineto

 519.91365 56.04681 521.18286 54.77762 521.18286 53.21196 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 53.21196 lineto

 0.3985 54.77762 1.6677 56.04681 3.23335 56.04681 curveto

 518.348 56.04681 lineto

 519.91365 56.04681 521.18286 54.77762 521.18286 53.21196 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 53.21196 lineto

 0.3985 54.77762 1.6677 56.04681 3.23335 56.04681 curveto

 518.348 56.04681 lineto

 519.91365 56.04681 521.18286 54.77762 521.18286 53.21196 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 1589 a
 0 setgray
 -293 1589 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -115 x FL(P)n(our)35 b(tout)h(r\351el)e
FF(x)p FL(,)i FG(cos)13 b(\()q FF(x)19 b FG(+)f(2)p FF(\031)s
FG(\))36 b(=)g(cos)o(\()p FF(x)p FG(\))g FL(et)g FG(sin)14
b(\()p FF(x)19 b FG(+)f(2)p FF(\031)s FG(\))36 b(=)g(sin\()p
FF(x)p FG(\))p FL(.)h(On)e(dit)h(que)f(les)g(fonctions)g(cosin)n(us)g
(et)g(sin)n(us)g(son)n(t)-293 1573 y(p)r(\351rio)r(diques)27
b(de)h(p)r(\351rio)r(de)f FG(2)p FF(\031)s FL(.)p 0 TeXcolorgray
-293 1589 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 37.41031 ] concat

 pgfs


 -293 1589 a
 0 setgray
 -293 1589 a 0 TeXcolorgray
0 TeXcolorgray 78 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 1589 a FH(P)m(\351rio)s(dicit\351)p
0 TeXcolorgray 0 TeXcolorgray -293 1589 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 13.72069 ] concat

 pgfs


 -293 1589
a
 0 setgray
 -293 1589 a 0 TeXcolorgray -222 1658 a

 -222 1658 a
-222 1658 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 21.36412 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray -293 1589 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc



0 TeXcolorgray 0 TeXcolorgray -293 1813 a FD(Remarque)32
b(3)p 0 TeXcolorgray -293 1912 a FL(La)19 b(fonction)h(cosin)n(us)f(\()
h(ou)g(la)f(fonction)h(sin)n(us)g(\))g(est)g(en)n(ti\350remen)n(t)f
(conn)n(ue)h(d\350s)f(qu'on)h(conna\356t)f(ses)h(v)-5
b(aleurs)19 b(sur)g(un)h(in)n(terv)-5 b(alle)19 b FG([)q
FF(a)p FG(;)14 b FF(a)k FG(+)g(2)p FF(\031)s FG([)-293
2012 y FL(d'amplitude)28 b FG(2)p FF(\031)s FL(.)-168
2211 y(D'un)f(p)r(oin)n(t)g(de)h(vue)e(graphique,)g(les)h(courb)r(es)f
(repr\351sen)n(tativ)n(es)f(des)h(fonctions)h(cosin)n(us)f(ou)h(sin)n
(us)f(son)n(t)g(inc)n(hang\351es)g(par)g(la)h(trans-)-293
2311 y(lation)g(de)h(v)n(ecteur)f FG(2)p FF(\031)436
2275 y FE(\000)-65 b(!)464 2311 y FF({)-293 2543 y FH(3)112
b(parit\351)p 0 TeXcolorgray -293 3444 a

 -293 3444 a
-293 3444 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 96.29639 lineto

 521.58136 96.29639 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 96.29639 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 93.06303 lineto

 0.3985 94.6287 1.6677 95.89789 3.23335 95.89789 curveto

 518.348 95.89789 lineto

 519.91365 95.89789 521.18286 94.6287 521.18286 93.06303 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 93.06303 lineto

 0.3985 94.6287 1.6677 95.89789 3.23335 95.89789 curveto

 518.348 95.89789 lineto

 519.91365 95.89789 521.18286 94.6287 521.18286 93.06303 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 93.06303 lineto

 0.3985 94.6287 1.6677 95.89789 3.23335 95.89789 curveto

 518.348 95.89789 lineto

 519.91365 95.89789 521.18286 94.6287 521.18286 93.06303 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs



-293 3444 a
 0 setgray
 -293 3444 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -169 2996 a FE(\017)p 0
TeXcolorgray 42 w FL(P)n(our)27 b(tout)g(r\351el)g FF(x)p
FL(,)i FG(cos)o(\()p FE(\000)p FF(x)p FG(\))23 b(=)g(cos)o(\()p
FF(x)p FG(\))p FL(.)29 b(On)e(dit)h(que)g(la)f(fonction)h(cosin)n(us)e
(est)i(paire.)-85 3129 y(La)f(courb)r(e)g(repr\351sen)n(tativ)n(e)e(de)
j(la)f(fonction)h(cosin)n(us)e(admet)i(l'axe)f(des)g(ordonn\351es)f(p)r
(our)h(axe)g(de)h(sym\351trie.)p 0 TeXcolorgray -169
3295 a FE(\017)p 0 TeXcolorgray 42 w FL(P)n(our)f(tout)g(r\351el)g
FF(x)p FL(,)i FG(sin\()p FE(\000)p FF(x)p FG(\))23 b(=)g
FE(\000)14 b FG(sin)o(\()p FF(x)p FG(\))p FL(.)29 b(On)e(dit)h(que)g
(la)f(fonction)h(sin)n(us)f(est)g(impaire.)-85 3428 y(La)g(courb)r(e)g
(repr\351sen)n(tativ)n(e)e(de)j(la)f(fonction)h(sin)n(us)f(admet)g
(l'axe)g(l'origine)g(du)h(rep)r(\350re)e(p)r(our)i(cen)n(tre)e(de)i
(sym\351trie.)p 0 TeXcolorgray -293 3444 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 77.26138 ] concat

 pgfs


 -293 3444
a
 0 setgray
 -293 3444 a 0 TeXcolorgray 0 TeXcolorgray 77 x @beginspecial
0 @llx -1 @lly 18 @urx 24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 3444 a FH(P)m(arit\351)p 0 TeXcolorgray
0 TeXcolorgray -293 3444 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 33.64622 ] concat

 pgfs


 -293 3444 a
 0 setgray
 -293 3444 a
0 TeXcolorgray -222 3678 a

 -222 3678 a -222 3678 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 61.2152 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 3444 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 3667 a FD(Remarque)k(4)p 0 TeXcolorgray
-293 3767 a FL(Il)c(su\036t)g(d'\351tudier)f(les)h(fonctions)f(cosin)n
(us)g(et)g(sin)n(us)g(sur)g(l'in)n(terv)-5 b(alle)28
b FG([0;)14 b FF(\031)s FG(])27 b FL(p)r(our)g(les)h(conna\356tre)e
(sur)h FG([)p FE(\000)p FF(\031)s FG(;)14 b FF(\031)s
FG(])28 b FL(\340)f(l'aide)g(de)h(la)f(parit\351)g(et)-293
3866 y(en\034n)h(sur)f FA(R)h FL(\340)f(l'aide)g(de)h(la)f(p)r(\351rio)
r(dicit\351.)-293 4099 y FH(4)112 b(v)-6 b(ariation)-168
4869 y
tx@Dict begin { 87.8476 85.35823 } PutCoor PutBegin  end
 -168 4869 a -332 4890 a FL(Sur)27 b FG([0;)14
b FF(\031)s FG(])-168 4869 y
tx@Dict begin  PutEnd  end
 -168 4869 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray   0. true 0.0 0.0 175.69519
71.13185 0 Frame  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 175.69519 42.67911 0.0 42.67911   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 40.54504 71.13185 40.54504 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -168 4869 a
tx@Dict begin { 20.27252 56.90549 } PutCoor PutBegin  end
 -168
4869 a -192 4887 a FF(x)-168 4869 y
tx@Dict begin  PutEnd  end
 -168 4869 a -168
4869 a
tx@Dict begin { 54.06006 56.90549 } PutCoor PutBegin  end
 -168 4869 a -189 4896 a FG(0)-168 4869 y
tx@Dict begin  PutEnd  end
 -168
4869 a -168 4869 a
tx@Dict begin { 108.12012 56.90549 } PutCoor PutBegin  end
 -168 4869 a -193 4830 a FF(\031)p
-193 4868 51 4 v -189 4944 a FG(2)-168 4869 y
tx@Dict begin  PutEnd  end
 -168 4869
a -168 4869 a
tx@Dict begin { 162.18018 56.90549 } PutCoor PutBegin  end
 -168 4869 a -193 4887 a FF(\031)-168 4869
y
tx@Dict begin  PutEnd  end
 -168 4869 a -168 4869 a
tx@Dict begin { 20.27252 21.33955 } PutCoor PutBegin  end
 -168 4869 a -280 4890 a FG(cos\()p
FF(x)p FG(\))-168 4869 y
tx@Dict begin  PutEnd  end
 -168 4869 a -168 4869 a
tx@Dict begin { 54.06006 34.1432 } PutCoor PutBegin  end
 -168
4869 a -189 4896 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@A 16 {InitRnode } /NodeScale {} def NewNode end  end
 -189 4896 a FG(1)-168 4869 y
tx@Dict begin  PutEnd  end
 -168
4869 a -168 4869 a
tx@Dict begin { 162.18018 8.5359 } PutCoor PutBegin  end
 -168 4869 a -221 4892 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.83333 12.77782 6.3889 2.80556
} false /N@B 16 {InitRnode } /NodeScale {} def NewNode end  end
 -221 4892
a FE(\000)p FG(1)-168 4869 y
tx@Dict begin  PutEnd  end
 -168 4869 a -168 4869 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end

-168 4869 a -168 4869 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -168 4869 a -189 4896 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
SLW 1  setgray  0. true 3.0 neg 3.0 neg 7.99878 9.4151 .5 Frame  gsave
1  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial FL(0)-168 4869 y
tx@Dict begin PutEnd  end
 -168 4869 a
1697 4869 a
tx@Dict begin { 141.90765 85.35823 } PutCoor PutBegin  end
 1697 4869 a 1497 4890 a FL(Sur)27 b FG([)p
FE(\000)p FF(\031)s FG(;)14 b FF(\031)s FG(])1697 4869
y
tx@Dict begin  PutEnd  end
 1697 4869 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray   0. true 0.0 0.0 283.8153
71.13185 0 Frame  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 283.8153 42.67911 0.0 42.67911   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 40.54504 71.13185 40.54504 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1697 4869 a
tx@Dict begin { 20.27252 56.90549 } PutCoor PutBegin  end
 1697 4869 a 1673
4887 a FF(x)1697 4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin { 54.06006 56.90549 } PutCoor PutBegin  end
 1697
4869 a 1640 4890 a FE(\000)p FF(\031)1697 4869 y
tx@Dict begin  PutEnd  end
 1697
4869 a 1697 4869 a
tx@Dict begin { 108.12012 56.90549 } PutCoor PutBegin  end
 1697 4869 a 1630 4887 a FE(\000)1705
4830 y FF(\031)p 1705 4868 51 4 v 1709 4944 a FG(2)1697
4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin { 162.18018 56.90549 } PutCoor PutBegin  end
 1697 4869 a 1676 4896
a FG(0)1697 4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin { 216.24023 56.90549 } PutCoor PutBegin  end
 1697 4869
a 1672 4830 a FF(\031)p 1672 4868 51 4 v 1676 4944 a
FG(2)1697 4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin { 270.3003 56.90549 } PutCoor PutBegin  end
 1697 4869 a
1672 4887 a FF(\031)1697 4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869
a
tx@Dict begin { 20.27252 21.33955 } PutCoor PutBegin  end
 1697 4869 a 1586 4890 a FG(cos)o(\()p FF(x)p FG(\))1697
4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin { 54.06006 8.5359 } PutCoor PutBegin  end
 1697 4869 a 1644 4892
a
tx@Dict begin  tx@NodeDict begin {6.44444 0.83333 12.77782 6.3889 2.80556
} false /N@A 16 {InitRnode } /NodeScale {} def NewNode end  end
 1644 4892 a FE(\000)p FG(1)1697 4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a
1697 4869 a
tx@Dict begin { 162.18018 34.1432 } PutCoor PutBegin  end
 1697 4869 a 1644 4892 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.83333 12.77782 6.3889 2.80556
} false /N@B 16 {InitRnode } /NodeScale {} def NewNode end  end
 1644 4892 a FE(\000)p
FG(1)1697 4869 y
tx@Dict begin  PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin { 270.3003 8.5359 } PutCoor PutBegin  end
 1697 4869 a
1644 4892 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.83333 12.77782 6.3889 2.80556
} false /N@C 16 {InitRnode } /NodeScale {} def NewNode end  end
 1644 4892 a FE(\000)p FG(1)1697 4869 y
tx@Dict begin  PutEnd  end
 1697
4869 a 1697 4869 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1697 4869 a 1697 4869 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1697 4869
a 1676 4896 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
SLW 1  setgray  0. true 3.0 neg 3.0 neg 7.99878 9.4151 .5 Frame  gsave
1  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
FL(0)1697 4869 y
tx@Dict begin PutEnd  end
 1697 4869 a 1697 4869 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@B /N@C InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1697 4869 a
1697 4869 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1697 4869 a 1676 4896 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
SLW 1  setgray  0. true 3.0 neg 3.0 neg 7.99878 9.4151 .5 Frame  gsave
1  setgray  1. .setopacityalpha  fill  grestore end


@endspecial FL(0)1697 4869 y
tx@Dict begin PutEnd  end
 1697 4869 a -168 5518 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray   0. true 0.0 0.0 175.69519
71.13185 0 Frame  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 175.69519 42.67911 0.0 42.67911   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 40.54504 71.13185 40.54504 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-168 5518 a
tx@Dict begin { 20.27252 56.90549 } PutCoor PutBegin  end
 -168 5518 a -192 5536 a FF(x)-168 5518 y
tx@Dict begin  PutEnd  end

-168 5518 a -168 5518 a
tx@Dict begin { 54.06006 56.90549 } PutCoor PutBegin  end
 -168 5518 a -189 5545 a FG(0)-168
5518 y
tx@Dict begin  PutEnd  end
 -168 5518 a -168 5518 a
tx@Dict begin { 108.12012 56.90549 } PutCoor PutBegin  end
 -168 5518 a -193 5479
a FF(\031)p -193 5516 51 4 v -189 5592 a FG(2)-168 5518
y
tx@Dict begin  PutEnd  end
 -168 5518 a -168 5518 a
tx@Dict begin { 162.18018 56.90549 } PutCoor PutBegin  end
 -168 5518 a -193 5536 a FF(\031)-168
5518 y
tx@Dict begin  PutEnd  end
 -168 5518 a -168 5518 a
tx@Dict begin { 20.27252 21.33955 } PutCoor PutBegin  end
 -168 5518 a -275 5539
a FG(sin\()p FF(x)p FG(\))-168 5518 y
tx@Dict begin  PutEnd  end
 -168 5518 a -168
5518 a
tx@Dict begin { 54.06006 8.5359 } PutCoor PutBegin  end
 -168 5518 a -189 5545 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@A 16 {InitRnode } /NodeScale {} def NewNode end  end
 -189 5545 a FG(0)-168
5518 y
tx@Dict begin  PutEnd  end
 -168 5518 a -168 5518 a
tx@Dict begin { 108.12012 34.1432 } PutCoor PutBegin  end
 -168 5518 a -189 5545
a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@B 16 {InitRnode } /NodeScale {} def NewNode end  end
 -189 5545 a FG(1)-168 5518 y
tx@Dict begin  PutEnd  end
 -168 5518 a -168 5518
a
tx@Dict begin { 162.18018 8.5359 } PutCoor PutBegin  end
 -168 5518 a -189 5545 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@C 16 {InitRnode } /NodeScale {} def NewNode end  end
 -189 5545 a FG(0)-168 5518
y
tx@Dict begin  PutEnd  end
 -168 5518 a -168 5518 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -168 5518 a -168 5518 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@B /N@C InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -168
5518 a 1865 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray   0. true 0.0 0.0 283.8153
71.13185 0 Frame  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 283.8153 42.67911 0.0 42.67911   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 40.54504 71.13185 40.54504 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.5 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1697 5518 a
tx@Dict begin { 20.27252 56.90549 } PutCoor PutBegin  end
 1697 5518 a 1673
5536 a FF(x)1697 5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin { 54.06006 56.90549 } PutCoor PutBegin  end
 1697
5518 a 1640 5539 a FE(\000)p FF(\031)1697 5518 y
tx@Dict begin  PutEnd  end
 1697
5518 a 1697 5518 a
tx@Dict begin { 108.12012 56.90549 } PutCoor PutBegin  end
 1697 5518 a 1630 5535 a FE(\000)1705
5479 y FF(\031)p 1705 5516 51 4 v 1709 5592 a FG(2)1697
5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin { 162.18018 56.90549 } PutCoor PutBegin  end
 1697 5518 a 1676 5545
a FG(0)1697 5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin { 216.24023 56.90549 } PutCoor PutBegin  end
 1697 5518
a 1672 5479 a FF(\031)p 1672 5516 51 4 v 1676 5592 a
FG(2)1697 5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin { 270.3003 56.90549 } PutCoor PutBegin  end
 1697 5518 a
1672 5536 a FF(\031)1697 5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518
a
tx@Dict begin { 20.27252 21.33955 } PutCoor PutBegin  end
 1697 5518 a 1590 5539 a FG(sin\()p FF(x)p FG(\))1697
5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin { 54.06006 34.1432 } PutCoor PutBegin  end
 1697 5518 a 1676 5545
a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@A 16 {InitRnode } /NodeScale {} def NewNode end  end
 1676 5545 a FG(0)1697 5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518
a
tx@Dict begin { 108.12012 8.5359 } PutCoor PutBegin  end
 1697 5518 a 1644 5541 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.83333 12.77782 6.3889 2.80556
} false /N@B 16 {InitRnode } /NodeScale {} def NewNode end  end
 1644 5541 a FE(\000)p FG(1)1697
5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin { 216.24023 34.1432 } PutCoor PutBegin  end
 1697 5518 a 1676 5545
a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@C 16 {InitRnode } /NodeScale {} def NewNode end  end
 1676 5545 a FG(1)1697 5518 y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518
a
tx@Dict begin { 270.3003 8.5359 } PutCoor PutBegin  end
 1697 5518 a 1676 5545 a
tx@Dict begin  tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.22221 }
false /N@D 16 {InitRnode } /NodeScale {} def NewNode end  end
 1676 5545 a FG(0)1697 5518
y
tx@Dict begin  PutEnd  end
 1697 5518 a 1697 5518 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1697 5518 a 1697 5518 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@B /N@C InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1697
5518 a 1697 5518 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1697 5518 a 1676 5544 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.0
SLW 1  setgray  0. true 3.0 neg 3.0 neg 7.99878 9.4151 .5 Frame  gsave
1  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial FL(0)1697 5518 y
tx@Dict begin PutEnd  end
 1697 5518 a
1697 5518 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 5.0 5.0 0 0 /N@C /N@D InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1697 5518 a 0 TeXcolorgray 3964 6381 a Fz(-8-)p
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray -293
-412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
-92 a FH(5)112 b(courb)s(es)-293 61 y FD(a)96 b(fonction)31
b(cosin)m(us)1839 454 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 241.34395  0 -241.34395  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -241.34395
 241.34395  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-34.1432  def /maxTickline 42.67911  def /dT 2929039 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 89.38675  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 89.38675
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 42.67911
0.0 -34.1432   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 241.34395
0.0 -241.34395 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 42.67911  0 -34.1432  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -34.1432
 42.67911  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-241.34395  def /maxTickline 241.34395  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 42.67911
0.0 -34.1432   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 241.34395
0.0 -241.34395 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1818 599 a FG(0)2185 543 y FF(\031)p
2185 580 51 4 v 2189 656 a FG(2)2556 599 y FF(\031)2907
543 y FG(3)p FF(\031)p 2907 580 92 4 v 2932 656 a FG(2)3278
599 y(2)p FF(\031)3649 543 y FG(5)p FF(\031)p 3649 580
V 3674 656 a FG(2)1411 543 y FE(\000)p FF(\031)p 1411
580 115 4 v 1448 656 a FG(2)1040 599 y FE(\000)p FF(\031)648
543 y FE(\000)p FG(3)p FF(\031)p 648 580 157 4 v 706
656 a FG(2)277 599 y FE(\000)p FG(2)p FF(\031)-94 543
y FE(\000)p FG(5)p FF(\031)p -94 580 V -37 656 a FG(2)1698
714 y FE(\000)p FG(1)1762 245 y(1)1839 454 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -8.5 def /x1
8.5 def /dx x1 x sub 799 div def /F@pstplot { x RadtoDeg cos } def
/xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false def
xy moveto  799 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul gt
{ moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } if  gsave 1.0 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -3.14159265
def /x1 3.14159265 def /dx x1 x sub 399 div def /F@pstplot { x RadtoDeg
cos } def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  399 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.5 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -89.38675 34.1432 -89.38675
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 89.38675 34.1432 89.38675
-28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale
 false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul
/a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg
a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore 0
h a sub moveto   EndArrow  } def /ArrowInside { } def  0.5 SLW 0.6
0 0.48  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false 0.4
1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0
h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub moveto
  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  } def /ArrowInside { } def  [ 89.38675 34.1432 -89.38675
34.1432   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1839 454 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 1839 454 a 1839 454 a
tx@Dict begin { 0.0 34.1432 } PutCoor PutBegin  end
 1839 454 a 0.6 0 0.48
TeXcolorrgb 1793 413 a FG(2)p FF(\031)p 0 TeXcolorgray
1839 454 a
tx@Dict begin  PutEnd  end
 1839 454 a -293 953 a FD(b)96 b(fonction)31
b(sin)m(us)1839 1346 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 241.34395  0 -241.34395  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -241.34395
 241.34395  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-34.1432  def /maxTickline 42.67911  def /dT 2929039 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 89.38675  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 89.38675
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 42.67911
0.0 -34.1432   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 241.34395
0.0 -241.34395 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 42.67911  0 -34.1432  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -34.1432
 42.67911  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-241.34395  def /maxTickline 241.34395  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 42.67911
0.0 -34.1432   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 241.34395
0.0 -241.34395 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1818 1491 a FG(0)2185 1435 y
FF(\031)p 2185 1472 51 4 v 2189 1548 a FG(2)2556 1491
y FF(\031)2907 1435 y FG(3)p FF(\031)p 2907 1472 92 4
v 2932 1548 a FG(2)3278 1491 y(2)p FF(\031)3649 1435
y FG(5)p FF(\031)p 3649 1472 V 3674 1548 a FG(2)1411
1435 y FE(\000)p FF(\031)p 1411 1472 115 4 v 1448 1548
a FG(2)1040 1491 y FE(\000)p FF(\031)648 1435 y FE(\000)p
FG(3)p FF(\031)p 648 1472 157 4 v 706 1548 a FG(2)277
1491 y FE(\000)p FG(2)p FF(\031)-94 1435 y FE(\000)p
FG(5)p FF(\031)p -94 1472 V -37 1548 a FG(2)1698 1605
y FE(\000)p FG(1)1762 1136 y(1)1839 1346 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -8.5 def /x1
8.5 def /dx x1 x sub 799 div def /F@pstplot { x RadtoDeg sin } def
/xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit false def
xy moveto  799 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul gt
{ moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } if  gsave 1.0 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -3.14159265
def /x1 3.14159265 def /dx x1 x sub 399 div def /F@pstplot { x RadtoDeg
sin } def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  399 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.5 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -89.38675 34.1432 -89.38675
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add
dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.5 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 89.38675 34.1432 89.38675
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add
dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale
 false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul
/a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg
a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore 0
h a sub moveto   EndArrow  } def /ArrowInside { } def  0.5 SLW 0.6
0 0.48  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false 0.4
1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0
h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub moveto
  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  } def /ArrowInside { } def  [ 89.38675 34.1432 -89.38675
34.1432   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.5 SLW 0.6 0 0.48  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1839 1346 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 1839 1346 a 1839 1346 a
tx@Dict begin { 0.0 34.1432 } PutCoor PutBegin  end
 1839 1346 a 0.6 0 0.48
TeXcolorrgb 1793 1304 a FG(2)p FF(\031)p 0 TeXcolorgray
1839 1346 a
tx@Dict begin  PutEnd  end
 1839 1346 a -293 1904 a FJ(VI)t(I)132 b(F)-11
b(onction)43 b Fd(t)34 b Fc(7!)f Fd(A)20 b Fb(cos)o(\()p
Fd(!)t(t)27 b Fb(+)f Fd(')p Fb(\))43 b FJ(et)h Fd(t)33
b Fc(7!)g Fd(A)20 b Fb(cos\()p Fd(!)t(t)26 b Fb(+)h Fd(')p
Fb(\))-168 2086 y FL(En)c(ph)n(ysique,)f(de)g(nom)n(breux)g
(ph\351nom\350nes)g(son)n(t)g(li\351s)g(\340)h(la)f(propagation)e
(d'onde)j(:)f(le)h(son,)f(la)g(lumi\350re,)g(...Les)h(grandeurs)d(asso)
r(ci\351es)-293 2185 y(\340)27 b(ces)g(ondes)g(p)r(euv)n(en)n(t)h
(\352tre)f(math\351matis\351es)g(par)g(des)g(fonctions)h(sin)n
(uso\357dales)d(du)j(t)n(yp)r(e)g FF(t)23 b FE(7!)g FF(A)14
b FG(cos)o(\()p FF(!)s(t)19 b FG(+)f FF(')p FG(\))28
b FL(et)g FF(t)23 b FE(7!)g FF(A)14 b FG(sin\()p FF(!)s(t)k
FG(+)g FF(')p FG(\))-293 2306 y FL(On)27 b(a)h(repr\351sen)n(t\351)e
(ci)h(dessous)g(la)g(fonction)h FF(t)23 b FE(7!)g FG(3)14
b(cos)n(\(0)p FF(:)p FG(5)p FF(t)k FG(+)1712 2250 y FF(\031)p
1712 2287 51 4 v 1716 2363 a FG(2)1772 2306 y(\))-168
4261 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 569.05457 a add def
/d 0.0 a add neg def /h 227.62195 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -168 4261 a 2194 3316 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 446.93344  0 -446.93344  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -446.93344
 446.93344  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-113.81097  def /maxTickline 113.81097  def /dT 1464518 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 44.69334  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 44.69334
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.81097
0.0 -113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 446.93344
0.0 -446.93344 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.81097  0 -113.81097  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -113.81097
 113.81097  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-446.93344  def /maxTickline 446.93344  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.81097
0.0 -113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 446.93344
0.0 -446.93344 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2173 3501 a FG(0)2354 3445 y
FF(\031)p 2354 3482 51 4 v 2358 3558 a FG(2)2540 3501
y FF(\031)2704 3445 y FG(3)p FF(\031)p 2704 3482 92 4
v 2730 3558 a FG(2)2890 3501 y(2)p FF(\031)3076 3445
y FG(5)p FF(\031)p 3076 3482 V 3101 3558 a FG(2)3261
3501 y(3)p FF(\031)3447 3445 y FG(7)p FF(\031)p 3447
3482 V 3472 3558 a FG(2)3632 3501 y(4)p FF(\031)3818
3445 y FG(9)p FF(\031)p 3818 3482 V 3843 3558 a FG(2)4003
3501 y(5)p FF(\031)4168 3445 y FG(11)p FF(\031)p 4168
3482 134 4 v 4214 3558 a FG(2)4374 3501 y(6)p FF(\031)4539
3445 y FG(13)p FF(\031)p 4539 3482 V 4585 3558 a FG(2)4745
3501 y(7)p FF(\031)4910 3445 y FG(15)p FF(\031)p 4910
3482 V 4956 3558 a FG(2)5116 3501 y(8)p FF(\031)5281
3445 y FG(17)p FF(\031)p 5281 3482 V 5327 3558 a FG(2)5487
3501 y(9)p FF(\031)5652 3445 y FG(19)p FF(\031)p 5652
3482 V 5698 3558 a FG(2)1951 3445 y FE(\000)p FF(\031)p
1951 3482 115 4 v 1988 3558 a FG(2)1765 3501 y FE(\000)p
FF(\031)1559 3445 y FE(\000)p FG(3)p FF(\031)p 1559 3482
157 4 v 1616 3558 a FG(2)1374 3501 y FE(\000)p FG(2)p
FF(\031)1188 3445 y FE(\000)p FG(5)p FF(\031)p 1188 3482
V 1245 3558 a FG(2)1002 3501 y FE(\000)p FG(3)p FF(\031)817
3445 y FE(\000)p FG(7)p FF(\031)p 817 3482 V 874 3558
a FG(2)631 3501 y FE(\000)p FG(4)p FF(\031)446 3445 y
FE(\000)p FG(9)p FF(\031)p 446 3482 V 503 3558 a FG(2)260
3501 y FE(\000)p FG(5)p FF(\031)54 3445 y FE(\000)p FG(11)p
FF(\031)p 54 3482 198 4 v 132 3558 a FG(2)-111 3501 y
FE(\000)p FG(6)p FF(\031)-317 3445 y FE(\000)p FG(13)p
FF(\031)p -317 3482 V -239 3558 a FG(2)-482 3501 y FE(\000)p
FG(7)p FF(\031)-688 3445 y FE(\000)p FG(15)p FF(\031)p
-688 3482 V -610 3558 a FG(2)-853 3501 y FE(\000)p FG(8)p
FF(\031)-1059 3445 y FE(\000)p FG(17)p FF(\031)p -1059
3482 V -981 3558 a FG(2)-1224 3501 y FE(\000)p FG(9)p
FF(\031)-1430 3445 y FE(\000)p FG(19)p FF(\031)p -1430
3482 V -1352 3558 a FG(2)2013 3576 y FE(\000)p FG(1)2013
3812 y FE(\000)p FG(2)2013 4048 y FE(\000)p FG(3)2013
4285 y FE(\000)p FG(4)2078 3107 y(1)2078 2871 y(2)2078
2635 y(3)2194 3316 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -20 def /x1
20 def /dx x1 x sub 799 div def /F@pstplot (3*cos(0.5*x+3.14159265/2))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 14.22636 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  799 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.5 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
4556 4261 a
currentpoint initclip moveto
 4556 4261 a -293 4494 a FH(1)112 b(Amplitude)p
0 TeXcolorgray -293 4957 a

 -293 4957 a -293 4957 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 43.87949 lineto

 521.58136 43.87949 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 43.87949 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 40.64613 lineto

 0.3985 42.21178 1.6677 43.48097 3.23335 43.48097 curveto

 518.348 43.48097 lineto

 519.91365 43.48097 521.18286 42.21178 521.18286 40.64613 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 40.64613 lineto

 0.3985 42.21178 1.6677 43.48097 3.23335 43.48097 curveto

 518.348 43.48097 lineto

 519.91365 43.48097 521.18286 42.21178 521.18286 40.64613 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 40.64613 lineto

 0.3985 42.21178 1.6677 43.48097 3.23335 43.48097 curveto

 518.348 43.48097 lineto

 519.91365 43.48097 521.18286 42.21178 521.18286 40.64613 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0
TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 4957
a
 0 setgray
 -293 4957 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-16 x FL(L'amplitude)28 b(d'une)g(fonction)f(p)r(\351rio)r(dique)h(est)
f(sa)g(v)-5 b(aleur)27 b(maximale.)p 0 TeXcolorgray -293
4957 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0
TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 24.84448 ] concat

 pgfs


 -293 4957 a
 0 setgray
 -293 4957 a 0 TeXcolorgray 0
TeXcolorgray 78 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 4957 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 4957 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 7.43777 ] concat

 pgfs


 -293 4957 a
 0 setgray
 -293 4957 a
0 TeXcolorgray -222 4973 a

 -222 4973 a -222 4973 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 8.7983 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 4957 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 5515 a

 -293 5515 a -293 5515 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 45.04396 lineto

 521.58136 45.04396 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 45.04396 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 41.81061 lineto

 0.3985 43.37625 1.6677 44.64545 3.23335 44.64545 curveto

 518.348 44.64545 lineto

 519.91365 44.64545 521.18286 43.37625 521.18286 41.81061 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 41.81061 lineto

 0.3985 43.37625 1.6677 44.64545 3.23335 44.64545 curveto

 518.348 44.64545 lineto

 519.91365 44.64545 521.18286 43.37625 521.18286 41.81061 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 41.81061 lineto

 0.3985 43.37625 1.6677 44.64545 3.23335 44.64545 curveto

 518.348 44.64545 lineto

 519.91365 44.64545 521.18286 43.37625 521.18286 41.81061 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0
TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 5515
a
 0 setgray
 -293 5515 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-21 x FL(L'amplitude)h(des)f(fonctions)h FF(t)23 b FE(7!)g
FF(A)14 b FG(cos)o(\()p FF(!)s(t)k FG(+)g FF(')p FG(\))29
b FL(et)e FF(t)d FE(7!)f FF(A)14 b FG(sin\()p FF(!)s(t)k
FG(+)g FF(')p FG(\))28 b FL(est)g FF(A)p FL(.)p 0 TeXcolorgray
-293 5515 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 26.00896 ] concat

 pgfs


 -293 5515 a
 0 setgray
 -293 5515 a 0 TeXcolorgray
0 TeXcolorgray 78 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 5515 a FH(Propri\351t\351)p 0 TeXcolorgray
0 TeXcolorgray -293 5515 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 8.02 ] concat

 pgfs


 -293 5515 a
 0 setgray
 -293 5515 a
0 TeXcolorgray -222 5536 a

 -222 5536 a -222 5536 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 9.96277 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 5515 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 5839 a FH(2)112 b(Phase)p 0 TeXcolorgray 0 TeXcolorgray
3964 6381 a Fz(-9-)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
-293 -412 a FL(1STI2D)1342 b(COURS)28 b(TRIGONOMETRIE)1279
b(2019/2020)p -293 -379 4347 4 v 0 TeXcolorgray -293
390 a

 -293 390 a -293 390 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 67.80397 lineto

 521.58136 67.80397 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 67.80397 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 64.5706 lineto

 0.3985 66.13626 1.6677 67.40546 3.23335 67.40546 curveto

 518.348 67.40546 lineto

 519.91365 67.40546 521.18286 66.13626 521.18286 64.5706 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 64.5706 lineto

 0.3985 66.13626 1.6677 67.40546 3.23335 67.40546 curveto

 518.348 67.40546 lineto

 519.91365 67.40546 521.18286 66.13626 521.18286 64.5706 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 64.5706 lineto

 0.3985 66.13626 1.6677 67.40546 3.23335 67.40546 curveto

 518.348 67.40546 lineto

 519.91365 67.40546 521.18286 66.13626 521.18286 64.5706 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 390 a
 0 setgray
 -293 390 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray -215 x FF(!)s(t)18 b FG(+)g
FF(')28 b FL(est)g(app)r(el\351)f(la)h FD(phase)j(instan)m(tan\351e)h
(du)g(signal)p FL(.)-293 274 y(Si)c FF(t)23 b FG(=)g(0)p
FL(,)k FF(')h FL(est)f(app)r(el\351e)h FD(la)k(phase)f(\340)h
(l'origine)e(du)i(signal)p FL(.)-293 374 y FF(!)e FL(est)e(app)r
(el\351e)f FD(la)32 b(pulsation)f(du)h(signal)p 0 TeXcolorgray
-293 390 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 48.76895 ] concat

 pgfs


 -293 390 a
 0 setgray
 -293 390 a 0 TeXcolorgray 0
TeXcolorgray 77 x @beginspecial 0 @llx -1 @lly 18 @urx
24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 390 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 390 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 19.40001 ] concat

 pgfs


 -293 390 a
 0 setgray
 -293 390 a 0
TeXcolorgray -222 506 a

 -222 506 a -222 506 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 32.72276 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
-293 390 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray
-293 614 a FD(Remarque)g(5)p 0 TeXcolorgray -293 713
a FL(En)c(ph)n(ysique,)f(la)h(phase)f(s'exprime)g(en)g(radians)f(et)i
(la)f(pulsation)h(en)f(radians)f(par)h(seconde.)-293
896 y(.)-293 1128 y FH(3)112 b(P)m(\351rio)s(de)37 b(et)h(fr\351quence)
p 0 TeXcolorgray -293 1767 a

 -293 1767 a -293 1767 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 64.88391 lineto

 521.58136 64.88391 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 64.88391 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 61.65056 lineto

 0.3985 63.2162 1.6677 64.4854 3.23335 64.4854 curveto

 518.348 64.4854 lineto

 519.91365 64.4854 521.18286 63.2162 521.18286 61.65056 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{0 0 0.3 0 setcmykcolor}def

 0.3985 3.23335 moveto

 0.3985 61.65056 lineto

 0.3985 63.2162 1.6677 64.4854 3.23335 64.4854 curveto

 518.348 64.4854 lineto

 519.91365 64.4854 521.18286 63.2162 521.18286 61.65056 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 61.65056 lineto

 0.3985 63.2162 1.6677 64.4854 3.23335 64.4854 curveto

 518.348 64.4854 lineto

 519.91365 64.4854 521.18286 63.2162 521.18286 61.65056 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 1767
a
 0 setgray
 -293 1767 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-261 1576 a FD(La)33 b(p)s(\351rio)s(de)d(T)e FL(d'une)g(fonction)f
(est)h(l'in)n(terv)-5 b(alle)27 b(p)r(our)g(lequel)h(la)f(courb)r(e)g
(de)g(la)h(fonction)f(se)g(repro)r(duit)g(\340)h(l'iden)n(tique.)-293
1710 y(La)f(fr\351quence)g FF(f)37 b FL(est)27 b(le)h(nom)n(bre)e(de)i
(p)r(\351rio)r(des)f(par)g(seconde)g(.)g(On)h(a)f FF(f)32
b FG(=)2118 1654 y(1)p 2109 1691 61 4 v 2109 1767 a FF(T)p
0 TeXcolorgray -293 1767 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 45.8489 ] concat

 pgfs


 -293 1767 a
 0 setgray
 -293 1767 a
0 TeXcolorgray 0 TeXcolorgray 77 x @beginspecial 0 @llx
-1 @lly 18 @urx 24 @ury 169 @rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 1767 a FH(D\351\034nition)p 0 TeXcolorgray
0 TeXcolorgray -293 1767 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 17.93999 ] concat

 pgfs


 -293 1767 a
 0 setgray
 -293 1767 a
0 TeXcolorgray -222 1870 a

 -222 1870 a -222 1870 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 29.8027 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 1767 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 1990 a FD(Remarque)g(6)p 0 TeXcolorgray
-293 2090 a FL(En)c(ph)n(ysique,)f(la)h(p)r(\351rio)r(de)f
FF(T)39 b FL(s'exprime)27 b(en)g(secondes)g(et)h(la)f(fr\351quence)g
FF(f)36 b FL(en)28 b(Hertz\(Hz\))-293 2272 y(.)p 0 TeXcolorgray
-293 2823 a

 -293 2823 a -293 2823 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 save

 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 55.0755 lineto

 521.58136 55.0755 lineto

 521.58136 0.0 lineto

 closepath

 521.58136 55.0755 moveto

 clip

 newpath

 save

 save

 restore

 0.3985 3.23335 moveto

 0.3985 51.84215 lineto

 0.3985 53.40779 1.6677 54.67699 3.23335 54.67699 curveto

 518.348 54.67699 lineto

 519.91365 54.67699 521.18286 53.40779 521.18286 51.84215 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 clip

 newpath

 save

 save

 /pgffc{1 0.75 0.75 setrgbcolor}def

 0.3985 3.23335 moveto

 0.3985 51.84215 lineto

 0.3985 53.40779 1.6677 54.67699 3.23335 54.67699 curveto

 518.348 54.67699 lineto

 519.91365 54.67699 521.18286 53.40779 521.18286 51.84215 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 restore

 restore

 save

 save

 /pgfsc{0 setgray}def

 0.79701 pgfw

 0.3985 3.23335 moveto

 0.3985 51.84215 lineto

 0.3985 53.40779 1.6677 54.67699 3.23335 54.67699 curveto

 518.348 54.67699 lineto

 519.91365 54.67699 521.18286 53.40779 521.18286 51.84215 curveto

 521.18286 3.23335 lineto

 521.18286 1.6677 519.91365 0.3985 518.348 0.3985 curveto

 3.23335 0.3985 lineto

 1.6677 0.3985 0.3985 1.6677 0.3985 3.23335 curveto

 closepath

 gsave pgfsc pgfstr grestore newpath

 restore

 restore

 save

 0.79701 pgfw

 restore

 restore

 save
 0 TeXcolorgray
 save
 0
TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 21.71883 4.78212 ] concat

 pgfs


 -293 2823 a
 0 setgray
 -293 2823 a 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -57 x FL(La)f(p)r(\351rio)r
(de)g(T)h(des)g(fonctions)f FF(t)c FE(7!)g FF(A)14 b
FG(cos)o(\()p FF(!)s(t)k FG(+)g FF(')p FG(\))29 b FL(et)f
FF(t)23 b FE(7!)g FF(A)14 b FG(sin\()p FF(!)s(t)k FG(+)g
FF(')p FG(\))28 b FL(est)2293 2710 y FG(2)p FF(\031)p
2293 2747 92 4 v 2312 2823 a(!)2418 2766 y FG(=)22 b
FF(\031)g FE(\002)c FF(f)p 0 TeXcolorgray -293 2823 a


 pgfr

 restore

0 TeXcolorgray
 restore

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 36.0405 ] concat

 pgfs



-293 2823 a
 0 setgray
 -293 2823 a 0 TeXcolorgray 0 TeXcolorgray
77 x @beginspecial 0 @llx -1 @lly 18 @urx 24 @ury 169
@rwi @setspecial
%%BeginDocument: bc-book.mps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 -1 18 24 
%%HiResBoundingBox: 0.25017 -0.08093 17.18663 23.04938 
%%Creator: MetaPost 1.504
%%CreationDate: 2011.07.24:1107
%%Pages: 1
%%BeginProlog
%%EndProlog
%%Page: 1 1
gsave newpath 0.25017 23.04938 moveto
17.18663 23.04938 lineto
17.18663 -0.08093 lineto
0.25017 -0.08093 lineto
 closepath clip
 1 0.7529 0.7961 setrgbcolor
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto
 closepath fill
 0 0 0 setrgbcolor 0 0.64801 dtransform truncate idtransform setlinewidth pop [] 0 setdash 0 setlinecap
 1 setlinejoin 10 setmiterlimit
newpath 0.78468 18.38951 moveto
2.89828 20.6086 8.58939 22.81926 9.95204 22.72227 curveto
9.95204 20.6761 12.60988 19.37675 14.89224 19.41055 curveto
9.9183 14.97661 5.18063 14.66858 0.9197 16.85397 curveto stroke
 1 1 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 0.78468 18.38951 moveto
1.39641 17.53738 2.93204 16.85397 4.4972 16.95517 curveto
6.4083 17.6724 12.03186 19.37675 14.89224 19.41055 curveto
14.48305 15.52502 15.43646 8.63158 16.8708 6.21 curveto
15.43646 4.87688 7.70345 2.07985 6.16782 2.25282 curveto
4.77141 2.1136 2.86453 2.83078 2.28235 3.92345 curveto
1.02094 8.35736 0.135 15.79503 0.78468 18.38951 curveto
 closepath stroke
newpath 4.4972 16.95517 moveto
4.22719 12.58882 5.11313 6.21 6.16782 2.25282 curveto stroke
 0 0.43199 dtransform truncate idtransform setlinewidth pop
newpath 14.2341 8.89314 moveto
14.81633 6.75845 10.84224 5.20595 9.47112 7.37016 curveto stroke
 1 1 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto
 closepath fill
 0 0 0 setrgbcolor
newpath 10.40346 12.22594 moveto
14.22568 12.93896 15.0441 10.38235 11.08687 9.42892 curveto stroke
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto
 closepath fill
newpath 12.33568 16.95517 moveto
12.60988 16.47845 12.60988 15.73175 12.50858 15.31831 curveto
12.40738 14.90489 12.20068 14.82054 11.99818 15.1833 curveto
11.79146 15.54187 11.58475 16.34767 11.65646 16.82018 curveto
11.72395 17.29266 12.06567 17.43187 12.33568 16.95517 curveto stroke
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto
 closepath fill
newpath 7.97768 15.85411 moveto
8.60205 15.91739 8.6611 14.68132 8.47548 14.04002 curveto
8.29408 13.39882 7.86798 13.3566 7.63596 13.95569 curveto
7.3997 14.55054 7.35751 15.7908 7.97768 15.85411 curveto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 12.77437 17.66818 moveto
12.39053 18.5161 11.07845 17.98883 10.9308 17.02267 curveto stroke
newpath 8.47548 16.2633 moveto
8.0958 17.11133 6.77954 16.58397 6.63611 15.61781 curveto stroke
newpath 2.57344 8.0747 moveto
4.0036 8.2772 lineto stroke
newpath 2.39626 8.65689 moveto
2.6325 7.42923 lineto stroke
newpath 2.19376 10.29376 moveto
2.36673 9.36142 lineto
3.62392 9.5344 lineto
3.65344 10.35283 lineto stroke
 0.216 0 dtransform exch truncate exch idtransform pop setlinewidth
newpath 2.98267 9.47533 moveto
2.98267 9.9436 lineto stroke
 0 0.216 dtransform truncate idtransform setlinewidth pop
newpath 1.86891 12.3145 moveto
2.01657 12.02766 2.16 11.7366 2.42578 11.6691 curveto
2.69157 11.6016 3.0797 11.75766 3.30328 11.72818 curveto
3.52689 11.7028 3.59016 11.49608 3.65344 11.28937 curveto stroke
newpath 2.2486 10.93924 moveto
2.29922 11.18396 2.34985 11.4328 2.51437 11.55516 curveto
2.67891 11.6733 2.95735 11.6733 3.1261 11.78725 curveto
3.29907 11.90108 3.35812 12.13737 3.42142 12.37358 curveto stroke
 0 0.2 dtransform truncate idtransform setlinewidth pop
newpath 19.2184 25.04938 moveto 0 0 rlineto stroke
newpath -1.7816 -0.08841 moveto 0 0 rlineto stroke
grestore
showpage
%%EOF

%%EndDocument
 @endspecial -152 2823 a FH(Propri\351t\351)p 0 TeXcolorgray
0 TeXcolorgray -293 2823 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 2.78955 13.03578 ] concat

 pgfs


 -293 2823 a
 0 setgray
 -293 2823 a
0 TeXcolorgray -222 2885 a

 -222 2885 a -222 2885 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 1.49442 pgfw

 0 setlinecap

 0 setgray

 0.0 19.99431 moveto

 0.0 0.0 lineto

 pgfstr

 restore

 restore

 newpath

 restore

 pgfc


 0
TeXcolorgray -293 2823 a


 pgfr

 restore
 0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray -293 3051 a FD(Metho)s(de)31 b(8)g(\(Sa)m(v)m(oir)i
(d\351terminer)e(les)g(v)-5 b(aleurs)31 b Fa(!)s FD(,)g
Fa(')h FD(et)g Fa(A)g FD(\340)g(partir)h(d'un)e(graphique\))p
0 TeXcolorgray -293 3151 a FL(D\351terminer)c(la)h(fonction)f
FF(f)32 b FE(7!)23 b FF(A)14 b FG(cos)o(\()p FF(!)s(t)19
b FG(+)f FF(')p FG(\))28 b FL(don)n(t)f(la)g(courb)r(e)g(est)h
(donn\351e)f(ci)h(dessous)-168 5148 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 569.05487 a add def
/d 0.0 a add neg def /h 227.62195 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 -168 5148 a 2194
4203 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 893.8675  0 -893.8675  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -893.8675
 893.8675  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-113.81097  def /maxTickline 113.81097  def /dT 2929039 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 89.38675  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 89.38675
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.81097
0.0 -113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 893.8675
0.0 -893.8675 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.81097  0 -113.81097  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -113.81097
 113.81097  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-893.8675  def /maxTickline 893.8675  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-4.0 4.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.81097
0.0 -113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 893.8675
0.0 -893.8675 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
2173 4388 a FG(0)2540 4332 y FF(\031)p 2540 4369 51 4
v 2544 4445 a FG(4)2890 4332 y(2)p FF(\031)p 2890 4369
92 4 v 2915 4445 a FG(4)3261 4332 y(3)p FF(\031)p 3261
4369 V 3286 4445 a FG(4)3653 4388 y FF(\031)4003 4332
y FG(5)p FF(\031)p 4003 4369 V 4028 4445 a FG(4)4374
4332 y(6)p FF(\031)p 4374 4369 V 4399 4445 a FG(4)4745
4332 y(7)p FF(\031)p 4745 4369 V 4770 4445 a FG(4)5116
4388 y(2)p FF(\031)5487 4332 y FG(9)p FF(\031)p 5487
4369 V 5513 4445 a FG(4)5838 4332 y(10)p FF(\031)p 5838
4369 134 4 v 5884 4445 a FG(4)6209 4332 y(11)p FF(\031)p
6209 4369 V 6255 4445 a FG(4)6601 4388 y(3)p FF(\031)6951
4332 y FG(13)p FF(\031)p 6951 4369 V 6997 4445 a FG(4)7322
4332 y(14)p FF(\031)p 7322 4369 V 7368 4445 a FG(4)7693
4332 y(15)p FF(\031)p 7693 4369 V 7739 4445 a FG(4)8085
4388 y(4)p FF(\031)8435 4332 y FG(17)p FF(\031)p 8435
4369 V 8481 4445 a FG(4)8806 4332 y(18)p FF(\031)p 8806
4369 V 8852 4445 a FG(4)9177 4332 y(19)p FF(\031)p 9177
4369 V 9223 4445 a FG(4)1765 4332 y FE(\000)p FF(\031)p
1765 4369 115 4 v 1802 4445 a FG(4)1374 4332 y FE(\000)p
FG(2)p FF(\031)p 1374 4369 157 4 v 1431 4445 a FG(4)1002
4332 y FE(\000)p FG(3)p FF(\031)p 1002 4369 V 1060 4445
a FG(4)652 4388 y FE(\000)p FF(\031)260 4332 y FE(\000)p
FG(5)p FF(\031)p 260 4369 V 318 4445 a FG(4)-111 4332
y FE(\000)p FG(6)p FF(\031)p -111 4369 V -53 4445 a FG(4)-482
4332 y FE(\000)p FG(7)p FF(\031)p -482 4369 V -424 4445
a FG(4)-853 4388 y FE(\000)p FG(2)p FF(\031)-1224 4332
y FE(\000)p FG(9)p FF(\031)p -1224 4369 V -1166 4445
a FG(4)-1616 4332 y FE(\000)p FG(10)p FF(\031)p -1616
4369 198 4 v -1537 4445 a FG(4)-1987 4332 y FE(\000)p
FG(11)p FF(\031)p -1987 4369 V -1909 4445 a FG(4)-2337
4388 y FE(\000)p FG(3)p FF(\031)-2729 4332 y FE(\000)p
FG(13)p FF(\031)p -2729 4369 V -2651 4445 a FG(4)-3100
4332 y FE(\000)p FG(14)p FF(\031)p -3100 4369 V -3022
4445 a FG(4)-3471 4332 y FE(\000)p FG(15)p FF(\031)p
-3471 4369 V -3393 4445 a FG(4)-3821 4388 y FE(\000)p
FG(4)p FF(\031)-4213 4332 y FE(\000)p FG(17)p FF(\031)p
-4213 4369 V -4135 4445 a FG(4)-4584 4332 y FE(\000)p
FG(18)p FF(\031)p -4584 4369 V -4506 4445 a FG(4)-4955
4332 y FE(\000)p FG(19)p FF(\031)p -4955 4369 V -4877
4445 a FG(4)2013 4463 y FE(\000)p FG(1)2013 4699 y FE(\000)p
FG(2)2013 4935 y FE(\000)p FG(3)2013 5172 y FE(\000)p
FG(4)2078 3994 y(1)2078 3758 y(2)2078 3521 y(3)2194 4203
y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   /xGridOffset 0.0 
def /yGridOffset 0.0  def gsave  1. .setopacityalpha  0.4 SLW 0.5 
setgray -284.52744 -113.81097 284.52744 113.81097 -284.52744 -113.81097
28.45274 abs 28.45274 abs 2 10 {} 0 /NimbusSanL-Regu findfont 0 scalefont
setfont Grid grestore   gsave /xGridOffset 0.0 def /yGridOffset 0.0
def  1. .setopacityalpha  0.5 SLW 0  setgray -284.52744 -113.81097
284.52744 113.81097 -284.52744 -113.81097 28.45274 abs 28.45274 abs
1 10 { 0  setgray } 3.0 /NimbusSanL-Regu findfont 3.0 scalefont setfont
Grid grestore  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.5 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -10 def /x1
10 def /dx x1 x sub 799 div def /F@pstplot (2*cos(4*x+3.14159265/4))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  799 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.5 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 4556 5148 a
currentpoint initclip moveto
 4556 5148 a 0 TeXcolorgray
3926 6381 a Fz(-10-)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
